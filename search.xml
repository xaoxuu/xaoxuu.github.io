<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建环境与部署博客的最简便方法</title>
      <link href="/blog/20221126/"/>
      <url>/blog/20221126/</url>
      
        <content type="html"><![CDATA[<h2 id="使用脚本自动化搭建"><a href="#使用脚本自动化搭建" class="headerlink" title="使用脚本自动化搭建"></a>使用脚本自动化搭建</h2><details class="tag-plugin folding" ><summary><span>注：此脚本只适用于 Mac/Linux 平台</span></summary><div class="body"><p>此脚本只适用于 Mac&#x2F;Linux 平台，其中 Mac 平台 <a href="https://xaoxuu.com/wiki/cloud-shell/blog/">全部指令</a> 均支持，而 Linux 平台有部分指令存在兼容性 BUG 有待解决：</p><ul><li><code>blog init</code></li><li><code>blog test xxx</code></li><li><code>blog i 主题</code></li></ul></div></details><h3 id="一键搭建环境"><a href="#一键搭建环境" class="headerlink" title="一键搭建环境"></a>一键搭建环境</h3><p>如果电脑重装了系统，还没有安装 <mark class="tag-plugin mark" color="dark">node.js</mark> 和 <mark class="tag-plugin mark" color="dark">hexo</mark> 环境，可以在终端输入下面这行代码，一键完成前期准备工作：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_1" value="curl -s https://sh.xaox.cc/install | sh -s blog && blog check"><button class="copy-btn" onclick="util.copy(&quot;copy_1&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>此命令会完成以下内容：</p><ol><li>下载并安装 <code>blog</code> 脚本</li><li>由 <code>blog</code> 脚本检测 node.js 环境，如果没有则安装</li><li>由 <code>blog</code> 脚本检测 hexo 环境，如果没有则安装</li></ol><h3 id="一键搭建环境并克隆自己的博客"><a href="#一键搭建环境并克隆自己的博客" class="headerlink" title="一键搭建环境并克隆自己的博客"></a>一键搭建环境并克隆自己的博客</h3><p>如果博客源码是私有仓库，且还没有配置过 ssh 或 git 账号密码，此时需要先配置一下。然后将后面的地址换成自己的博客源码地址：</p><div class="tag-plugin tabs" align="left"id="tab_6""><ul class="nav-tabs"><li class="tab active"><a href="#tab_6-1">已安装blog脚本</a></li><li class="tab"><a href="#tab_6-2">未安装blog脚本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_6-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blog resume https://github.com/user/repo</span><br></pre></td></tr></table></figure><p>此命令会完成以下内容：</p><ol><li>克隆博客及其子模块源码</li><li>执行 <code>npm i</code> 安装依赖</li><li>执行 <code>hexo s</code> 运行博客</li><li>打开 <code>http://localhost:4000</code> 预览博客</li></ol></div><div class="tab-pane" id="tab_6-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s https://sh.xaox.cc/install | sh -s blog &amp;&amp; blog resume https://github.com/user/repo</span><br></pre></td></tr></table></figure><p>此命令会完成以下内容：</p><ol><li>下载并安装 <code>blog</code> 脚本</li><li>由 <code>blog</code> 脚本检测 node.js 环境，如果没有则安装</li><li>由 <code>blog</code> 脚本检测 hexo 环境，如果没有则安装</li><li>克隆博客及其子模块源码</li><li>执行 <code>npm i</code> 安装依赖</li><li>执行 <code>hexo s</code> 运行博客</li><li>打开 <code>http://localhost:4000</code> 预览博客</li></ol></div></div></div><h3 id="测试主题效果"><a href="#测试主题效果" class="headerlink" title="测试主题效果"></a>测试主题效果</h3><p>如果遇到了问题，可以对比主题 demo 查看效果是否正常：</p><div class="tag-plugin tabs" align="left"id="tab_7""><ul class="nav-tabs"><li class="tab active"><a href="#tab_7-1">已安装blog脚本</a></li><li class="tab"><a href="#tab_7-2">未安装blog脚本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_7-1"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_2" value="blog test stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_2&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div><div class="tab-pane" id="tab_7-2"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_3" value="curl -s https://sh.xaox.cc/install | sh -s blog && blog test stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_3&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div></div></div><h3 id="安装其它主题"><a href="#安装其它主题" class="headerlink" title="安装其它主题"></a>安装其它主题</h3><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_4" value="blog i stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_4&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>换成任意主题名，需要是发布到 <a href="https://www.npmjs.com/">npmjs.org</a> 的主题，匹配到 <code>hexo-theme-主题名</code> 的部分。</p><h3 id="附：常用命令"><a href="#附：常用命令" class="headerlink" title="附：常用命令"></a>附：常用命令</h3><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left"><code>blog init</code></td><td align="left">检查并安装环境，然后创建并运行博客</td></tr><tr><td align="left"><code>blog test</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog test stellar</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog test vlts</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog test 主题名</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog i node</code></td><td align="left">安装 node.js</td></tr><tr><td align="left"><code>blog i hexo</code></td><td align="left">安装 hexo</td></tr><tr><td align="left"><code>blog i stellar</code></td><td align="left">安装 stellar 主题，同理换成其它主题名字都可以</td></tr><tr><td align="left"><code>blog i 主题名</code></td><td align="left">安装任意主题</td></tr><tr><td align="left"><code>blog c</code></td><td align="left">同 <code>hexo clean</code> 然后打开 <code>localhost:4000</code></td></tr><tr><td align="left"><code>blog cs</code></td><td align="left">同 <code>hexo clean &amp;&amp; hexo g</code> 然后打开 <code>localhost:4000</code></td></tr><tr><td align="left"><code>blog cgd</code></td><td align="left">同 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add --all &amp;&amp; git commit &amp;&amp; git push origin</code></td></tr><tr><td align="left"><code>blog help</code></td><td align="left">打开文档页面</td></tr></tbody></table><h2 id="设置-npm-run-运行脚本"><a href="#设置-npm-run-运行脚本" class="headerlink" title="设置 npm run 运行脚本"></a>设置 npm run 运行脚本</h2><p>打开博客的 <code>package.json</code> 文件，在 <code>scripts</code> 部分增加这些快捷指令：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;c&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;s&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo server&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;g&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;d&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo deploy&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这样输入 <code>npm run s</code> 就相当于输入 <code>hexo clean &amp;&amp; hexo server</code> 了，除此之外你也可以根据自己的需要增加其他脚本。</p><h2 id="GitHub-Actions-自动化部署"><a href="#GitHub-Actions-自动化部署" class="headerlink" title="GitHub Actions 自动化部署"></a>GitHub Actions 自动化部署</h2><p>通过 GitHub <mark class="tag-plugin mark" color="dark">Actions</mark> 可以只提交源码到仓库，后续流程全部由 CI 自动完成，本质上是完成以下几个步骤：</p><ol><li>checkout 源码</li><li>配置环境</li><li>生成静态文件</li><li>部署到对应平台（GitHub Pages &#x2F; Vercel &#x2F; Server…）</li></ol><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight yaml"><figcaption><span>.github/workflows/auto-deploy.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  [<span class="string">push</span>] <span class="comment"># 触发事件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment"># 运行环境为最新版 Ubuntu</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="comment"># 1. 获取源码</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span> <span class="comment"># 使用 actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span> <span class="comment"># 条件</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else). 当有子模块时切换分支？</span></span><br><span class="line">    <span class="comment"># 2. 配置环境</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">16.13</span><span class="string">.x</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;16.13.x&quot;</span></span><br><span class="line">    <span class="comment"># 3. 生成静态文件</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Public</span> <span class="string">Files</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm i</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string">        hexo clean &amp;&amp; hexo generate</span></span><br><span class="line"><span class="string"></span>    <span class="comment"># 4. 部署到 GitHub 仓库（可选）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">external_repository:</span> <span class="string">xaoxuu/xaoxuu.github.io</span></span><br><span class="line">        <span class="attr">publish_branch:</span> <span class="string">gh-pages</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">commit_message:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">&#x27;github-actions[bot]&#x27;</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">&#x27;github-actions[bot]@users.noreply.github.com&#x27;</span></span><br><span class="line">    <span class="comment"># 5. 部署到服务器（可选）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">Server</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">easingthemes/ssh-deploy@v2</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_SSH_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">ARGS:</span> <span class="string">&quot;-rltgoDzvO --delete&quot;</span></span><br><span class="line">        <span class="attr">EXCLUDE:</span> <span class="string">&quot;.well-known&quot;</span></span><br><span class="line">        <span class="attr">SOURCE:</span> <span class="string">public/</span></span><br><span class="line">        <span class="attr">REMOTE_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">REMOTE_PORT:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_PORT</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">REMOTE_USER:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_USER</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">TARGET:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.TARGET</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="关键参数"><a href="#关键参数" class="headerlink" title="关键参数"></a>关键参数</h3><p>如果要部署到 GitHub 的仓库，需要配置 <code>DEPLOY_KEY</code> 参数，在 Settings -&gt; Secrets 中填写对应的值：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">DEPLOY_KEY:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>如果要部署到服务器，需要配置这些参数，在 Settings -&gt; Secrets 中填写对应的值：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">SERVER_SSH_KEY:</span> <span class="string">第一步本机生成的</span> <span class="string">id_isa</span> <span class="string">文件内容</span></span><br><span class="line"><span class="attr">REMOTE_HOST:</span> <span class="string">服务器地址</span></span><br><span class="line"><span class="attr">REMOTE_PORT:</span> <span class="string">服务器SSH端口</span></span><br><span class="line"><span class="attr">REMOTE_USER:</span> <span class="string">用户名，例如</span> <span class="string">&quot;git&quot;</span></span><br><span class="line"><span class="attr">TARGET:</span> <span class="string">生成的文件路径，例如</span> <span class="string">&quot;/www/wwwroot/xaoxuu.github.io/&quot;</span></span><br></pre></td></tr></table></figure><h2 id="GitHub-Codespaces"><a href="#GitHub-Codespaces" class="headerlink" title="GitHub Codespaces"></a>GitHub Codespaces</h2><p>如果你经常需要在一些临时电脑上写写稿子、预览效果，不能立即发布且需要多端同步，或许这是个不错的选择，相见这篇文章：</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://xaoxuu.com/blog/20221121/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div><span class="cap link fs12">https://xaoxuu.com/blog/20221121/</span></div><div class="bottom"><span class="title">https://xaoxuu.com/blog/20221121/</span><span class="cap desc fs12"></span></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅尝 GitHub Codespaces</title>
      <link href="/blog/20221121/"/>
      <url>/blog/20221121/</url>
      
        <content type="html"><![CDATA[<p>GitHub 最近上线了 <mark class="tag-plugin mark" color="dark">Codespaces</mark> 功能，页面入口如下：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2022/11/21/637b8254e794a.png"/></div></div><p>免费账号可以使用 120 core-hours compute • 15GB storage 额度：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2022/11/21/637b8f99caa22.png"/></div></div><p>感觉挺不错的，赶快来体验吧～</p><h2 class="tag-plugin quot" type="text" id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>现在，每个项目仓库 <mark class="tag-plugin mark" color="dark">Code</mark> 的下拉菜单中多了一个 <mark class="tag-plugin mark" color="dark">Codespaces</mark> 入口，点击就可以创建一个此项目仓库的 Codespaces 如图所示：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2022/11/21/637b90778847c.png" style="width:400px;"/></div></div><p>由于我的博客源码是通过 submodule 方式引用主题的，而且还设置了 GitHub Actions 自动化部署，所以几分钟等待过后 Codespaces 就已经把博客全套环境创建完成了，在这整个过程中不需要自己进行任何配置：</p><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2022/11/21/637b91cfb2d7e.png"/></div></div><p>修改完代码直接提交到当前仓库，就和在本地提交 git 代码一样。</p><h2 class="tag-plugin quot" type="text" id="浅尝小结"><a href="#浅尝小结" class="headerlink" title="浅尝小结"></a>浅尝小结</h2><p>初始化和博客环境搭建过程体验非常好，全程不需要操作。但是速度和本地相比是明显感觉到慢点的，由于我自己写了一个云脚本也可以在新装系统上一键完成全套流程，所以它可能不太适合我用来管理博客。</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://xaoxuu.com/blog/20221126/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div><span class="cap link fs12">https://xaoxuu.com/blog/20221126/</span></div><div class="bottom"><span class="title">https://xaoxuu.com/blog/20221126/</span><span class="cap desc fs12"></span></div></a></div><p>但如果你经常需要在一些临时电脑上写写稿子、预览效果，不能立即发布且需要多端同步，或许这是个不错的选择。</p><p>不知道大家会用它来做什么呢？<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatthink.png"/></span></p>]]></content>
      
      
      <categories>
          
          <category> 探索号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Codespaces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>探索 Stellar 时间线标签的 N 种用法</title>
      <link href="/blog/20221029/"/>
      <url>/blog/20221029/</url>
      
        <content type="html"><![CDATA[<p>时间线标签是 Stellar 最强大的特性之一，它可以以侧边栏组件身份出现在左侧边栏，可以以标签插件形式出现在文章任意位置，以下是笔者能想到的几种常见用法。</p><span id="more"></span><h2 class="tag-plugin quot" type="icon" id="教程与步骤"><a href="#教程与步骤" class="headerlink" title="教程与步骤"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />教程与步骤</h2><div class="tag-plugin split" ><div class="cell" index="0"><p><strong>效果</strong></p><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>第一步：打开 GitHub</p></div><div class="body fs14"><p>打开 <a href="https://github.com/xaoxuu/hexo-theme-stellar/">Stellar</a> 的 GitHub 页面。</p></div></div><div class="timenode" index="1"><div class="header"><p>第二步：点击 Star</p></div><div class="body fs14"><p>如果发现右上角的 Star 还没点亮，就点亮它！</p></div></div></div></div><div class="cell" index="1"><p><strong>源码</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line">&lt;!-- node 第一步：打开 GitHub --&gt;</span><br><span class="line">打开 [Stellar](https://github.com/xaoxuu/hexo-theme-stellar/) 的 GitHub 页面。</span><br><span class="line">&lt;!-- node 第二步：点击 Star --&gt;</span><br><span class="line">如果发现右上角的 Star 还没点亮，就点亮它！</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div><h2 class="tag-plugin quot" type="icon" id="近期动态（说说）"><a href="#近期动态（说说）" class="headerlink" title="近期动态（说说）"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />近期动态（说说）</h2><p>设置 <code>user:xxx</code> 则会只显示某人发的 <code>issue</code> 数据，可以用来展示个人动态。</p><div class="tag-plugin tabs"id="tab_1""><ul class="nav-tabs"><li class="tab active"><a href="#tab_1-1">效果</a></li><li class="tab"><a href="#tab_1-2">源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_1-1"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.xaox.cc/repos/xaoxuu/blog-timeline/issues?per_page=2" user="xaoxuu"></div></div><div class="tab-pane" id="tab_1-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline user:xaoxuu api:https://api.github.com/repos/xaoxuu/blog-timeline/issues?per_page=2 %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div></div><h2 class="tag-plugin quot" type="icon" id="话题讨论"><a href="#话题讨论" class="headerlink" title="话题讨论"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />话题讨论</h2><p>如果不限制 <code>user:xxx</code> 则会显示所有人发的 <code>issue</code> 数据，可通过 <code>labels</code> 筛选用于展示某一话题。</p><div class="tag-plugin tabs"id="tab_2""><ul class="nav-tabs"><li class="tab active"><a href="#tab_2-1">效果</a></li><li class="tab"><a href="#tab_2-2">源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_2-1"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.xaox.cc/repos/xaoxuu/hexo-theme-stellar/issues?labels=1.x+版本&per_page=3"></div></div><div class="tab-pane" id="tab_2-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?labels=1.x+版本&amp;per_page=3 %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div></div><h2 class="tag-plugin quot" type="icon" id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />扩展阅读</h2><p>可设置 <code>hide:title,footer</code> 隐藏标题和底部栏以进行紧凑型布局，例如 <a href="https://xaoxuu.com/wiki/stellar/articles/">#探索号</a> 系列文章：</p><div class="tag-plugin tabs"id="tab_3""><ul class="nav-tabs"><li class="tab active"><a href="#tab_3-1">效果</a></li><li class="tab"><a href="#tab_3-2">源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_3-1"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?state=all&labels=分享&per_page=3" hide="title,footer"></div></div><div class="tab-pane" id="tab_3-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline hide:title,footer api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?state=all&amp;labels=分享&amp;per_page=3 %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div></div><h2 class="tag-plugin quot" type="icon" id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />更新日志</h2><p>不只是 <code>issues</code> 数据，时间线也兼容 <code>releases</code> 数据，可直接用于展示项目更新日志：</p><div class="tag-plugin tabs"id="tab_4""><ul class="nav-tabs"><li class="tab active"><a href="#tab_4-1">效果</a></li><li class="tab"><a href="#tab_4-2">源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_4-1"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=3"></div></div><div class="tab-pane" id="tab_4-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=3 %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div></div><h2 class="tag-plugin quot" type="icon" id="友链文章订阅"><a href="#友链文章订阅" class="headerlink" title="友链文章订阅"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />友链文章订阅</h2><p>嗯，除了 <code>issues</code> 和 <code>releases</code> 数据，时间线还兼容「友链朋友圈」数据，可以展示小伙伴们最近发布的文章：</p><div class="tag-plugin split" ><div class="cell" index="0"><p><strong>效果</strong></p><div class="tag-plugin timeline stellar-fcircle-api" api="https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator" limit="3"></div></div><div class="cell" index="1"><p><strong>源码</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline type:fcircle limit:3 api:https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>因为篇幅有限，这里设置了最多只显示 3 条数据，实际可根据需要进行设置。</p></div></div><h2 class="tag-plugin quot" type="icon" id="热评文章"><a href="#热评文章" class="headerlink" title="热评文章"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />热评文章</h2><p>如果使用基于 issues 的评论系统，可以通过按评论数排序展示热评文章：</p><div class="tag-plugin tabs"id="tab_5""><ul class="nav-tabs"><li class="tab active"><a href="#tab_5-1">效果</a></li><li class="tab"><a href="#tab_5-2">源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_5-1"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/blog-comments/issues?sort=comments&per_page=3" user="utterances-bot,beaudar-bot" hide="title,user"></div></div><div class="tab-pane" id="tab_5-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline hide:title,user user:utterances-bot,beaudar-bot api:https://api.github.com/repos/xaoxuu/blog-comments/issues?sort=comments&amp;per_page=3 %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>因为篇幅有限，这里设置了最多只显示 3 条数据，实际可根据需要进行设置。</p></div></div></div><h2 class="tag-plugin quot" type="icon" id="侧边栏时间线"><a href="#侧边栏时间线" class="headerlink" title="侧边栏时间线"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />侧边栏时间线</h2><p>在 <code>source/_data/widgets.yml</code> 文件中创建时间线组件：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">timeline:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">近期动态</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://api.github.com/repos/xaoxuu/blog-timeline/issues?per_page=1</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">xaoxuu</span></span><br><span class="line"></span><br><span class="line"><span class="attr">timeline_stellar_more:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Stellar</span> <span class="string">探索号</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?state=all&amp;labels=分享&amp;per_page=5</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="string">title</span></span><br></pre></td></tr></table></figure><p>然后在需要显示的页面的 <code>front-matter</code> 中的 <code>sidebar</code> 部分写上它的名字，例如本文的配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span> [<span class="string">toc</span>, <span class="string">timeline_stellar_more</span>]</span><br></pre></td></tr></table></figure><p>大家有什么关于 Stellar 的文章想要分享吗？欢迎投稿，提完 <code>issue</code> 这里就可以看到了，不要乱投哦～</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://xaoxuu.com/wiki/stellar/articles/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div><span class="cap link fs12">https://xaoxuu.com/wiki/stellar/articles/</span></div><div class="bottom"><span class="title">https://xaoxuu.com/wiki/stellar/articles/</span><span class="cap desc fs12"></span></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stellar </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 GitHub 搭建一个简单的脚本库</title>
      <link href="/blog/20210102/"/>
      <url>/blog/20210102/</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin note" color="warning"><div class="title"><strong>接口变动</strong></div><div class="body"><p>近期已升级至 v3 版本，文章内容已更新。</p></div></div><p>细心的朋友可能会发现，我提供的一些脚本都可以在不依赖任何包管理工具的情况下通过一行命令安装，并且它们的安装命令极为相似：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s https://sh.xaox.cc/install | sh -s hexo</span><br><span class="line">curl -s https://sh.xaox.cc/install | sh -s tag</span><br><span class="line">curl -s https://sh.xaox.cc/install | sh -s vimcn</span><br><span class="line">curl -s https://sh.xaox.cc/install | sh -s podspec</span><br></pre></td></tr></table></figure><p>虽然它们安装方式极为相似，但是安装逻辑却并非完全相同，例如前三者是安装到 <code>/usr/local/bin/</code> 目录下，在任意位置打开终端都可以使用，而  <code>podspec.sh</code> 则是下载到当前目录下。</p><p>如果打开 <code>https://sh.xaox.cc/install</code> 文件，你会发现它并没有做任何实质性的操作，只是负责任务派发，根据不同的参数把「安装」指令指派给不同的项目，不同的项目对「安装」的具体实现可以相同也可以不同。</p><p>对于相同的部分，以 <code>vimcn</code> 为例，它的 <code>index.sh</code> 实现如下：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># 这个脚本负责下载和安装的逻辑</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># function lib</span></span><br><span class="line">lib=<span class="string">&#x27;https://sh.xaox.cc/lib/v3&#x27;</span></span><br><span class="line"><span class="comment"># repository name</span></span><br><span class="line">REPO=<span class="string">&#x27;vimcn&#x27;</span></span><br><span class="line"><span class="comment"># clint file name</span></span><br><span class="line">TARGET=<span class="string">&#x27;cli.sh&#x27;</span></span><br><span class="line"><span class="comment"># clint file name</span></span><br><span class="line">RENAME=<span class="string">&#x27;upload&#x27;</span></span><br><span class="line"><span class="comment"># download version</span></span><br><span class="line">VERSION=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$VERSION</span>&quot;</span> = <span class="string">&quot;&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    VERSION=<span class="string">&#x27;main&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">on_success</span></span>() &#123;</span><br><span class="line">    doc_url=xxx</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;\n&gt; \033[32m恭喜您，安装成功！\033[0m 请收藏这个页面，在您遇到问题的时候可以查看文档：\n<span class="variable">$&#123;doc_url&#125;</span>\n\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl -s <span class="variable">$&#123;lib&#125;</span>/download.sh | sh -s <span class="variable">$&#123;REPO&#125;</span> <span class="variable">$&#123;VERSION&#125;</span> <span class="variable">$&#123;TARGET&#125;</span> &amp;&amp;</span><br><span class="line">curl -s <span class="variable">$&#123;lib&#125;</span>/install.sh | sh -s <span class="variable">$HOME</span>/Downloads/<span class="variable">$&#123;TARGET&#125;</span> <span class="variable">$&#123;RENAME&#125;</span> &amp;&amp; on_success</span><br></pre></td></tr></table></figure><p>从中可以看到它导入了一个「库」，确切的说是一个存放可复用代码的仓库地址，具体的「下载」与「安装」脚本像独立组件一样可供外部调用。与此例不同的 <code>podspec.sh</code> 脚本就只有下载操作：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s <span class="variable">$&#123;lib&#125;</span>/download.sh | sh -s <span class="variable">$&#123;REPO&#125;</span> <span class="variable">$&#123;VERSION&#125;</span> <span class="variable">$&#123;TARGET&#125;</span> ./ &amp;&amp;</span><br><span class="line"><span class="built_in">chmod</span> 777 <span class="variable">$&#123;TARGET&#125;</span> &amp;&amp; on_success</span><br></pre></td></tr></table></figure><h2 id="易于扩展"><a href="#易于扩展" class="headerlink" title="易于扩展"></a>易于扩展</h2><p>这么一套流程使得脚本安装变得非常有扩展性，如果需要发布一个新的脚本，只需要新建仓库，在其中写一个 <code>index.sh</code> 脚本，通过调用 <code>lib</code> 仓库里封装好的脚本，传入仓库名、版本、要下载的文件，就可以轻松实现下载安装流程。</p><h2 id="易于使用"><a href="#易于使用" class="headerlink" title="易于使用"></a>易于使用</h2><p>更重要的是，可以通过一行命令来安装：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s https://sh.xaox.cc/install | sh -s 我的脚本</span><br></pre></td></tr></table></figure><p>这套体系类似于包管理工具一样，但目前只对创建在 <a href="https://github.com/cloud-shell-lib/">@cloud-shell-lib</a> 中的仓库有效。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>就是一个比包管理工具更轻量级更小的「个人脚本管理」体系，不需要本地依赖，适合经常换系统、换设备执行一些轻量级任务的场景。</p><h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a><del>Todo</del></h2><p>暂时没有 todo 了，不打算折腾了，感兴趣的朋友可以自己研究一下，不懂的话可以留言询问。搭建方法就是：</p><ol><li>fork <a href="https://github.com/cloud-shell-lib/lib">lib</a> 或者自己创建一个更好的公共库。</li><li>在网站某个路径下放一个 <a href="https://sh.xaox.cc/install">install</a> 文件，根据传入参数把指令转发给目标脚本仓库。</li><li>在目标脚本仓库中创建一个命名固定的脚本用于接收传入的指令，然后可以根据需要执行操作或者调用公共库的下载、安装等通用流程。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苹果设计开发加速器线上活动</title>
      <link href="/blog/20201119/"/>
      <url>/blog/20201119/</url>
      
        <content type="html"><![CDATA[<p>受疫情影响，今年设计开发加速器活动改为线上形式，本次参与的活动课题是《为 iPhone 和 iPad 搭建灵活适配的用户界面》。<span id="more"></span>新出的几款 iPhone 和 iPad 设备尺寸和旧设备都不同，造成适配成本增加，本次活动目的是向开发者分享高效而灵活的适配方案。</p><h2 id="避免屏幕分辨率硬编码"><a href="#避免屏幕分辨率硬编码" class="headerlink" title="避免屏幕分辨率硬编码"></a>避免屏幕分辨率硬编码</h2><p>常见陷阱：对硬件设备型号做特殊判断</p><h2 id="适配方面"><a href="#适配方面" class="headerlink" title="适配方面"></a>适配方面</h2><ul><li>启动屏</li><li>安全区和布局边框</li><li>尺寸类</li><li>动态字体</li></ul><h3 id="启动屏"><a href="#启动屏" class="headerlink" title="启动屏"></a>启动屏</h3><p>用 Storyboard 启动屏，不建议用图片作为启动页，详见官方设计指南：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="Human Interface Guidelines" href="https://developer.apple.com/design/human-interface-guidelines/patterns/launching/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">Human Interface Guidelines</span><span class="cap link fs12">https://developer.apple.com/design/human-interface-guidelines/patterns/launching/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="安全区和布局边框"><a href="#安全区和布局边框" class="headerlink" title="安全区和布局边框"></a>安全区和布局边框</h3><p><strong>安全区</strong></p><p>UIScreen &amp; UIWindow 获得布局尺寸进行排版不适用于 iPhone X 以及以后机型</p><p>要使用安全区来进行布局（安全区是动态的，不同设备、横竖屏、子视图都不相同）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.safeAreaInsets</span><br><span class="line">.safeAreaLayoutGuide</span><br></pre></td></tr></table></figure><p>还可以根据需要定制安全区（例如定制工具栏）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.additionalSafeAreaInsets</span><br></pre></td></tr></table></figure><p>安全区发生变化时：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.viewSafeAreaInsetsDidChange()</span><br></pre></td></tr></table></figure><p><strong>布局边框</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.layoutMargins</span><br><span class="line">.directionalLayoutMargins</span><br><span class="line">.layoutMarginsGuide</span><br><span class="line">.layoutMarginsDidChange()</span><br></pre></td></tr></table></figure><p>与安全区配合使用</p><p>子视图传递</p><p>布局边框会根据设备宽度、动态字体而自动调整，能够自动适配。</p><h3 id="尺寸类"><a href="#尺寸类" class="headerlink" title="尺寸类"></a>尺寸类</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sizeClasses</span><br></pre></td></tr></table></figure><ul><li>C 紧凑型（iPhone竖屏，iPad分屏）</li><li>R 常规型（iPad竖屏，12.9‘iPad等宽分屏）</li></ul><h3 id="动态字体"><a href="#动态字体" class="headerlink" title="动态字体"></a>动态字体</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.large</span><br><span class="line">.title1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">label.font = UIFont.preferred...</span><br></pre></td></tr></table></figure><p><strong>自定义字体</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">metrics = UIFontMetrics(...)</span><br></pre></td></tr></table></figure><blockquote><p>more at WWDC2017</p></blockquote><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>2021年1月4日</p></div><div class="body fs14"><p>今天收到 Apple 的邮件，设计开发加速器活动现在已经开放申请啦，感兴趣的朋友们可以去 <a href="https://developer.apple.com/cn/accelerator/">官网</a> 申请。</p></div></div><div class="timenode" index="1"><div class="header"><p>2021年2月1日</p></div><div class="body fs14"><p>今天无意中发现又关闭申请入口了。</p></div></div><div class="timenode" index="2"><div class="header"><p>2021年4月9日</p></div><div class="body fs14"><p>今天经同事提醒发现又开放申请了。</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 技术加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 设计开发加速器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心率管家的设计与开发（下篇：信号处理）</title>
      <link href="/blog/20200927/"/>
      <url>/blog/20200927/</url>
      
        <content type="html"><![CDATA[<p>作为一名开发者，如何使用手机摄像头测量心率呢？在心率管家默默无闻地上线了一年多之后，现在终于打算来好好聊聊关于手机摄像头测量心率的那些事。本文参考了很多前辈的文章，将在文末列出。</p><span id="more"></span><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"focus="top"><video poster="/assets/wiki/heartmate/docs/usage01.jpg" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/heartmate/docs/usage01.mp4" type="video/mp4"></video><div class="frame"></div></div></div><h2 id="光电容积脉搏波描记法"><a href="#光电容积脉搏波描记法" class="headerlink" title="光电容积脉搏波描记法"></a>光电容积脉搏波描记法</h2><p>目前市面上大部分便携心率检测设备都是基于光电容积脉搏波描记法来测量的。由于心跳引起动脉周期性变化，动脉内血液的容积发生周期性变化，因而对光线的吸收也会呈现同样的周期性变化，这个周期性变化的频率就是脉率，脉率大部分情况都和心率一致。</p><p>打开相机，把手指指尖覆盖在摄像头上，观察屏幕上的取景框，就可以发现每心跳一次，屏幕中的红色都会变暗一次。对每一帧画面提取 RGB 均值，并转换到 HSV 色彩空间，把色相 H 作为特征值，得到时域信号。</p><h2 id="信号处理"><a href="#信号处理" class="headerlink" title="信号处理"></a>信号处理</h2><p>我使用简单的时域分析法计算脉率，关键点就是计算采样时间内的波峰个数。把色相信号绘制波形图如下：</p><div class="tag-plugin image"><div class="image-bg" style="background:#fff;padding:8px;"><img src="/assets/xaoxuu/blog/2020-0927b@2x.jpg" style="width:300px;"/></div></div><p>由于覆盖力度不稳定导致色相会整体偏移因而产生低频噪声，再加原本就存在的高频噪声影响，波形显得很杂乱无章，所以使用带通递归滤波器进行滤波：</p><div class="tag-plugin image"><div class="image-bg" style="background:#fff;padding:16px;"><img src="/assets/xaoxuu/blog/2020-0927c@1x.svg"/></div></div><p>公式展开为：</p><div class="tag-plugin image"><div class="image-bg" style="background:#fff;padding:16px;"><img src="/assets/xaoxuu/blog/2020-0927d@1x.svg"/></div></div><p>用 Swift 语言实现这个滤波器的算法（10阶）为：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">struct</span> <span class="title class_">BandpassFilter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> x <span class="operator">=</span> [<span class="type">CGFloat</span>].<span class="keyword">init</span>(repeating: <span class="number">0</span>, count: <span class="number">11</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> y <span class="operator">=</span> [<span class="type">CGFloat</span>].<span class="keyword">init</span>(repeating: <span class="number">0</span>, count: <span class="number">11</span>)</span><br><span class="line">    <span class="keyword">@discardableResult</span> <span class="keyword">mutating</span> <span class="keyword">func</span> <span class="title function_">filted</span>(<span class="keyword">_</span> <span class="params">value</span>: <span class="type">CGFloat</span>) -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> x.count <span class="operator">&gt;</span> <span class="number">10</span>, y.count <span class="operator">&gt;</span> <span class="number">10</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> <span class="operator">..&lt;</span> <span class="number">10</span> &#123;</span><br><span class="line">            x[i] <span class="operator">=</span> x[i<span class="operator">+</span><span class="number">1</span>]</span><br><span class="line">            y[i] <span class="operator">=</span> y[i<span class="operator">+</span><span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        x[<span class="number">10</span>] <span class="operator">=</span> value <span class="operator">/</span> <span class="number">1.894427025e+01</span></span><br><span class="line">        y[<span class="number">10</span>] <span class="operator">=</span> x[<span class="number">10</span>] <span class="operator">-</span> x[<span class="number">0</span>] <span class="operator">+</span> <span class="number">5</span> <span class="operator">*</span> (x[<span class="number">2</span>] <span class="operator">-</span> x[<span class="number">8</span>]) <span class="operator">+</span> <span class="number">10</span> <span class="operator">*</span> (x[<span class="number">6</span>] <span class="operator">-</span> x[<span class="number">4</span>])</span><br><span class="line">        y[<span class="number">10</span>] <span class="operator">+=</span> (<span class="operator">-</span><span class="number">0.0000000000</span> <span class="operator">*</span> y[<span class="number">0</span>]) <span class="operator">+</span> (<span class="number">0.0357796363</span> <span class="operator">*</span> y[<span class="number">1</span>])</span><br><span class="line">        y[<span class="number">10</span>] <span class="operator">+=</span> (<span class="operator">-</span><span class="number">0.1476158522</span> <span class="operator">*</span> y[<span class="number">2</span>]) <span class="operator">+</span> (<span class="number">0.3992561394</span> <span class="operator">*</span> y[<span class="number">3</span>])</span><br><span class="line">        y[<span class="number">10</span>] <span class="operator">+=</span> (<span class="operator">-</span><span class="number">1.1743136181</span> <span class="operator">*</span> y[<span class="number">4</span>]) <span class="operator">+</span> (<span class="number">2.4692165842</span> <span class="operator">*</span> y[<span class="number">5</span>])</span><br><span class="line">        y[<span class="number">10</span>] <span class="operator">+=</span> (<span class="operator">-</span><span class="number">3.3820859632</span> <span class="operator">*</span> y[<span class="number">6</span>]) <span class="operator">+</span> (<span class="number">3.9628972812</span> <span class="operator">*</span> y[<span class="number">7</span>])</span><br><span class="line">        y[<span class="number">10</span>] <span class="operator">+=</span> (<span class="operator">-</span><span class="number">4.3832594900</span> <span class="operator">*</span> y[<span class="number">8</span>]) <span class="operator">+</span> (<span class="number">3.2101976096</span> <span class="operator">*</span> y[<span class="number">9</span>])</span><br><span class="line">        <span class="keyword">return</span> y[<span class="number">10</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这个算法是从 <a href="https://github.com/WuXiaoTu/HeartRate">WuXiaoTu&#x2F;HeartRate</a> 这个开源库中翻译来的。</p></blockquote><p>经过滤波之后就能看到波形图呈现锯齿状，由于这是由摄像头捕捉到的色相的波形图，所以看起来并不会像心电图那样：</p><div class="tag-plugin image"><div class="image-bg" style="background:#fff;padding:8px;"><img src="/assets/xaoxuu/blog/2020-0927e@2x.jpg" style="width:300px;"/></div></div><p>有了干净的波形图，就可以数出一段时间内的波峰个数，从而计算出频率。例如数5秒内有多少个波峰，然后乘以12就是每分钟脉搏跳动次数，也就是这5秒内的平均脉率。现在 GitHub 上的很多同类的开源项目也都是这种方案。由于连续测量的时间越长，发生中断的可能性就越大，测量成功率就越低，再考虑到心率本身就是变化的，时间跨度太长也会使得数据变得没有意义，测量时间太短又很容易被个别误差数据影响。</p><p>网络上现有方案都是先确定测量时长，时间结束后计算结果：</p><ul><li>如果测量时间短：成功率高，准确性低。</li><li>如果测量时间中等：成功率低，准确性高。</li><li>如果测量时间长：成功率很低，准确性很高，但是数据意义不大。</li></ul><p>我想出了一种新的方案，就是每探测到一个有效脉冲，就记录下这个脉冲与上一个有效脉冲之间的间隔，两个连续的有效脉冲计算出来的频率就是100%正确的瞬时脉率。所以改进后的方案是：开始测量后，始终记录脉冲，随时可以计算瞬时脉率、最后若干秒的平均脉率。</p><ul><li>成功率：100%（不存在测量中断而失败的情况）</li><li>准确性的情况如下：<ul><li>如果脉冲计数都是由脉搏跳动引起的，测量结果就是完全准确的</li><li>如果脉搏跳动了而脉冲计数没有增加，不会影响结果，因为计算时只会把有效脉冲的周期进行累加</li><li>如果在脉搏跳动间隙额外增加了脉冲计数，那么数据就会失真</li></ul></li></ul><p>如果不故意快速抖动手指，数据失真的情况就不会发生，因为手指不离开摄像头并在两次脉搏跳动中间产生一次色相饱和度明度都以假乱真的脉冲信号是很难的。</p><h3 id="脉冲探测器"><a href="#脉冲探测器" class="headerlink" title="脉冲探测器"></a>脉冲探测器</h3><p>经过滤波后的数值是围绕0上下波动的，分别记录大于0的值和小于0的值，各自保存到数组中，然后求出它们的平均值：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> filted <span class="operator">&gt;</span> <span class="number">0</span> &#123;</span><br><span class="line">    upVals.append(filted)</span><br><span class="line">    <span class="keyword">if</span> upVals.count <span class="operator">&gt;</span> <span class="number">20</span> &#123;</span><br><span class="line">        upVals.removeFirst(upVals.count <span class="operator">-</span> <span class="number">20</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> filted <span class="operator">&lt;</span> <span class="number">0</span> &#123;</span><br><span class="line">    downVals.append(filted)</span><br><span class="line">    <span class="keyword">if</span> downVals.count <span class="operator">&gt;</span> <span class="number">20</span> &#123;</span><br><span class="line">        downVals.removeFirst(downVals.count <span class="operator">-</span> <span class="number">20</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> avgUp <span class="operator">=</span> upVals.reduce(<span class="number">0</span>, <span class="operator">+</span>) <span class="operator">/</span> <span class="type">CGFloat</span>(upVals.count)</span><br><span class="line"><span class="keyword">let</span> avgDown <span class="operator">=</span> downVals.reduce(<span class="number">0</span>, <span class="operator">+</span>) <span class="operator">/</span> <span class="type">CGFloat</span>(downVals.count)</span><br></pre></td></tr></table></figure><p>如果新的值高于 <code>avgUp</code> 的一半，就标记 <code>flag = true</code> ，低于 <code>avgDown</code> 的一半且 <code>flag = true</code> 就标记 <code>flag = true</code>，触发一次脉冲，记录下这个脉冲的时间戳。如果两个脉冲之间的时间间隔符合正常心率的范围，就认为是有效脉冲。</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> filted <span class="operator">&gt;</span> <span class="number">0.5</span> <span class="operator">*</span> avgUp  &#123;</span><br><span class="line">    flag <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> filted <span class="operator">&lt;</span> <span class="number">0.5</span> <span class="operator">*</span> avgDown <span class="operator">&amp;&amp;</span> flag <span class="operator">==</span> <span class="literal">true</span> &#123;</span><br><span class="line">    flag <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">let</span> time <span class="operator">=</span> <span class="type">CACurrentMediaTime</span>()</span><br><span class="line">    <span class="keyword">let</span> period <span class="operator">=</span> time <span class="operator">-</span> periodStart</span><br><span class="line">    <span class="comment">// 与上一个周期间隔时间满足正常周期范围</span></span><br><span class="line">    <span class="keyword">if</span> period <span class="operator">&lt;</span> <span class="type">MAX_PERIOD</span> <span class="operator">&amp;&amp;</span> period <span class="operator">&gt;</span> <span class="type">MIN_PERIOD</span> &#123;</span><br><span class="line">        <span class="comment">// 记录这次脉冲与上次脉冲的时间间隔</span></span><br><span class="line">        periods.append(period)</span><br><span class="line">        <span class="comment">// 捕获到脉冲</span></span><br><span class="line">        delegate<span class="operator">?</span>.pulseDetector(detector: <span class="keyword">self</span>, capture: periods)</span><br><span class="line">    &#125;</span><br><span class="line">    periodStart <span class="operator">=</span> time</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> filted</span><br></pre></td></tr></table></figure><p>上文「正常心率的范围」如何界定？心率如果低到 40bpm 此时周期达到最大值，如果心率高达 255bpm 则周期达到最小值。</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">MAX_PERIOD</span> <span class="operator">=</span> <span class="type">CFTimeInterval</span>(<span class="number">60.0</span> <span class="operator">/</span> <span class="number">40</span>)</span><br><span class="line"><span class="type">MIN_PERIOD</span> <span class="operator">=</span> <span class="type">CFTimeInterval</span>(<span class="number">60.0</span> <span class="operator">/</span> <span class="number">255</span>)</span><br></pre></td></tr></table></figure><h3 id="计算脉率"><a href="#计算脉率" class="headerlink" title="计算脉率"></a>计算脉率</h3><p>上一步记录下了每个脉冲的周期，取出最后 N 个要计算的脉冲，把它们的周期相加就是总时长，用 <code>个数 / 时长</code> 计算的值就是频率，频率乘以 <code>60</code> 就是每分钟的脉冲数，也就是脉率。</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">calcFrequency</span>(<span class="params">count</span>: <span class="type">Int</span>) -&gt; <span class="type">CGFloat</span>? &#123;</span><br><span class="line">    <span class="keyword">guard</span> (<span class="number">0</span> <span class="operator">...</span> periods.count).contains(count) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> duration <span class="operator">=</span> periods.dropFirst(periods.count <span class="operator">-</span> count).reduce(<span class="number">0</span>, <span class="operator">+</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">CGFloat</span>(count) <span class="operator">/</span> <span class="type">CGFloat</span>(duration)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin img-wrap"><div class="frame-wrap" id="iphone11"><img class="img" src="/assets/xaoxuu/blog/2020-0927f@2x.jpg"/><div class="frame"></div></div></div><h2 id="准确性与参考价值"><a href="#准确性与参考价值" class="headerlink" title="准确性与参考价值"></a>准确性与参考价值</h2><p>由于心率是动态变化的，即使测量的脉搏跳动都是准确的，也就是说测量阶段实现了零误差，但是计算方式不一样也会产生不同的结果。因此直接拿结果去和小米手环或者 Apple Watch 上显示的数值去进行对比是不严谨的。正确地方法是在一个时间段内用多种方式测量的同时亲自用手测量脉搏跳动次数，可以借助本文的 demo 计算瞬时或者平均脉率，如果一段时间的脉冲计数完全正确，那么 demo 计算的结果就是完全准确的，瞬时脉率、最后 N 秒的平均脉率一般都不会相同。因此即使戴在一只手上同一时间进行测量，不同产品显示的心率不同也并不能说明它们谁更准，只能说谁的结果更具有参考价值。</p><p>对此，我优化后的心率管家测量方案可以选择测量时长，也可以随时结束测量，运动后心率变化快的时候适合取短时间内例如5s平均脉率，心平气和的时候可以取适当长一点的例如10s或者20s的平均脉率。</p><h2 id="脉率和心率"><a href="#脉率和心率" class="headerlink" title="脉率和心率"></a>脉率和心率</h2><p>脉率是每分钟脉搏的次数，心率是每分钟心跳次数，健康情况下脉率与心率一致，但是如果出现心律失常，心脏有一些跳动不能有效将血液泵至全身，因此会出现脉搏缺失，导致脉率显著低于心率。如果用来判断心脏功能状态，误差很大。对于心动过速、低血压症和休克病人，即使是心率规则，由于脉压差很小，脉搏也会很弱，此时往往不能够准确测量脉率。</p><p>另外，脉搏随肢体移动会形成伪迹波动，也会影响脉率的测量。而心率不受心律失常、心动过速、休克、肢体活动的影响，所以在临床上，医生判断心跳活动不是看脉率，而是看心率，摸脉搏只是一个辅助操作。</p><p>因此，通过手环、手表、app 测量的“心率”并不是一个完全可靠的数据。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>非常感谢 <a href="https://lifestyle1.cn/">@JustinYang</a> 大佬在滤波算法方面给予的援助。也十分感谢 <a href="https://punmy.cn/">@Punmy</a>、<a href="https://github.com/WuXiaoTu">@WuXiaoTu</a> 等作者的文章，使得后人能够少走很多弯路。</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://xaoxuu.com/blog/20190723/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div><span class="cap link fs12">https://xaoxuu.com/blog/20190723/</span></div><div class="bottom"><span class="title">https://xaoxuu.com/blog/20190723/</span><span class="cap desc fs12"></span></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> 心率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态博客使用 Issues API 来实现动态发布友链、书签</title>
      <link href="/blog/20200823/"/>
      <url>/blog/20200823/</url>
      
        <content type="html"><![CDATA[<p>由于发布 issue 的成本远远低于发布一次博客更新（即便是使用了持续集成），可以用 issue 来简化每个独立博客都必备的友链系统，也可以通过 issue 来快速发布动态资讯，弥补静态博客必须更新静态文件才能更新内容的缺点。此功能已经集成到了主题中，使用非常方便。</p><span id="more"></span><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>如标题所说，例如 Issues API 来实现，把请求到的结果进行解析，然后生成 HTML 标签，添加到页面中。为了获取到需要的信息，创建 Issue 需要遵循一定的格式，例如「网站卡片」就需要截图、网站标题、网站链接、网站描述、头像。可以设置 <a href="https://github.com/volantis-x/examples/issues/new/choose">Issues 模版</a> 来简化步骤。</p><p>通过 issue 方式发布内容可以支持 <code>script</code> 脚本，为了安全起见，最好设置一个限制，例如用标签来激活 <code>labels=active</code> 或者只对自己发布的有效，可以在解析数据的时候过滤掉 <code>script</code> 标签。</p><h2 id="如何在主题中使用？"><a href="#如何在主题中使用？" class="headerlink" title="如何在主题中使用？"></a>如何在主题中使用？</h2><p>在 GitHub 或者 Gitee 创建仓库，仿照下面的示例，把 api 中的用户名和仓库名改成自己的。Issue 内容中需要有一段满足 JSON 格式的代码块：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;screenshot&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;版本：^4.0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>仓库链接：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/xaoxuu/friends/issues" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/xaoxuu/friends/issues</span><span class="cap link fs12">https://github.com/xaoxuu/friends/issues</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="在线演示效果"><a href="#在线演示效果" class="headerlink" title="在线演示效果"></a>在线演示效果</h2><p>见本站友链</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/friends/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/friends/</span><span class="cap link fs12">https://xaoxuu.com/friends/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人电脑作为办公设备时，我们如何保护隐私？</title>
      <link href="/blog/20200627/"/>
      <url>/blog/20200627/</url>
      
        <content type="html"><![CDATA[<p>公司一般都会强制安装安防软件，这些软件要求开机自启动，要求有屏幕录制权限、完全的磁盘访问权限包括相册图库。因此如果使用自己的 MacBook 作为办公设备，必须要把生活区和工作区完全独立开，安装在两个磁盘分区，并且对磁盘分区加密。</p><span id="more"></span><h2 id="分区加密"><a href="#分区加密" class="headerlink" title="分区加密"></a>分区加密</h2><p>对 Mac 电脑进行磁盘分区和安装多系统非常简单，打开「磁盘工具」点击标题栏的「分区」按钮进行分区即可，分区的格式一定要选择加密的，这里推荐「APFS（加密）」格式。密码要记下来防止遗忘。这里选择加密分区主要可以防止意外挂载：在启动了工作区的系统之后，由于需要密码才能挂载生活区的数据宗卷，可以有效避免不小心点了挂载或者设置了自动挂载，导致拥有完整的磁盘访问权限的安防软件自动扫描了生活区的文件资料。同样的道理，工作分区加密也可以防止生活区的某些软件扫描到了工作资料导致数据泄露。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/xaoxuu/blog/2020-0627d@2x.png"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="/assets/xaoxuu/blog/2020-0627c@2x.png"/></div></div><p>分区完成之后，安装系统，目标宗卷选择刚刚新建的工作分区，剩下的系统安装步骤不需要赘述了。</p><h2 id="工作专用账号"><a href="#工作专用账号" class="headerlink" title="工作专用账号"></a>工作专用账号</h2><p>系统安装完成之后，最好登录工作专用的账号，不要使用同一个 AppleID 进行登录，否则仍然存在数据泄露的风险。同样的，浏览器账号也需要使用工作专用。AppleID 和浏览器账号基本上可以满足大部分需要记住账号密码的需求。</p><p>而对于工作日志，我推荐给程序员的做法是创建本地 git 仓库，用 <a href="https://typora.io/">Typora</a> 编辑器 markdown 格式书写。它的缺点十分有限，就是新增文件稍微麻烦一点，要在左侧目录树上点击右键，然后选择「新建文件」，然后输入文件名，除此之外几乎没有缺点。对于支持 md 的其它笔记软件来说，它对于 md 的支持比较完整，方便更换和修改主题，导出格式丰富并且样式也比较完整。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/xaoxuu/blog/2020-0627e@2x.png" alt="Typora 操作界面"/></div><div class="image-meta"><span class="image-caption center">Typora 操作界面</span></div></div><h2 id="用户目录权限"><a href="#用户目录权限" class="headerlink" title="用户目录权限"></a>用户目录权限</h2><p>Mac 自带的一些用户文件目录例如「文稿」「桌面」等默认权限是 700 也就是仅当前用户可以读写和执行，但是自己新建的文件夹默认权限是 755 即全局用户都可以读取和执行。所以如果自己在原生的文件目录之外新建了文件夹，记得更改文件夹的权限：</p><div class="tag-plugin image"><div class="image-bg" style="background:#ECECEC;"><img src="/assets/xaoxuu/blog/2020-0627b@2x.jpg" alt="把权限由 755 修改为 700" style="width:500px;"/></div><div class="image-meta"><span class="image-caption center">把权限由 755 修改为 700</span></div></div><p>我切换了另一个用户进入这个用户目录时就提示无权限访问了，理论上这个用户上的应用程序也没有权限访问吧。（不太肯定）</p><div class="tag-plugin note" color="white"><div class="title"><strong>一个小坑</strong></div><div class="body"><p>经测试发现，在两个独立的宗卷中如果存在用户名和密码相同的两个用户，那么即使设置了 700 权限，但实际上在另一个宗卷中登录同名同密码的用户，对这个用户的文件夹一样拥有权限，不知道这是苹果有意为之还是设计漏洞。</p></div></div><h2 id="一个不便之处"><a href="#一个不便之处" class="headerlink" title="一个不便之处"></a>一个不便之处</h2><p>流程是进入系统后自动请求挂载另一个宗卷，由于开启了文件保险箱，所以弹出了密码输入框，不输入密码点击取消，则没有权限访问另一卷的磁盘内容。但是每次开机都会有这个弹窗，挺烦人的。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/xaoxuu/blog/2020-0627f@2x.png" style="width:400px;"/></div></div><p>网上搜索了设置开机不自动挂载的方法，都是修改 <code>fstab</code> 文件的方法：</p><figure class="highlight md"><figcaption><span>/etc/fstab</span></figcaption><table><tr><td class="code"><pre><span class="line">UUID=427478BB-E267-4455-869A-4AAB54F792A1 none auto noauto 0 0</span><br></pre></td></tr></table></figure><p>实测无效，每次登录用户还是会自动尝试挂载，可能这种方式在 APFS 分区中不再支持了。不知道在 2020 年，如何让 APFS 加密分区不自动挂载？</p>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苹果设计开发加速器《创建卓越的 Apple Watch 体验》活动现场体验</title>
      <link href="/blog/20191006/"/>
      <url>/blog/20191006/</url>
      
        <content type="html"><![CDATA[<p>9月26号收到了苹果的一活动邀请邮件《创建卓越的 Apple Watch 体验》，活动地点是：Design and Development Accelerator，这是苹果今年7月份在上海设立的设计开发加速器，为开发者提供有关应用设计与开发的专业培训和资源。</p><span id="more"></span><details class="tag-plugin folding" ><summary><span>什么是「设计开发加速器」？</span></summary><div class="body"><ul><li>苹果官网：<a href="https://developer.apple.com/cn/accelerator/">设计开发加速器</a></li><li>视频体验：<a href="https://www.bilibili.com/video/av58500736/?spm_id_from=333.788.videocard.7">搞机零距离：中国开发者的大好事？苹果工程师一对一授课，让人开了又开？</a></li><li>媒体资讯：<a href="https://sspai.com/post/55613">苹果设计开发加速器正式启动，每年计划为 5000 名国内开发者提供支持</a></li></ul><iframe src="//player.bilibili.com/player.html?aid=58500736&bvid=BV1Cx411Z71y&cid=102025595&page=1" allowfullscreen="allowfullscreen" width="100%" height="400" scrolling="no" frameborder="0" style="border-radius:8px"></iframe></div></details><h2 id="watchOS-6"><a href="#watchOS-6" class="headerlink" title="watchOS 6"></a>watchOS 6</h2><p>构建面向 watchOS 的 app，让用户随时随地及时掌握信息并轻松完成快速操作。开放了更多种全新的 API，可以构建完全独立的 watchOS app，甚至是不带有 iOS 版的 watchOS app。现在，用户可以直接在 Apple Watch 上的 App Store 中查找并安装 app。</p><h2 id="独立的-App"><a href="#独立的-App" class="headerlink" title="独立的 App"></a>独立的 App</h2><p>在 watchOS 6 中，可以构建完全独立的 Watch App。“Sign in with Apple” 让用户远离手机时也能在 Apple Watch 上登录 app。</p><div class="tag-plugin image"><div class="image-bg" style="background:white;padding:16px;"><img src="/assets/xaoxuu/mirror/apple/documentation/watchkit/af79db6d-02b1-4df0-9f46-6c3c9db12d76.png" alt="选择应用模板" style="width:500px;"/></div><div class="image-meta"><span class="image-caption center">选择应用模板</span></div></div><ul><li><p><strong>Watch-only app</strong><br>创建只有 Apple Watch 且没有相关 iOS 应用程序。</p></li><li><p><strong>watchOS app with an iOS app</strong><br>当您拥有 iOS 应用并想要提供可提供相似或相关体验的 watchOS 应用。</p></li></ul><p>在创建 watchOS Target 时，指定要构建的 watchOS 项目的类型。此外，如果将 watchOS 应用程序与 iOS 应用程序捆绑在一起，则必须指定 watchOS 应用程序如何与其配套的 iOS 应用互动。</p><ul><li><strong>Independent Apps</strong> （独立应用）不需要 iOS 配套应用即可正常运行。用户可以选择安装 iOS 应用、watchOS 应用或同时安装两者。</li><li><strong>Dependent Apps</strong> （从属应用）依靠 iOS 配套应用才能正常运行；仅在 watchOS 应用需要与 iOS 应用互动时才创建从属应用。用户必须使用其 iOS 应用购买并安装从属的 watchOS 应用。</li></ul><blockquote><p>在 watchOS 5 和更低版本中，所有 watchOS 应用程序都是从属应用。</p></blockquote><h2 id="Apple-Watch-上的-App-Store"><a href="#Apple-Watch-上的-App-Store" class="headerlink" title="Apple Watch 上的 App Store"></a>Apple Watch 上的 App Store</h2><p>watchOS 6 上提供适用于 Apple Watch 的 App Store，让用户可以直接在 Apple Watch 上轻松探索、浏览、搜索和安装 watchOS app。使用 Siri、听写或涂写进行搜索，或者通过轻点产品页面链接，直接进入产品页面。</p><div class="tag-plugin image"><div class="image-bg" style="background:white;padding:16px;"><img src="/assets/xaoxuu/mirror/apple/documentation/watchkit/06d45110-1dd7-49a4-a413-9f5159ecdd0e.png" style="width:180px;"/></div></div><p>系统会为独立和从属应用直接将 watchOS 应用程序下载并安装到 Apple Watch。</p><h2 id="Apple-Watch-人机界面指南"><a href="#Apple-Watch-人机界面指南" class="headerlink" title="Apple Watch 人机界面指南"></a>Apple Watch 人机界面指南</h2><p>Apple Watch 设计为可穿戴，因此用户界面适合穿戴者使用，并为他们带来轻巧，反应灵敏且高度个性化的体验。人们经常使用 watchOS 应用程序的相关体验（例如复杂功能、通知和 Siri 交互），而不是使用应用程序本身。创造出色的 watchOS 体验意味着既要设计应用程序，又要设计快速，信息丰富的元素，使人们能够以适合自己的方式访问您的内容。最有用的应用通常：</p><ul><li>使用复杂功能可以在表盘上提供少量可能动态的信息，使人们可以一目了然地查看信息</li><li>使用通知传递及时的高价值信息并采取重要行动</li><li>帮助人们使用 Siri 获取信息并执行任务</li><li>如有必要，请在应用程序体验中提供更多详细信息和功能</li></ul><div class="tag-plugin image"><div class="image-bg" style="background:white;padding:16px;"><img src="/assets/xaoxuu/mirror/apple/design/human-interface-guidelines/watchos/watchOS-hero.svg" style="width:320px;"/></div></div><br><div class="tag-plugin note" color="blue"><div class="title"><strong>图片来源声明</strong></div><div class="body"><p>本文挖了坑但是许久没有填上，直到 watchOS 7 都要发布了，最后决定放弃填坑，文章封面和文中的部分插图来源于苹果官方文档。</p></div></div><details class="tag-plugin folding" ><summary><span>附：议程安排</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg" style="background:#F3F2F7;padding:16px;"><img src="/assets/xaoxuu/blog/2019-1006fb@2x.jpg" style="width:400px;"/></div></div><p>苹果上海设计开发加速器地点在源深体育中心地铁站4出口处，三座非常低调没有任何招牌的建筑，绕着走了一圈才找到A座二楼入口的门。内部环境如媒体图片一样，室内禁止私自拍照，只有这张门票留作纪念喽。</p><div class="tag-plugin image"><div class="image-bg" style="background:#857E74;padding:16px;"><img src="/assets/xaoxuu/blog/2019-1006fc@2x.jpg" style="width:400px;"/></div></div></div></details>]]></content>
      
      
      <categories>
          
          <category> 技术加油站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 设计开发加速器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用链式语法打造一个 ObjC 安全的对象类型转换库</title>
      <link href="/blog/20190829/"/>
      <url>/blog/20190829/</url>
      
        <content type="html"><![CDATA[<p>我就职过的公司，都出现过不止一次因为后台实际数据类型和文档不一致导致的程序线上崩溃问题。原则上即使服务器离线了，app 都不应该直接闪退，所以 app 应当具有对服务器异常情况进行处理的能力。使用 ValueX 可以有效避免后台返回数据类型异常导致的程序崩溃。</p><span id="more"></span><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/xaoxuu/ValueX/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/xaoxuu/ValueX/</span><span class="cap link fs12">https://github.com/xaoxuu/ValueX/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="异常场景"><a href="#异常场景" class="headerlink" title="异常场景"></a>异常场景</h2><ul><li>场景1： NSString 类型变成 NSNull</li><li>场景2： nil 变成 <code>@&quot;&lt;null&gt;&quot;</code> 值</li><li>场景3： userId 不确定是 NSString 还是 NSNumber</li><li>场景4： NSDictionary 中嵌套的容器变成了 Json 字符串格式</li></ul><h2 id="问题抽象"><a href="#问题抽象" class="headerlink" title="问题抽象"></a>问题抽象</h2><ul><li>实际类型与定义类型不符</li><li>实际类型与期望类型不一致</li></ul><h2 id="设计接口"><a href="#设计接口" class="headerlink" title="设计接口"></a>设计接口</h2><p>假如我得到一个值 <code>NSString *obj</code>，实际上可能是 NSNull ，可能是 NSNumber ，可能是空数据的 <code>@&quot;&lt;null&gt;&quot;</code> 或者 <code>@&quot;(null)&quot;</code> 等各种表述。那么我需要确保 <code>NSSafeString(obj)</code> 的结果一定是 NSString 类型的值，如果是空数据，就应该是 nil。如果是 <code>@123</code> 这样的数字，那么应该得到 <code>@&quot;123&quot;</code> 这样的字符串。</p><p>如果是 json 数据，它可能以 NSData 类型存在，可能以 Json 字符串 NSString 类型存在，可能以 NSArray 或者 NSDictionary 对象形式存在。我需要的是我要什么类型就能直接获取。例如 <code>ValueX(obj).stringValue</code> 就得到这个数据的 Json 字符串，<code>ValueX(obj).dictionaryValue</code> 就得到这个数据的字典对象。</p><p>所以这个库就分为两部份工作，一部分是将实际类型与定义类型一致化；第二部分是将已知类型转换成它能够转换的其他类型。</p><h3 id="类型安全"><a href="#类型安全" class="headerlink" title="类型安全"></a>类型安全</h3><p>针对 ObjC 中常用的 6 种数据类型 NSString、NSNumber、NSData、NSArray、NSSet、NSDictionary 一一进行判断，写出6个函数：</p><figure class="highlight objc"><figcaption><span>得到安全类型：</span></figcaption><table><tr><td class="code"><pre><span class="line">FOUNDATION_EXTERN <span class="built_in">NSString</span> * __<span class="keyword">nullable</span> <span class="built_in">NSSafeString</span>(<span class="type">id</span> obj);</span><br><span class="line">FOUNDATION_EXTERN <span class="built_in">NSNumber</span> * __<span class="keyword">nullable</span> <span class="built_in">NSSafeNumber</span>(<span class="type">id</span> obj);</span><br><span class="line">FOUNDATION_EXTERN <span class="built_in">NSData</span> * __<span class="keyword">nullable</span> <span class="built_in">NSSafeData</span>(<span class="type">id</span> obj);</span><br><span class="line">FOUNDATION_EXTERN <span class="built_in">NSArray</span> * __<span class="keyword">nullable</span> <span class="built_in">NSSafeArray</span>(<span class="type">id</span> obj);</span><br><span class="line">FOUNDATION_EXTERN <span class="built_in">NSSet</span> * __<span class="keyword">nullable</span> <span class="built_in">NSSafeSet</span>(<span class="type">id</span> obj);</span><br><span class="line">FOUNDATION_EXTERN <span class="built_in">NSDictionary</span> * __<span class="keyword">nullable</span> <span class="built_in">NSSafeDictionary</span>(<span class="type">id</span> obj);</span><br></pre></td></tr></table></figure><p>确保从这些函数出来的值是与定义类型一致的值。</p><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>即使拿到的值与定义类型一致，有时候我们要用的可能又是其他类型。</p><figure class="highlight objc"><figcaption><span>数据类型转换函数：</span></figcaption><table><tr><td class="code"><pre><span class="line">FOUNDATION_EXTERN VXObject *ValueX(<span class="type">id</span> &lt;VXConvertable&gt;obj);</span><br></pre></td></tr></table></figure><p>确保 VXObject 类型可以通过点语法直接得到原数据所能够转换的其他类型。VXObject 是一种中间类型，针对上述 6 种数据类型，每一种可以转换成其他哪些类型进行一一判断。</p><p>其中，NSNumber 只可以转换为 NSString、NSData，遵循 VXConvertable 协议。表示数字的 NSString，可以转换成 NSNumber，表示 Json 的字符串可以转换成对应的 NSArray 或者 NSDictionary，遵守 VXConvertableData 协议。反过来 NSArray、NSSet 或者 NSDictionary 则遵守 VXConvertableObject 协议。</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">VXObject</span>) &lt;<span class="title">VXConvertableData</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSNumber</span> (<span class="title">VXObject</span>) &lt;<span class="title">VXConvertable</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSData</span> (<span class="title">VXObject</span>) &lt;<span class="title">VXConvertableData</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSArray</span> (<span class="title">VXObject</span>) &lt;<span class="title">VXConvertableObject</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSSet</span> (<span class="title">VCObject</span>) &lt;<span class="title">VXConvertableObject</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSDictionary</span> (<span class="title">VXObject</span>) &lt;<span class="title">VXConvertableObject</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>它们的协议内容是：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">VXConvertable</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line">- (VXObject *)vx;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">VXConvertableObject</span> &lt;<span class="title">VXConvertable</span>&gt;</span></span><br><span class="line">- (VXObject *)vxWithOptions:(<span class="built_in">NSJSONWritingOptions</span>)opt;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">VXConvertableData</span> &lt;<span class="title">VXConvertable</span>&gt;</span></span><br><span class="line">- (VXObject *)vxWithOptions:(<span class="built_in">NSJSONReadingOptions</span>)opt;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>就按照这个思路进行开发，实现的代码就不再赘述了。</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/wiki/valuex/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/wiki/valuex/</span><span class="cap link fs12">https://xaoxuu.com/wiki/valuex/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 链式语法 </tag>
            
            <tag> 开源库 </tag>
            
            <tag> ObjC </tag>
            
            <tag> ValueX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计一个样式和逻辑分离的 HUD 库</title>
      <link href="/blog/20190827/"/>
      <url>/blog/20190827/</url>
      
        <content type="html"><![CDATA[<p>在写「ProHUD」之前我已经在「AXKit」中实现了原生控件快速构造方法、为公司写了 ObjC 版的可定制化 HUD、Swift 版的开源的 NoticeBoard（通知横幅）。ProHUD 诞生的意义就在于取代这些不那么完善的 HUD。</p><span id="more"></span><p><strong>这是一个简单易用且完全可定制化的 HUD</strong></p><p>ProHUD &#x3D; Toast（通知横幅） + Alert（ProgressHUD、弹窗） + ActionSheet（操作表）</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li>用相似的接口调用 <strong>Toast</strong>、<strong>Alert</strong>、<strong>Guard</strong> 组件。</li><li>程序初始化时配置自定义 UI 样式，快速调用。</li><li>用简便的方法拿到已发布的实例，避免重复发布实例。</li><li>可对已发布的实例进行数据更新。</li><li>横竖屏和 iPad 布局优化。</li><li>易于扩展，可以很方便的添加任意控件，并处理好布局。</li><li>可对所有实例监听消失事件。</li></ol><h3 id="Toast-顶部浮动通知条"><a href="#Toast-顶部浮动通知条" class="headerlink" title="Toast - 顶部浮动通知条"></a>Toast - 顶部浮动通知条</h3><ol><li>多个 Toast 并存策略（平铺）。</li><li>只接收一个点击事件。</li><li>可以预先对不同的场景配置不同的默认值（图标、持续时间）。</li></ol><h3 id="Alert-页面中心弹窗"><a href="#Alert-页面中心弹窗" class="headerlink" title="Alert - 页面中心弹窗"></a>Alert - 页面中心弹窗</h3><ol><li>多个 Alert 并存策略（具有景深效果的堆叠）。</li><li>可以预先对不同的场景配置不同的默认值（图标、持续时间）。</li><li>可快速创建具有预先配置的默认样式（Default、Destructive、Cancel）的按钮。</li><li>对已发布的实例进行文本和按钮的更新，包括新增、修改、删除文本和按钮。</li><li>强制退出按钮（防止超时导致页面卡死）。</li></ol><h3 id="Guard-页面底部操作表"><a href="#Guard-页面底部操作表" class="headerlink" title="Guard - 页面底部操作表"></a>Guard - 页面底部操作表</h3><ol><li>快速创建具有预先配置的默认样式的文本元素（标题、副标题、正文）。</li><li>可快速创建具有预先配置的默认样式（Default、Destructive、Cancel）的按钮。</li></ol><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><h3 id="UI与逻辑分离"><a href="#UI与逻辑分离" class="headerlink" title="UI与逻辑分离"></a>UI与逻辑分离</h3><p>这个库采用配置 UI 和调用接口分离的设计，这种思路借鉴了和而泰公共库，我认为这是一种调用比传统 UI 库方便的同时可定制化能力也比传统 UI 库强大的设计思路。</p><p>简单来说，就是你在 AppDelegate 中告诉 ProHUD，你要的横幅、弹窗、操作表分别是什么样的，如果参数是什么什么，就怎么展示 UI。然后调用的地方就不需要设置 UI 了，只需要专注于数据。</p><figure class="highlight swift"><figcaption><span>例如弹出一个正在加载的提示框：</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="type">Alert</span>.push(scene: .loading, title: <span class="string">&quot;正在加载&quot;</span>, message: <span class="string">&quot;请稍等片刻&quot;</span>)</span><br></pre></td></tr></table></figure><p>这样就发出了一个弹窗，而弹窗的样式，则在 AppDelegate 中以及预先配置好了。我使用了 <code>scene</code> 这个灵活的参数，你可以自己扩展场景。</p><figure class="highlight swift"><figcaption><span>为程序的弹窗场景设置模板，实现快速调用：</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">extension</span> <span class="title class_">ProHUD</span>.<span class="title class_">Scene</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> confirm: <span class="type">ProHUD</span>.<span class="type">Scene</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> scene <span class="operator">=</span> <span class="type">ProHUD</span>.<span class="type">Scene</span>(identifier: <span class="string">&quot;confirm&quot;</span>)</span><br><span class="line">        scene.image <span class="operator">=</span> <span class="type">UIImage</span>(named: <span class="string">&quot;ProHUDMessage&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> scene</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> delete: <span class="type">ProHUD</span>.<span class="type">Scene</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> scene <span class="operator">=</span> <span class="type">ProHUD</span>.<span class="type">Scene</span>(identifier: <span class="string">&quot;delete&quot;</span>)</span><br><span class="line">        scene.image <span class="operator">=</span> <span class="type">UIImage</span>(named: <span class="string">&quot;ProHUDTrash&quot;</span>)</span><br><span class="line">        scene.title <span class="operator">=</span> <span class="string">&quot;确认删除&quot;</span></span><br><span class="line">        scene.message <span class="operator">=</span> <span class="string">&quot;此操作不可撤销&quot;</span></span><br><span class="line">        <span class="keyword">return</span> scene</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> buy: <span class="type">ProHUD</span>.<span class="type">Scene</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> scene <span class="operator">=</span> <span class="type">ProHUD</span>.<span class="type">Scene</span>(identifier: <span class="string">&quot;buy&quot;</span>)</span><br><span class="line">        scene.image <span class="operator">=</span> <span class="type">UIImage</span>(named: <span class="string">&quot;ProHUDBuy&quot;</span>)</span><br><span class="line">        scene.title <span class="operator">=</span> <span class="string">&quot;确认付款&quot;</span></span><br><span class="line">        scene.message <span class="operator">=</span> <span class="string">&quot;一旦购买拒不退款&quot;</span></span><br><span class="line">        <span class="keyword">return</span> scene</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个 scene 就可以理解成一套模板。</p><h3 id="动态更新"><a href="#动态更新" class="headerlink" title="动态更新"></a>动态更新</h3><p>ProHUD 另一个优势就是动态更新，对于已经发布的实例，你可以方便的去更新内容。</p><figure class="highlight swift"><figcaption><span>示例1：获取刚才弹出的Loading，把它更新为加载成功。</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="type">Alert</span>.find(<span class="string">&quot;loading&quot;</span>, last: &#123; (a) <span class="keyword">in</span></span><br><span class="line">    a.update &#123; (vm) <span class="keyword">in</span></span><br><span class="line">        vm.scene <span class="operator">=</span> .success</span><br><span class="line">        vm.title <span class="operator">=</span> <span class="string">&quot;同步成功&quot;</span></span><br><span class="line">        vm.message <span class="operator">=</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight swift"><figcaption><span>示例2：获取刚才弹出的Loading，把它更新为加载失败，并增加重试按钮。</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="type">Alert</span>.find(<span class="string">&quot;loading&quot;</span>, last: &#123; (a) <span class="keyword">in</span></span><br><span class="line">    a.update &#123; (vm) <span class="keyword">in</span></span><br><span class="line">        vm.scene <span class="operator">=</span> .error</span><br><span class="line">        vm.title <span class="operator">=</span> <span class="string">&quot;同步失败&quot;</span></span><br><span class="line">        vm.message <span class="operator">=</span> <span class="string">&quot;请检查网络是否连接&quot;</span></span><br><span class="line">        vm.add(action: .default, title: <span class="string">&quot;重试&quot;</span>) &#123;</span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;</span><br><span class="line">        vm.add(action: .cancel, title: <span class="string">&quot;取消&quot;</span>, handler: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="极端场景"><a href="#极端场景" class="headerlink" title="极端场景"></a>极端场景</h3><p>很多库没有多实例管理，很容易出现简单粗暴的视图重叠现象，ProHUD 针对不同场景做了不同的优化，对于横幅来说，可以平铺显示，像系统的通知中心一样，你可以拖拽向上移除。对于弹窗来说，我给底层的弹窗做了景深效果处理，使得看起来不像是 BUG。</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/wiki/prohud/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/wiki/prohud/</span><span class="cap link fs12">https://xaoxuu.com/wiki/prohud/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 开源库 </tag>
            
            <tag> Swift </tag>
            
            <tag> ProHUD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心率管家的设计与开发（上篇：整体流程）</title>
      <link href="/blog/20190723/"/>
      <url>/blog/20190723/</url>
      
        <content type="html"><![CDATA[<p>近期开发并上架了新版心率管家 App（仅 iOS 端），专业版不定期限免，欢迎下载体验。本文将从设计、开发、上架等每个步骤和细节进行分享，也包含部分模块源码。</p><span id="more"></span><div class="tag-plugin link dis-select"><a class="link-card plain" title="心率管家" href="https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">心率管家</span><span class="cap link fs12">https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="立项"><a href="#立项" class="headerlink" title="立项"></a>立项</h2><h3 id="确定需求"><a href="#确定需求" class="headerlink" title="确定需求"></a>确定需求</h3><p>立项的初衷是满足随时测心率的需求（没有智能手环手表的人群），App 核心功能就是测量心率，围绕这个功能展开的是测量时更多细节的记录、对已有数据的筛选。再往深度挖掘的是数据分析、健康预测。</p><h3 id="市场考察"><a href="#市场考察" class="headerlink" title="市场考察"></a>市场考察</h3><p>虽然 AppStore 已有，但是无一例外都特别丑，要么收费要么有广告，所以不如自己做一个。</p><h3 id="测量原理"><a href="#测量原理" class="headerlink" title="测量原理"></a>测量原理</h3><p><strong>光电容积脉搏波描记法（PPG）</strong></p><p>是追踪可见光（通常为绿光）在人体组织中的反射。它具备一个可见光光源来照射皮肤，再使用光电传感器采集被皮肤反射回来的光线。PPG 有两种模式，透射式和反射式，像一般的手环手表这样，光源和传感器在同一侧的，就是反射式；而医院中常见的夹在指尖上的通常是透射式的，即光源和传感器在不同侧。 皮肤本身对光线的反射能力是相对稳定的，但是心脏泵血使得血管容积周期性地变化，导致反射光也呈现出周期性的波动值，特别是在指尖这种毛细血管非常丰富的部位，这种周期性的波动很容易被观察到。</p><p>Wikipedia: <a href="https://en.wikipedia.org/wiki/Photoplethysmogram">#Photoplethysmogram</a></p><p>对应到 App 上就是通过分析摄像头每一帧画面的色值，计算出颜色波动的频率，即为近似心率。</p><h3 id="定价策略"><a href="#定价策略" class="headerlink" title="定价策略"></a>定价策略</h3><ul><li>付费版：价格波动，通过降价和限免吸引爬虫收录。</li><li>免费版：限制了部分个性化功能，核心功能不受影响，没有任何广告。</li></ul><h3 id="技术方案"><a href="#技术方案" class="headerlink" title="技术方案"></a>技术方案</h3><p>语言：Swift5<br>设计模式：MVC<br>路由方案：JLRoutes<br>主题和UI管理：Inspire<br>缓存方案：SQLite<br>数据同步方案：暂定AppleHealth</p><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>初期使用 Sketch 制作效果图，在后期直接在项目中进行调整，没有再更新到 Sketch 中。下面这是最终发布到 AppStore 的应用截图：</p><div class="tag-plugin swiper-container" id="swiper-api" width="min"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot01.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot02.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot03.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot04.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot05.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot06.jpg"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><h3 id="心率测量组件"><a href="#心率测量组件" class="headerlink" title="心率测量组件"></a>心率测量组件</h3><p>心率测量功能开发为一个私有库，具体实现稍后补充。。。</p><h3 id="可定制UI"><a href="#可定制UI" class="headerlink" title="可定制UI"></a>可定制UI</h3><p>使用 <a href="https://xaoxuu.com/wiki/inspire/">Inspire</a> 作为主题管理器，目前暂未支持主题切换，后续更新会加入。</p><h3 id="快捷指令"><a href="#快捷指令" class="headerlink" title="快捷指令"></a>快捷指令</h3><p>使用 JLRoutes 路由方案，目前支持 URLSchemes 启动并开始测量，可接受两个参数：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 直接启动</span></span><br><span class="line">heartmatepro:<span class="comment">//record</span></span><br><span class="line"><span class="comment">// 自定义补光灯亮度（亮度值 l 为浮点数，取值范围是0~1）</span></span><br><span class="line">heartmatepro:<span class="comment">//record?l=0.3</span></span><br><span class="line"><span class="comment">// 自定义补光灯亮度和测量样本容器大小（样本容器大小 c 为正整数，取值范围是1~20）</span></span><br><span class="line">heartmatepro:<span class="comment">//record?l=0.1&amp;c=10</span></span><br></pre></td></tr></table></figure><p>免费版限制了自定义亮度，但是你依然可以通过这种方式来自定义。</p><h3 id="ProHUD"><a href="#ProHUD" class="headerlink" title="ProHUD"></a>ProHUD</h3><p>使用 <a href="https://xaoxuu.com/wiki/prohud/">ProHUD</a> 来负责弹窗和操作表，包括隐私政策页面。</p><div class="tag-plugin swiper-container" id="swiper-api" width="min"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot21.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot22.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot23.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot24.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot25.png"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><h2 id="上架"><a href="#上架" class="headerlink" title="上架"></a>上架</h2><p>新建应用，填写名称、BundleId 等资料，然后在 App 页面填写描述、网址、隐私政策链接、上传截图、确定分级……</p><p>待应用通过 testflight 测试无误后，打包上传。然后过几分钟 appstoreconnect 页面就可以选中刚才上传的包了，然后提交审核，第二天就审核通过。（现在 AppStore 新应用审核也太快了）</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://appstoreconnect.apple.com" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://appstoreconnect.apple.com</span><span class="cap link fs12">https://appstoreconnect.apple.com</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><h3 id="数据价值"><a href="#数据价值" class="headerlink" title="数据价值"></a>数据价值</h3><p>后续迭代中会在测量详情页面下方的留白处加上【标签】、【备注】、【数据分析】模块，前两者利于检索数据，数据分析目前没有能力独自完成，计划使用第三方服务。</p><h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><p><strong>图标</strong><br>这是一次彻底重做，所以也可以算是初版。很多细节还比较粗糙，例如图标没有经过打磨，设置列表连图标都没有。</p><p><strong>占位图</strong><br>很多页面在没有数据的时候也没有占位的图片，这个也会慢慢完善。</p><p><strong>心率区间</strong><br>心率卡片的颜色、心率卡片右上角以及归档页面心率的底部的彩色长条代表的是当前所处的心率区间，App 中并没有说明，后续迭代中也会完善这里。并且心率区间的划分需要年龄和性别，这个也会在后期进行完善。</p><h2 id="下篇：信号处理"><a href="#下篇：信号处理" class="headerlink" title="下篇：信号处理"></a>下篇：信号处理</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/blog/20200927/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/blog/20200927/</span><span class="cap link fs12">https://xaoxuu.com/blog/20200927/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> 心率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>整理 iOS 老项目中混乱不堪的多语言翻译</title>
      <link href="/blog/20171225/"/>
      <url>/blog/20171225/</url>
      
        <content type="html"><![CDATA[<p>linksmart 项目截止目前已经支持了 17 个国家的语言，从诞生到现在也已经经历了很多程序员的修改和维护，代码已经变得十分混乱。因为公司一直在接新的定制项目，所以也没有时间进行一次彻底的重构，只能在维护某方面的 BUG 的时候，对相关代码进行局部重构。</p><span id="more"></span><p>现在的情况是：</p><ul><li>同一个文本有些语言有翻译，有些语言没有翻译。</li><li>有些需要使用缩进的地方，由于某种原因，并没有使用 <code>UIEdgeInsets</code> 进行缩进，而是在文本前后加空格。(⊙﹏⊙)b</li></ul><h2 id="整理思路"><a href="#整理思路" class="headerlink" title="整理思路"></a>整理思路</h2><p>首先必须得找出一种合适的方法维护这些 Localizable.strings，在 Excel 里做一个总表，增加语言的时候，可以直接把英文的一列发给客户进行翻译。最大的优势是：随时可以用脚本把 Excel 里的所有语言导出成项目支持的 Localizable.strings 文件，极大提高效率。</p><h2 id="1-补全"><a href="#1-补全" class="headerlink" title="1. 补全"></a>1. 补全</h2><p>使用 <code>genstrings</code> 命令将所有 <code>.m</code> 文件中的 LocalizedString 文本生成 Localizable.strings。<br>打开终端，进入需要检测的文件夹，执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find ./ -name &quot;*.m&quot; -print0 | xargs -0 genstrings -o ./</span><br></pre></td></tr></table></figure><p>生成的这一份文件只包含所有 <code>.m</code> 文件中的国际化字符串，并不包含 plist 和 xib 中的字符串。接下来只要把这一份和原来的所有翻译合并起来去重，就得到一份最全的 key。</p><p>如果也需要检测 xib、.h 文件，则执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find . -name &#x27;*.xib&#x27; -o -name &#x27;*.[mh]&#x27; -print0 | xargs -0 genstrings -o ./</span><br></pre></td></tr></table></figure><p>生成的文件会存在当前目录。</p><h2 id="2-合并去重"><a href="#2-合并去重" class="headerlink" title="2. 合并去重"></a>2. 合并去重</h2><p>我尝试过直接读取 Localizable.strings 文件，但提示编码错误，就暂时 copy 到 txt 文件中进行处理。</p><blockquote><p>合并的Demo：<a href="https://github.com/xaoxuu/LocalizedTool-iOS">https://github.com/xaoxuu/LocalizedTool-iOS</a></p></blockquote><h2 id="3-导入Excel"><a href="#3-导入Excel" class="headerlink" title="3. 导入Excel"></a>3. 导入Excel</h2><p>接下来的步骤工作量有点大，就是重新把那些翻译导入 Excel 中，补全缺少的那些翻译。</p><h3 id="1-下载，解压"><a href="#1-下载，解压" class="headerlink" title="1. 下载，解压"></a>1. 下载，解压</h3><p>下载工具：<a href="https://github.com/CatchZeng/Localizable.strings2Excel">https://github.com/CatchZeng/Localizable.strings2Excel</a> 。</p><p>解压开之后把里面的两个zip也解压开</p><h3 id="2-安装工具"><a href="#2-安装工具" class="headerlink" title="2. 安装工具"></a>2. 安装工具</h3><h4 id="pyexcelerator"><a href="#pyexcelerator" class="headerlink" title="pyexcelerator"></a>pyexcelerator</h4><p>打开命令行工具，cd到 <code>.../Localizable.strings2Excel-master/pyexcelerator-0.6.4.1</code> 文件夹，执行：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure><h4 id="xld"><a href="#xld" class="headerlink" title="xld"></a>xld</h4><p>cd到 <code>.../Localizable.strings2Excel-master/xlrd-1.0.0</code> 文件夹，执行：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure><h3 id="3-使用脚本"><a href="#3-使用脚本" class="headerlink" title="3. 使用脚本"></a>3. 使用脚本</h3><p>cd到 <code>.../Localizable.strings2Excel-master/python</code> 文件夹</p><p>如需将Excel表格转换成Localizable.strings或者strings.xml文件，执行：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python LocalizableBack.py -f xxx/xxx.xls -t xxx/xxx</span><br></pre></td></tr></table></figure><p>如需将Localizable.strings或者strings.xml文件转换成Excel表格，执行：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python Localizable.py -f xxx/ -t xxx/</span><br></pre></td></tr></table></figure><blockquote><p>工具的链接在：<a href="https://github.com/CatchZeng/Localizable.strings2Excel">GitHub&#x2F;CatchZeng</a> 感谢作者编写了如此方便的工具！<br>更多详细使用脚本请阅读 <a href="https://github.com/CatchZeng/Localizable.strings2Excel">官方README文件</a> 。</p></blockquote><h2 id="附：检测中文字符串"><a href="#附：检测中文字符串" class="headerlink" title="附：检测中文字符串"></a>附：检测中文字符串</h2><p>如果项目的默认语言是中文，而且前期没有用多语言写法，可以使用 Xcode 的替换功能，将中文字符串替换成多语言的写法：</p><p>搜索：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(@&quot;[^&quot;]*[\u4E00-\u9FA5]+[^&quot;\n]*?&quot;)</span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NSLocalizedStringFromTable($0, @&quot;Localizable&quot;, nil)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 iOS 开发中，如何实现只推迟而不会重复执行的函数</title>
      <link href="/blog/20171109/"/>
      <url>/blog/20171109/</url>
      
        <content type="html"><![CDATA[<p>在 iOS 开发中，如果想推迟执行一段代码，使用 <code>dispatch_after</code> 函数可以轻易实现，但有时候我们想在它推迟的期间再次推迟，直到最终不再推迟的时候，才真正的被调用一次。这就需要每次先将旧的事件取消，然后重新设置。</p><span id="more"></span><p><strong>自动消失的视图</strong></p><p>例如当用户的某种操作点击一下屏幕就发出一条状态栏消息，消息在2秒后消失，在消失前如果用户又触发了这个条件，理应是在这次触发的2秒后消失，如果简单的使用 <code>dispatch_after</code> 函数进行延迟，结果会是在第一次点击的2秒后消失，可能你在1.5秒的时候又点击了一下，但是只过了0.5秒就消失了。</p><p><strong>降低服务器访问次数</strong></p><p>例如：用户修改了信息的30秒后上传至服务器。那么如果用户修改了姓名，然后30秒内又修改了头像，在修改了头像后的30秒内又修改了性别等等。我们希望的并不是每次修改就上传一次，而是在用户最后修改完所有信息之后，看起来似乎不准备继续修改了的时候，再上传至服务器。使用推迟而不重复执行的方法可以在避免多次访问服务器的同时及时地上传用户修改后的信息。</p><h2 id="便捷的方案：GCD"><a href="#便捷的方案：GCD" class="headerlink" title="便捷的方案：GCD"></a>便捷的方案：GCD</h2><p>实现的方法很简单，步骤如下：</p><ol><li>获取到函数</li><li>取消函数</li><li>重新赋值或启动</li></ol><h3 id="使用-Objective-C"><a href="#使用-Objective-C" class="headerlink" title="使用 Objective-C"></a>使用 Objective-C</h3><p>在 Objective-C 中，将要执行的代码保存成 <code>dispatch_block_t</code> 的静态类型变量，取出这个静态变量，然后使用 <code>dispatch_block_cancel()</code> 取消，然后重新设置它的值，然后调用 <code>dispatch_after</code>。</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)delayTest&#123;</span><br><span class="line">    <span class="keyword">static</span> dispatch_block_t task;</span><br><span class="line">    <span class="keyword">if</span> (task) &#123;</span><br><span class="line">        dispatch_block_cancel(task);</span><br><span class="line">    &#125;</span><br><span class="line">    task = dispatch_block_create(DISPATCH_BLOCK_BARRIER, ^&#123;</span><br><span class="line">        <span class="comment">// 被推迟执行的代码</span></span><br><span class="line">    &#125;);</span><br><span class="line">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(duration * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), task);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="tag-plugin note" ><div class="title"><strong>也可以使用 AXKit 实现</strong></div><div class="body"><p>也可以使用 <a href="https://github.com/xaoxuu/AXKit/">AXKit</a> 封装好的方法，将要执行的代码保存成 <code>ax_dispatch_operation_t</code> 的静态类型变量，使用 <code>ax_dispatch_cancel_operation()</code> 取消之前的任务，然后使用 <code>ax_dispatch_cancellable()</code> 再次赋值。</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)delayTest2&#123;</span><br><span class="line">    <span class="keyword">static</span> ax_dispatch_operation_t animationToken;</span><br><span class="line">    ax_dispatch_cancel_operation(animationToken);</span><br><span class="line">    animationToken = ax_dispatch_cancellable(duration, dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        <span class="comment">// 被推迟执行的代码</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h3 id="使用-Swift"><a href="#使用-Swift" class="headerlink" title="使用 Swift"></a>使用 Swift</h3><p>创建静态变量 <code>static var task = DispatchWorkItem.init&#123;&#125;</code>，先取消 <code>task.cancel()</code>，再赋值 <code>DispatchWorkItem</code>，然后使用 <code>DispatchQueue.main.asyncAfter(deadline: .now() + duration, execute: task)</code> 延迟调用。</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">var</span> task <span class="operator">=</span> <span class="type">DispatchWorkItem</span>.<span class="keyword">init</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">func</span> <span class="title function_">hide</span>(<span class="params">duration</span>: <span class="type">TimeInterval</span>) &#123;</span><br><span class="line">    task.cancel()</span><br><span class="line">    task <span class="operator">=</span> <span class="type">DispatchWorkItem</span>.<span class="keyword">init</span>(block: &#123;</span><br><span class="line">        <span class="comment">// 被推迟执行的代码</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: .now() <span class="operator">+</span> duration, execute: task)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更高效的方案：定时器"><a href="#更高效的方案：定时器" class="headerlink" title="更高效的方案：定时器"></a>更高效的方案：定时器</h2><p>上述方案存在一定的性能问题，在低频触发时没有问题，但是在每一秒都要触发一次或多次的时候，显然不合适。这时候可以设置一个定时器，通过定时器延迟调用，每次触发的时候只是修改定时器的 fireDate 属性，实现步骤不再赘述。</p>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GCD </tag>
            
            <tag> ObjC </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 接入 Strava 分享模块（下篇：StravaSDK）</title>
      <link href="/blog/20170628/"/>
      <url>/blog/20170628/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/StravaKit/StravaKit">StravaKit</a> 是一个比较新而且代码比较规范的第三方SDK，但是目前还没有上传功能（详见 <a href="https://github.com/StravaKit/StravaKit/blob/master/TODO.md">todo</a>）。所以我不得已对 <code>StravaKit 0.9.5</code> 增加上传功能，并进行一些简单封装和改编，使之能够植入到公司项目中。由于时间有限，我只增加了上传fit文件的功能，并且使用了第三方框架 <code>Alamofire</code>，所以需要在项目中导入 <code>Alamofire</code>。</p><span id="more"></span><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>StravaSDK 下载：<a href="https://github.com/xaoxuu/StravaSDK">StravaSDK.zip</a></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>需要三个参数：<code>ClientId</code>、<code>ClientSecret</code> 和app的 <code>URLSchemes</code>。其中前两个是在 <a href="https://labs.strava.com/developers/">Strava平台</a> 注册一个app的时候会给出。<br>示例代码：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">StravaSDK</span>.config(clientId: <span class="string">&quot;18583&quot;</span>, clientSecret: <span class="string">&quot;a05fde98a830effde2e0f84cc39d76b040d4d67e&quot;</span>, appSchemes: <span class="string">&quot;hitfit&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>获取授权</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">StravaSDK</span>.authorize()</span><br></pre></td></tr></table></figure><p>取消授权</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">StravaSDK</span>.deauthorize()</span><br></pre></td></tr></table></figure><p>查询是否已授权</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">StravaSDK</span>.isAuthorized</span><br></pre></td></tr></table></figure><h2 id="上传活动数据（-fit）"><a href="#上传活动数据（-fit）" class="headerlink" title="上传活动数据（.fit）"></a>上传活动数据（.fit）</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">StravaSDK</span>.uploadActivity(path: <span class="string">&quot;.../test.fit&quot;</span>, type: <span class="string">&quot;run&quot;</span>, name: <span class="string">&quot;Afternoon Run&quot;</span>) &#123; (response, error) <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> StravaSDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 接入 Strava 分享模块（上篇：FitSDK）</title>
      <link href="/blog/20170622/"/>
      <url>/blog/20170622/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.garmin.com/fit/?resources/fit/">fit</a> 是一种文件协议，体积小巧，多用于可穿戴设备记录、传输运动与健康数据。官方提供了 C、C++、Java 语言的 SDK 和非常详细的使用文档。因此在 iOS 端接入 fit 就需要在 C 或 C++ 的 SDK 基础上进行一点面向对象的封装。</p><span id="more"></span><h2 id="认识-Fit"><a href="#认识-Fit" class="headerlink" title="认识 Fit"></a>认识 Fit</h2><p>我使用的 C 语言的 SDK，官方有示例 demo，在 <code>fit_mgr</code> 文件中提供了一些示例，这些代码未必全部都要用到。创建一个最简单的 <code>.fit</code> 文件的流程是：</p><h3 id="写-fileid"><a href="#写-fileid" class="headerlink" title="写 fileid"></a>写 fileid</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fit_transaction_file</span><span class="params">(FIT_FILE type, FIT_MANUFACTURER manufacturer, FIT_UINT16 product, FIT_UINT32Z serial_number)</span>&#123;</span><br><span class="line">    <span class="comment">// Write file id message.</span></span><br><span class="line">    FIT_UINT8 local_mesg_number = <span class="number">0</span>;</span><br><span class="line">    FIT_FILE_ID_MESG file_id;</span><br><span class="line">    Fit_InitMesg(fit_mesg_defs[FIT_MESG_FILE_ID], &amp;file_id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @xaoxuu: type FIT_FILE_ACTIVITY = 4 活动数据</span></span><br><span class="line">    file_id.type = type;</span><br><span class="line">    <span class="comment">// @xaoxuu: 厂商</span></span><br><span class="line">    file_id.manufacturer = manufacturer;</span><br><span class="line">    <span class="comment">// @xaoxuu: 产品</span></span><br><span class="line">    <span class="comment">//        file_id.product_name</span></span><br><span class="line">    file_id.product = product;</span><br><span class="line">    <span class="comment">// @xaoxuu: 序列号</span></span><br><span class="line">    file_id.serial_number = serial_number;</span><br><span class="line">    <span class="comment">// @xaoxuu: 生产日期</span></span><br><span class="line">    <span class="comment">//        time_t now;</span></span><br><span class="line">    <span class="comment">//        time(&amp;now);</span></span><br><span class="line">    <span class="comment">//        file_id.time_created = now;</span></span><br><span class="line"></span><br><span class="line">    WriteMessageDefinition(local_mesg_number, fit_mesg_defs[FIT_MESG_FILE_ID], FIT_FILE_ID_MESG_DEF_SIZE, static_fp);</span><br><span class="line">    WriteMessage(local_mesg_number, &amp;file_id, FIT_FILE_ID_MESG_SIZE, static_fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">fit_transaction_field_desc</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// Write a Field Description</span></span><br><span class="line">    FIT_UINT8 local_mesg_number = <span class="number">1</span>;</span><br><span class="line">    FIT_FIELD_DESCRIPTION_MESG field_description_mesg;</span><br><span class="line"></span><br><span class="line">    Fit_InitMesg(fit_mesg_defs[FIT_MESG_FIELD_DESCRIPTION], &amp;field_description_mesg);</span><br><span class="line">    field_description_mesg.developer_data_index = <span class="number">0</span>;</span><br><span class="line">    field_description_mesg.field_definition_number = <span class="number">0</span>;</span><br><span class="line">    field_description_mesg.fit_base_type_id = FIT_BASE_TYPE_UINT16;</span><br><span class="line">    WriteMessageDefinition(local_mesg_number, fit_mesg_defs[FIT_MESG_FIELD_DESCRIPTION], FIT_FIELD_DESCRIPTION_MESG_DEF_SIZE, static_fp);</span><br><span class="line">    WriteMessage(local_mesg_number, &amp;field_description_mesg, FIT_FIELD_DESCRIPTION_MESG_SIZE, static_fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写-record"><a href="#写-record" class="headerlink" title="写 record"></a>写 record</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 写入Record Defenition</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fit_transaction_record_def</span><span class="params">()</span>&#123;</span><br><span class="line">    FIT_UINT8 local_mesg_number = <span class="number">2</span>;</span><br><span class="line">    WriteMessageDefinition(local_mesg_number, fit_mesg_defs[FIT_MESG_RECORD], FIT_RECORD_MESG_DEF_SIZE, static_fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 循环写入record数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fit_transaction_record_msg</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> timestamp, <span class="type">int</span> position_lat, <span class="type">int</span> position_long, <span class="type">unsigned</span> <span class="type">int</span> distance, <span class="type">unsigned</span> <span class="type">short</span> altitude, <span class="type">unsigned</span> <span class="type">short</span> speed, <span class="type">unsigned</span> <span class="type">char</span> heart_rate)</span>&#123;</span><br><span class="line">    <span class="comment">//Record message</span></span><br><span class="line">    FIT_UINT8 local_mesg_number = <span class="number">2</span>;</span><br><span class="line">    FIT_RECORD_MESG record;</span><br><span class="line"></span><br><span class="line">    Fit_InitMesg(fit_mesg_defs[FIT_MESG_RECORD], &amp;record);</span><br><span class="line">    record.timestamp = timestamp;</span><br><span class="line">    record.position_lat = position_lat;</span><br><span class="line">    record.position_long = position_long;</span><br><span class="line">    record.distance = distance;</span><br><span class="line">    record.altitude = altitude;</span><br><span class="line">    record.speed = speed;</span><br><span class="line">    record.heart_rate = heart_rate;</span><br><span class="line">    WriteMessage(local_mesg_number,&amp;record,FIT_RECORD_MESG_SIZE,static_fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开始封装"><a href="#开始封装" class="headerlink" title="开始封装"></a>开始封装</h2><h3 id="设计模型"><a href="#设计模型" class="headerlink" title="设计模型"></a>设计模型</h3><p>FitActivity.h</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FitAcitvity.h</span></span><br><span class="line"><span class="comment">//  FitSDK</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by xaoxuu on 04/07/2017.</span></span><br><span class="line"><span class="comment">//  Copyright © 2017 xaoxuu. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@class</span> <span class="title">FitActivityRecord</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, FitActivityType) &#123;</span><br><span class="line">    FitActivityTypeWalk = <span class="number">11</span>, <span class="comment">// 枚举值等于FIT_SPORT值</span></span><br><span class="line">    FitActivityTypeRun = <span class="number">1</span>,</span><br><span class="line">    FitActivityTypeRide = <span class="number">2</span>,</span><br><span class="line">    FitActivityTypeSwim = <span class="number">5</span>,</span><br><span class="line">    FitActivityTypeHike = <span class="number">17</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">FitActivity</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: fit 文件路径</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">copy</span>, <span class="keyword">readonly</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *path;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: 活动名</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">copy</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: 活动类型</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) FitActivityType type;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: 活动类型</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">copy</span>, <span class="keyword">readonly</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *typeString;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: records</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">NSMutableArray</span>&lt;FitActivityRecord *&gt; *records;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 添加一条record</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param record record</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="type">void</span>)addRecord:(<span class="type">void</span> (^)(FitActivityRecord *aRecord))record;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">FitActivityRecord</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: timestamp</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">unsigned</span> <span class="type">int</span> timestamp;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: position_lat</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">int</span> position_lat;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: position_long</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">int</span> position_long;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: distance</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">unsigned</span> <span class="type">int</span> distance;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: altitude</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">unsigned</span> <span class="type">short</span> altitude;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: speed</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">unsigned</span> <span class="type">short</span> speed;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @xaoxuu: heart_rate</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">nonatomic</span>) <span class="type">unsigned</span> <span class="type">char</span> heart_rate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>FitActivity.m</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FitAcitvity.m</span></span><br><span class="line"><span class="comment">//  FitSDK</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by xaoxuu on 04/07/2017.</span></span><br><span class="line"><span class="comment">//  Copyright © 2017 xaoxuu. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="string">&quot;FitAcitvity.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">FitActivity</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="variable language_">super</span> init]) &#123;</span><br><span class="line">        _records = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">        <span class="keyword">self</span>.type = FitActivityTypeWalk;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)setType:(FitActivityType)type&#123;</span><br><span class="line">    _type = type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> FitActivityTypeWalk:</span><br><span class="line">            _typeString = <span class="string">@&quot;walk&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FitActivityTypeRun:</span><br><span class="line">            _typeString = <span class="string">@&quot;run&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FitActivityTypeRide:</span><br><span class="line">            _typeString = <span class="string">@&quot;ride&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FitActivityTypeSwim:</span><br><span class="line">            _typeString = <span class="string">@&quot;swim&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FitActivityTypeHike:</span><br><span class="line">            _typeString = <span class="string">@&quot;hike&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)setName:(<span class="built_in">NSString</span> *)name&#123;</span><br><span class="line">    _name = name;</span><br><span class="line">    _path = [<span class="keyword">self</span> pathWithName:name];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)addRecord:(<span class="type">void</span> (^)(FitActivityRecord *aRecord))record&#123;</span><br><span class="line">    <span class="keyword">if</span> (record) &#123;</span><br><span class="line">        FitActivityRecord *rec = [FitActivityRecord new];</span><br><span class="line">        record(rec);</span><br><span class="line">        [<span class="keyword">self</span>.records addObject:rec];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)pathWithName:(<span class="built_in">NSString</span> *)name&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *path = [[<span class="built_in">NSTemporaryDirectory</span>() stringByAppendingPathComponent:<span class="string">@&quot;com.xaoxuu.fitsdk&quot;</span>] stringByAppendingPathComponent:name];</span><br><span class="line">    path = [path stringByAppendingPathExtension:<span class="string">@&quot;fit&quot;</span>];</span><br><span class="line">    <span class="comment">// create dir if not exist</span></span><br><span class="line">    <span class="built_in">NSFileManager</span> *fm = [<span class="built_in">NSFileManager</span> defaultManager];</span><br><span class="line">    <span class="built_in">NSString</span> *dir = path.stringByDeletingLastPathComponent;</span><br><span class="line">    <span class="type">BOOL</span> result = [fm createDirectoryAtPath:dir withIntermediateDirectories:<span class="literal">YES</span> attributes:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line">    <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@&quot;can not create the directory at path %@&quot;</span>,dir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">FitActivityRecord</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="variable language_">super</span> init]) &#123;</span><br><span class="line">        _timestamp = <span class="number">702940946</span>;</span><br><span class="line">        _position_lat = <span class="number">0</span>;</span><br><span class="line">        _position_long = <span class="number">0</span>;</span><br><span class="line">        _distance = <span class="number">0</span>;</span><br><span class="line">        _altitude = <span class="number">0</span>;</span><br><span class="line">        _speed = <span class="number">0</span>;</span><br><span class="line">        _heart_rate = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="封装接口"><a href="#封装接口" class="headerlink" title="封装接口"></a>封装接口</h3><p>FitSDK.h</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FitSDK.h</span></span><br><span class="line"><span class="comment">//  FitSDK</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by xaoxuu on 04/07/2017.</span></span><br><span class="line"><span class="comment">//  Copyright © 2017 xaoxuu. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;FitAcitvity.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">FitSDK</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 创建一个活动数据fit文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param activity 活动数据</span></span><br><span class="line"><span class="comment"> @return 活动数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (FitActivity *)createActivity:(<span class="type">void</span> (^)(FitActivity *activity))activity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>FitSDK.m</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FitSDK.m</span></span><br><span class="line"><span class="comment">//  FitSDK</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by xaoxuu on 04/07/2017.</span></span><br><span class="line"><span class="comment">//  Copyright © 2017 xaoxuu. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="string">&quot;FitSDK.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;fit_mgr.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">FitSDK</span></span></span><br><span class="line"></span><br><span class="line">+ (FitActivity *)createActivity:(<span class="type">void</span> (^)(FitActivity *activity))activity&#123;</span><br><span class="line">    FitActivity *act = [FitActivity new];</span><br><span class="line">    <span class="keyword">if</span> (activity) &#123;</span><br><span class="line">        activity(act);</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span> createActivityWithModel:act];</span><br><span class="line">    <span class="keyword">return</span> act;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ (<span class="type">void</span>)createActivityWithModel:(FitActivity *)activity&#123;</span><br><span class="line">    <span class="comment">// @xaoxuu: fit file</span></span><br><span class="line">    <span class="keyword">const</span> <span class="type">char</span> *fp = [activity.path cStringUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    fit_transaction(fp, activity.type, ^&#123;</span><br><span class="line">        [activity.records enumerateObjectsUsingBlock:^(FitActivityRecord * _Nonnull obj, <span class="built_in">NSUInteger</span> idx, <span class="type">BOOL</span> * _Nonnull stop) &#123;</span><br><span class="line">            fit_transaction_record_msg(obj.timestamp, obj.position_lat, obj.position_long, obj.distance, obj.altitude, obj.speed, obj.heart_rate);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">FitActivity *activity = [FitSDK createActivity:^(FitActivity *activity) &#123;</span><br><span class="line">    activity.name = <span class="string">@&quot;test&quot;</span>;</span><br><span class="line">    activity.type = FitActivityTypeRun;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">        [activity addRecord:^(FitActivityRecord *aRecord) &#123;</span><br><span class="line">            aRecord.timestamp = [[<span class="built_in">NSDate</span> date] timeIntervalSince1970] - <span class="number">631065600</span>;</span><br><span class="line">            aRecord.position_lat = <span class="number">495280430</span>+i*<span class="number">1000</span>;</span><br><span class="line">            aRecord.position_long = <span class="number">-872696681</span>-i*<span class="number">1500</span>;</span><br><span class="line">            aRecord.distance = <span class="number">2</span>+i/<span class="number">100</span>;</span><br><span class="line">            aRecord.altitude = <span class="number">287.2</span>+i;</span><br><span class="line">            aRecord.speed = <span class="number">0.29</span>+i/<span class="number">50</span>;</span><br><span class="line">            aRecord.heart_rate = <span class="number">68</span>+i/<span class="number">4</span>;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;];</span><br><span class="line"><span class="comment">// activity.path就是生成的fit文件路径</span></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@&quot;%@&quot;</span>, activity.path);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> FitSDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何封装自己的 iOS Framework 静态库</title>
      <link href="/blog/20161106/"/>
      <url>/blog/20161106/</url>
      
        <content type="html"><![CDATA[<p>像工作中使用的第三方SDK基本上都是闭源的，因为公司不能把自己的机密泄露出去。所以当需要给别人提供SDK但不让他们知道代码的实现时就需要封装成静态库。</p><span id="more"></span><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>创建工程，最好是起名为 <code>xxxDemo</code> 例如 <code>AXKitDemo</code>，然后新建一个 target 名为 <code>AXKit</code>，并把原来的工程改名为 <code>AXKit</code>。（为了方便在 demo 中调试静态库）</li><li>新建一个 target ，选择类型为 <code>framework</code>。</li><li>在 <code>framework</code> 中创建需要封装的类，写好代码。</li><li>在 <code>Build Setting</code> 里更改参数，<code>Math-O Type</code> 为 <code>Static Library</code>。</li><li>在 <code>Build Phases -&gt; Headers</code> 里将需要暴露出来的头文件从 <code>Project</code> 移动到 <code>Public</code>。</li><li>添加一个 <code>Aggregate</code> 的 target，并添加运行脚本。目的是把编译出来的真机版和模拟器版的 <code>framework</code> 合并。</li><li>模拟器编译一下，真机编译一下，然后 <code>Aggregate</code> 编译一下，然后在项目的 <code>Products</code> 文件夹里就有了最终生成的静态库。</li></ol><h2 id="自动合成脚本"><a href="#自动合成脚本" class="headerlink" title="自动合成脚本"></a>自动合成脚本</h2><p><code>Aggregate</code> 的 Run Script 脚本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if [ &quot;$&#123;ACTION&#125;&quot; = &quot;build&quot; ]</span><br><span class="line">then</span><br><span class="line">INSTALL_DIR=$&#123;SRCROOT&#125;/Products/$&#123;PROJECT_NAME&#125;.framework</span><br><span class="line"></span><br><span class="line">DEVICE_DIR=$&#123;BUILD_ROOT&#125;/$&#123;CONFIGURATION&#125;-iphoneos/$&#123;PROJECT_NAME&#125;.framework</span><br><span class="line"></span><br><span class="line">SIMULATOR_DIR=$&#123;BUILD_ROOT&#125;/$&#123;CONFIGURATION&#125;-iphonesimulator/$&#123;PROJECT_NAME&#125;.framework</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ -d &quot;$&#123;INSTALL_DIR&#125;&quot; ]</span><br><span class="line">then</span><br><span class="line">rm -rf &quot;$&#123;INSTALL_DIR&#125;&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">mkdir -p &quot;$&#123;INSTALL_DIR&#125;&quot;</span><br><span class="line"></span><br><span class="line">cp -R &quot;$&#123;DEVICE_DIR&#125;/&quot; &quot;$&#123;INSTALL_DIR&#125;/&quot;</span><br><span class="line">#ditto &quot;$&#123;DEVICE_DIR&#125;/Headers&quot; &quot;$&#123;INSTALL_DIR&#125;/Headers&quot;</span><br><span class="line"></span><br><span class="line">lipo -create &quot;$&#123;DEVICE_DIR&#125;/$&#123;PROJECT_NAME&#125;&quot; &quot;$&#123;SIMULATOR_DIR&#125;/$&#123;PROJECT_NAME&#125;&quot; -output &quot;$&#123;INSTALL_DIR&#125;/$&#123;PROJECT_NAME&#125;&quot;</span><br><span class="line"></span><br><span class="line">#open &quot;$&#123;DEVICE_DIR&#125;&quot;</span><br><span class="line">#open &quot;$&#123;SRCROOT&#125;/Products&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何从 UIImageView 指定的坐标点取色？</title>
      <link href="/blog/20160914/"/>
      <url>/blog/20160914/</url>
      
        <content type="html"><![CDATA[<p>开发中有时候会遇到这样的需求，要给用户一个取色板，让用户从中自由地选取颜色，用来改变主题或者控制灯具的颜色等。这时候我们就需要获取一个视图的指定坐标的颜色值。</p><span id="more"></span><p>有时候我们可能会需要一个取色器，例如我的蓝牙灯项目，让用户从一个取色器中随意取色：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;CoreGraphics/CoreGraphics.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="string">&quot;UIImage+ColorAtPixel.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIImage</span> (<span class="title">ColorAtPixel</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIColor</span> *)colorAtPixel:(<span class="built_in">CGPoint</span>)point &#123;</span><br><span class="line">    <span class="comment">// Cancel if point is outside image coordinates</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">CGRectContainsPoint</span>(<span class="built_in">CGRectMake</span>(<span class="number">0.0</span>f, <span class="number">0.0</span>f, <span class="keyword">self</span>.size.width, <span class="keyword">self</span>.size.height), point)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a 1x1 pixel byte array and bitmap context to draw the pixel into.</span></span><br><span class="line">    <span class="comment">// Reference: http://stackoverflow.com/questions/1042830/retrieving-a-pixel-alpha-value-for-a-uiimage</span></span><br><span class="line">    <span class="built_in">NSInteger</span> pointX = trunc(point.x);</span><br><span class="line">    <span class="built_in">NSInteger</span> pointY = trunc(point.y);</span><br><span class="line">    <span class="built_in">CGImageRef</span> cgImage = <span class="keyword">self</span>.CGImage;</span><br><span class="line">    <span class="built_in">NSUInteger</span> width = <span class="built_in">CGImageGetWidth</span>(cgImage);</span><br><span class="line">    <span class="built_in">NSUInteger</span> height = <span class="built_in">CGImageGetHeight</span>(cgImage);</span><br><span class="line">    <span class="built_in">CGColorSpaceRef</span> colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</span><br><span class="line">    <span class="type">int</span> bytesPerPixel = <span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> bytesPerRow = bytesPerPixel * <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">NSUInteger</span> bitsPerComponent = <span class="number">8</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> pixelData[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">CGBitmapContextCreate</span>(pixelData,</span><br><span class="line">                                                 <span class="number">1</span>,</span><br><span class="line">                                                 <span class="number">1</span>,</span><br><span class="line">                                                 bitsPerComponent,</span><br><span class="line">                                                 bytesPerRow,</span><br><span class="line">                                                 colorSpace,</span><br><span class="line">                                                 kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</span><br><span class="line">    <span class="built_in">CGColorSpaceRelease</span>(colorSpace);</span><br><span class="line">    <span class="built_in">CGContextSetBlendMode</span>(context, kCGBlendModeCopy);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Draw the pixel we are interested in onto the bitmap context</span></span><br><span class="line">    <span class="built_in">CGContextTranslateCTM</span>(context, -pointX, -pointY);</span><br><span class="line">    <span class="built_in">CGContextDrawImage</span>(context, <span class="built_in">CGRectMake</span>(<span class="number">0.0</span>f, <span class="number">0.0</span>f, (<span class="built_in">CGFloat</span>)width, (<span class="built_in">CGFloat</span>)height), cgImage);</span><br><span class="line">    <span class="built_in">CGContextRelease</span>(context);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Convert color values [0..255] to floats [0.0..1.0]</span></span><br><span class="line">    <span class="built_in">CGFloat</span> red   = (<span class="built_in">CGFloat</span>)pixelData[<span class="number">0</span>] / <span class="number">255.0</span>f;</span><br><span class="line">    <span class="built_in">CGFloat</span> green = (<span class="built_in">CGFloat</span>)pixelData[<span class="number">1</span>] / <span class="number">255.0</span>f;</span><br><span class="line">    <span class="built_in">CGFloat</span> blue  = (<span class="built_in">CGFloat</span>)pixelData[<span class="number">2</span>] / <span class="number">255.0</span>f;</span><br><span class="line">    <span class="built_in">CGFloat</span> alpha = (<span class="built_in">CGFloat</span>)pixelData[<span class="number">3</span>] / <span class="number">255.0</span>f;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">UIColor</span> colorWithRed:red green:green blue:blue alpha:alpha];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h2 id="开始优化"><a href="#开始优化" class="headerlink" title="开始优化"></a>开始优化</h2><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 从圆形范围内的指定点获取UIColor对象，并在block中执行操作</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param point      指定坐标点</span></span><br><span class="line"><span class="comment"> @param completion 取色完成后执行的block</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="type">void</span>)ax_getColorFromCircleWithPoint:(<span class="built_in">CGPoint</span>)point completion:(<span class="type">void</span> (^)(<span class="built_in">UIColor</span> *color))completion;</span><br></pre></td></tr></table></figure><p>调用起来应该是这样的：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line">[imageView ax_getColorFromCircleWithPoint:point completion:^(<span class="built_in">UIColor</span> *color)&#123;</span><br><span class="line">  <span class="comment">// 在这里直接用color</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>因为取色板一般是圆形的，如果坐标点超出了圆形但依然在imageView的frame内，可能会返回一些用户不期望的结果，用block巧妙地解决了这一问题，超出范围就不再有回调。如果你认为我的封装使用起来更加方便，可以继续阅读下面详细内容。</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>推荐CocoaPods方式，在podfile中添加一行：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;AXKit&#x27;</span></span><br></pre></td></tr></table></figure><p>然后在终端中执行 <code>pod install</code> 即可完成安装。</p><p>AXKit的全局头文件是：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过CocoaPods或静态库方式安装</span></span><br><span class="line"><span class="meta">#import <span class="string">&lt;AXKit/AXKit.h&gt;</span></span></span><br><span class="line"><span class="comment">// 通过手动方式</span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;AXKit.h&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="接口声明"><a href="#接口声明" class="headerlink" title="接口声明"></a>接口声明</h2><h3 id="从指定点获取RGBA值"><a href="#从指定点获取RGBA值" class="headerlink" title="从指定点获取RGBA值"></a>从指定点获取RGBA值</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)ax_getRed:(<span class="keyword">nullable</span> <span class="built_in">CGFloat</span> *)red green:(<span class="keyword">nullable</span> <span class="built_in">CGFloat</span> *)green blue:(<span class="keyword">nullable</span> <span class="built_in">CGFloat</span> *)blue alpha:(<span class="keyword">nullable</span> <span class="built_in">CGFloat</span> *)alpha withPoint:(<span class="built_in">CGPoint</span>)point;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用起来是这样的：</span></span><br><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line"><span class="built_in">CGFloat</span> r,g,b,a;</span><br><span class="line">[imageView ax_getRed:&amp;r green:&amp;g blue:&amp;b alpha:&amp;a withPoint:point];</span><br><span class="line"><span class="comment">// 然后r/g/b/a就有了值</span></span><br></pre></td></tr></table></figure><p>需要自己创建变量，然后把地址传进去，然后才能用，不推荐直接使用。</p><h3 id="从指定点获取RGBA值，并在block中执行操作"><a href="#从指定点获取RGBA值，并在block中执行操作" class="headerlink" title="从指定点获取RGBA值，并在block中执行操作"></a>从指定点获取RGBA值，并在block中执行操作</h3><p>加了一个block，调用起来就方便许多：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)ax_getRGBAWithPoint:(<span class="built_in">CGPoint</span>)point completion:(<span class="type">void</span>(^)(<span class="built_in">CGFloat</span> red,<span class="built_in">CGFloat</span> green,<span class="built_in">CGFloat</span> blue,<span class="built_in">CGFloat</span> alpha))completion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用起来是这样的：</span></span><br><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line">[imageView ax_getRGBAWithPoint:point completion:^(<span class="built_in">CGFloat</span> red,<span class="built_in">CGFloat</span> green,<span class="built_in">CGFloat</span> blue,<span class="built_in">CGFloat</span> alpha)&#123;</span><br><span class="line">  <span class="comment">// 在这里直接用red/green/blue/alpha</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>优点是不需要自己创建变量，直接调用方法，在block回调里直接获得red&#x2F;green&#x2F;blue&#x2F;alpha值。</p><blockquote><p>但是，很多时候，我们用的取色器是圆形的，就需要再进行一点封装。</p></blockquote><h3 id="从圆形范围内的指定点获取RGBA值，并在block中执行操作"><a href="#从圆形范围内的指定点获取RGBA值，并在block中执行操作" class="headerlink" title="从圆形范围内的指定点获取RGBA值，并在block中执行操作"></a>从圆形范围内的指定点获取RGBA值，并在block中执行操作</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)ax_getRGBAFromCircleWithPoint:(<span class="built_in">CGPoint</span>)point completion:(<span class="type">void</span> (^)(<span class="built_in">CGFloat</span> red,<span class="built_in">CGFloat</span> green,<span class="built_in">CGFloat</span> blue,<span class="built_in">CGFloat</span> alpha))completion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用起来是这样的：</span></span><br><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line">[imageView ax_getRGBAFromCircleWithPoint:point completion:^(<span class="built_in">CGFloat</span> red,<span class="built_in">CGFloat</span> green,<span class="built_in">CGFloat</span> blue,<span class="built_in">CGFloat</span> alpha)&#123;</span><br><span class="line">  <span class="comment">// 在这里直接用red/green/blue/alpha</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>跟第2种调用方法一模一样，但是区别是超出圆形范围之后就不再执行block回调了，这是一种<strong>安全</strong>的做法。如果不用block方式，那么即使超出了圆形范围，也一定会返回对应的rgba值，会造成不想要的后果。</p><blockquote><p>block的回调机制巧妙地解决了这个问题。</p></blockquote><p>如果我想直接获得一个UIColor对象呢，跟获取RGBA一样有三种方法。</p><h3 id="从指定点获取UIColor对象"><a href="#从指定点获取UIColor对象" class="headerlink" title="从指定点获取UIColor对象"></a>从指定点获取UIColor对象</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">UIColor</span> *)ax_getColorWithPoint:(<span class="built_in">CGPoint</span>)point;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用起来是这样的：</span></span><br><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line"><span class="built_in">UIColor</span> *color = [imageView ax_getColorWithPoint:point];</span><br><span class="line"><span class="comment">// 获得UIColor对象</span></span><br></pre></td></tr></table></figure><p>由声明可以看出来，返回的值是一个可空类型，因此这跟第一种方法一样是<strong>不安全</strong>的。</p><h3 id="从指定点获取UIColor对象，并在block中执行操作"><a href="#从指定点获取UIColor对象，并在block中执行操作" class="headerlink" title="从指定点获取UIColor对象，并在block中执行操作"></a>从指定点获取UIColor对象，并在block中执行操作</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)ax_getColorWithPoint:(<span class="built_in">CGPoint</span>)point completion:(<span class="type">void</span>(^)(<span class="built_in">UIColor</span> *color))completion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用起来是这样的：</span></span><br><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line">[imageView ax_getColorWithPoint:point completion:^(<span class="built_in">UIColor</span> *color)&#123;</span><br><span class="line">  <span class="comment">// 在这里直接用color</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>这种方法比第4种要方便一些，如果超出UIImageView的时候就不执行block里的代码。</p><h3 id="从圆形范围内的指定点获取UIColor对象，并在block中执行操作"><a href="#从圆形范围内的指定点获取UIColor对象，并在block中执行操作" class="headerlink" title="从圆形范围内的指定点获取UIColor对象，并在block中执行操作"></a>从圆形范围内的指定点获取UIColor对象，并在block中执行操作</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)ax_getColorFromCircleWithPoint:(<span class="built_in">CGPoint</span>)point completion:(<span class="type">void</span> (^)(<span class="built_in">UIColor</span> *color))completion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用起来是这样的：</span></span><br><span class="line"><span class="comment">// 已知imageView、point</span></span><br><span class="line">[imageView ax_getColorFromCircleWithPoint:point completion:^(<span class="built_in">UIColor</span> *color)&#123;</span><br><span class="line">  <span class="comment">// 在这里直接用color</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>引言中的Demo用的就是这一种方法，在圆形取色器中取色，既方便又安全。</p><h2 id="附：Gist"><a href="#附：Gist" class="headerlink" title="附：Gist"></a>附：Gist</h2><script src="https://gist.github.xaox.cc/xaoxuu/27de7d2fe02530faab0147d8001a2921.js"></script>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 开源库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ObjC 使用链式语法更优雅地管理沙盒文件</title>
      <link href="/blog/20160912/"/>
      <url>/blog/20160912/</url>
      
        <content type="html"><![CDATA[<p>假如你需要把一个字典或者别的什么东西保存到沙盒里，你准备怎么做？也许你已经条件反射的想到了操作步骤……其实，你可以不必每次都那么老老实实的把每一步写出来，一行代码就可以了：【路径+保存文件】两个关键点，组成一条链式语法。</p><span id="more"></span><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="string">@&quot;文件名&quot;</span>.cachePath.save(要保存的内容);</span><br></pre></td></tr></table></figure><h2 id="接入AXKit"><a href="#接入AXKit" class="headerlink" title="接入AXKit"></a>接入AXKit</h2><p>如果你的项目里还没有AXKit，可以在pod文件里添加一条 <code>pod &#39;AXKit&#39;</code> 进行接入，也可移步至<a href="https://xaoxuu.com/wiki/axkit">AXKit在线文档</a>查看详细的安装和使用方法。</p><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><p>我封装了几个常用的沙盒路径，如下：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)mainBundlePath; <span class="comment">// mainBundlePath就是主工程项目里的文件路径</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)docPath; <span class="comment">// 文档，iTunes会备份，适合保存重要的数据</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)cachePath; <span class="comment">// 缓存，iTunes不会备份，适合保存不太重要的较大的数据</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)tempPath; <span class="comment">// 临时文件，iTunes不会备份，系统空闲时会自动删除，设备重启时也会删除</span></span><br></pre></td></tr></table></figure><p>除此之外，还提供了所有的路径，通过枚举的方式获取：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="built_in">NSString</span> *(^)(<span class="built_in">NSSearchPathDirectory</span>))path; <span class="comment">// 传入NSSearchPathDirectory枚举就可得到路径</span></span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>在沙盒的文档路径里有个叫 <code>abc.plist</code> 的文件，它的描述就是：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="string">@&quot;abc.plist&quot;</span>.docPath;</span><br></pre></td></tr></table></figure><h3 id="路径的拼接"><a href="#路径的拼接" class="headerlink" title="路径的拼接"></a>路径的拼接</h3><p>任何一个字符串都可以使用 <code>.append()</code> 进行拼接。</p><h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><p>保存的方法目前提供有四个：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">BOOL</span>(^)(<span class="type">id</span>))savePlist;</span><br><span class="line">- (<span class="type">BOOL</span>(^)(<span class="built_in">NSObject</span>&lt;<span class="built_in">NSCoding</span>&gt; *))saveArchivedPlist;</span><br><span class="line">- (<span class="type">BOOL</span>(^)(<span class="built_in">NSObject</span>&lt;<span class="built_in">NSCoding</span>&gt; *))saveArchivedObject;</span><br><span class="line">- (<span class="type">BOOL</span>(^)(<span class="type">id</span> &lt;<span class="built_in">NSCoding</span>&gt;))save;</span><br></pre></td></tr></table></figure><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><ol><li>在doc路径下保存一个名为”arr.plist”的文件：</li></ol>  <figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *arr = [<span class="built_in">NSArray</span> array];</span><br><span class="line"><span class="type">BOOL</span> result = <span class="string">@&quot;arr&quot;</span>.docPath.savePlist(arr);</span><br></pre></td></tr></table></figure><ol start="2"><li><p>在cache路径下归档一个名为”myfile.plist”的文件：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">MyProfiles *myfile = [[MyProfiles alloc] init];</span><br><span class="line"><span class="comment">// MyProfiles类需实现NSCoding协议</span></span><br><span class="line"><span class="type">BOOL</span> result = <span class="string">@&quot;myfile&quot;</span>.cachePath.saveArchivedPlist(myfile);</span><br></pre></td></tr></table></figure><p>​</p></li></ol><h2 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h2><p>读取的方法目前提供了七个：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="keyword">nullable</span> __kindof <span class="built_in">NSArray</span> *)readArray;</span><br><span class="line">- (<span class="keyword">nullable</span> __kindof <span class="built_in">NSDictionary</span> *)readDictionary;</span><br><span class="line">- (<span class="keyword">nullable</span> <span class="type">id</span>)readArchivedPlist;</span><br><span class="line">- (<span class="keyword">nullable</span> <span class="type">id</span>)readJson;</span><br><span class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)readTxt;</span><br><span class="line">- (<span class="keyword">nullable</span> <span class="type">id</span>)readArchivedFile;</span><br><span class="line">- (<span class="keyword">nullable</span> <span class="type">id</span>)readArchivedObject;</span><br></pre></td></tr></table></figure><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><ol><li><p>在doc路径下读取一个名为”arr.plist”的文件：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *arr = <span class="string">@&quot;arr&quot;</span>.docPath.readArray;</span><br></pre></td></tr></table></figure></li><li><p>在cache路径下解档一个名为”myfile.plist”的文件：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">MyProfiles *myfile = <span class="string">@&quot;myfile&quot;</span>.cachePath.readArchivedPlist;</span><br></pre></td></tr></table></figure><p>​</p></li></ol><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>遍历路径下所有文件</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取doc/myDir 路径下所有的扩展名为&quot;plist&quot;文件路径</span></span><br><span class="line"><span class="built_in">NSArray</span> *paths = <span class="string">@&quot;myDir&quot;</span>.docPath.subpaths(<span class="string">@&quot;plist&quot;</span>);</span><br><span class="line"><span class="comment">// 如果传入值为空，则不区分扩展名获取所有文件路径</span></span><br><span class="line"><span class="built_in">NSArray</span> *paths2 = <span class="string">@&quot;myDir&quot;</span>.docPath.subpaths(<span class="string">@&quot;&quot;</span>);</span><br><span class="line"><span class="comment">// paths里面装的是doc/myDir路径下的所有文件完整路径</span></span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>结构：【路径+删除】</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">BOOL</span>)removePlist;</span><br><span class="line">- (<span class="type">BOOL</span>)removeJson;</span><br><span class="line">- (<span class="type">BOOL</span>)removeTxt;</span><br><span class="line">- (<span class="type">BOOL</span>)remove;</span><br></pre></td></tr></table></figure><h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><ol><li><p>在doc路径下删除一个名为”arr.plist”的文件：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="type">BOOL</span> result = <span class="string">@&quot;arr.plist&quot;</span>.docPath.remove;</span><br></pre></td></tr></table></figure></li><li><p>在cache路径下删除一个名为”myfile.plist”的文件：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">MyProfiles *myfile = <span class="string">@&quot;myfile.plist&quot;</span>.cachePath.remove;</span><br></pre></td></tr></table></figure></li></ol><h2 id="详细文档"><a href="#详细文档" class="headerlink" title="详细文档"></a>详细文档</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/wiki/axkit/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/wiki/axkit/</span><span class="cap link fs12">https://xaoxuu.com/wiki/axkit/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 设计开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 链式语法 </tag>
            
            <tag> 沙盒 </tag>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十万蝼蚁不如一个巨人</title>
      <link href="/blog/20160522/"/>
      <url>/blog/20160522/</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin poetry"><div class="title">Game&nbsp;of&nbsp;Thrones</div><div class="body"><p>混乱不是深渊。<br>混乱是阶梯。<br>很多人想往上爬 却失败了<br>且永无机会再试。<br>他们坠落而亡。<br>有人本有机会攀爬，<br>但他们拒绝了。<br>他们守着王国不放<br>守着诸神<br>守着爱情<br>尽皆幻想。<br>唯有阶梯是真实存在。<br>攀爬才是生活的全部。</p></div><div class="footer">台词节选</div></div><span id="more"></span><h2 id="物竞天择"><a href="#物竞天择" class="headerlink" title="物竞天择"></a>物竞天择</h2><p>世界是残酷的，强者以弱者为食。</p><h2 id="个体意识"><a href="#个体意识" class="headerlink" title="个体意识"></a>个体意识</h2><p>每个人都是一个独立的个体，群众的力量再强大，他们也不属于你，只是在某些时刻能够帮到你。与其成为一个强大群体中微不足道的一员，不如成为一个强大的个体。</p><h2 id="群体意识"><a href="#群体意识" class="headerlink" title="群体意识"></a>群体意识</h2><p>社会不需要太多巨人，需要团结在一起才能发挥威力的蚂蚁。像牧羊一样，管好头羊，其他都会乖乖跟着头羊，即使有不听话的，也不会威胁到牧羊人。但如果羊羔中有几个或更多比牧羊人掌管的头羊更加强壮的个体，牧羊人就会地位不保。这些羊羔如果足够聪明的话，是不应该过早展露实力的，冲动的结局则是变成一桌美食。</p><h2 id="珍惜当下"><a href="#珍惜当下" class="headerlink" title="珍惜当下"></a>珍惜当下</h2><p>活着本来就是如临深渊，如履薄冰，永远不能保证下一刻不会遭遇意外。每天早上睁开眼能够看到熟悉的世界，能够记得自己走过的人生，都值得庆幸。不做别人的棋子，更不教育自己的后代如何做好这一颗棋子，生活是你自己的。</p><h2 id="时间、效率、实力"><a href="#时间、效率、实力" class="headerlink" title="时间、效率、实力"></a>时间、效率、实力</h2><p>我一直把时间作为衡量价值的标准，因为只有时间是有限的、平等的。效率则是将时间转化成实力的最关键一步，是靠自己的努力获得的，谁也赠予不了，谁也偷不了。实力则是我的人生观中的价值所在，也是唯一的追求。</p><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>你可以选择随遇而安，只需要一双发现美的眼睛和积极乐观的心态。</p><p>也可以攀爬，你会发现到处都是陷阱，一步跌落，就是万丈深渊。哪怕你认为现在的处境已经跌落人生谷底，但是事实是前方依然会有更深的陷阱在等着你。</p>]]></content>
      
      
      <categories>
          
          <category> 胡思乱想 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>我关于未来的智能生活的畅想</title>
      <link href="/blog/20160211/"/>
      <url>/blog/20160211/</url>
      
        <content type="html"><![CDATA[<p>我从小就对「活着」的机械十分着迷，就是我们现在所说的人工智能，当我初次了解到这个概念的时候，<del>就确定了我将奉献一生的事业</del>。</p><p>然而梦想很遥远，遥远到我这辈子无法见证<a href="https://baike.baidu.com/item/%E6%88%91%EF%BC%8C%E6%9C%BA%E5%99%A8%E4%BA%BA/1189079">《I, Robot》</a>那样的时代。</p><span id="more"></span><h2 id="智能家居"><a href="#智能家居" class="headerlink" title="智能家居"></a>智能家居</h2><p>我相信，不久的未来会有越来越多的东西要接入互联网，接入互联网就可以用手机控制。<br>网络就像神经，门窗联了网，门窗就活了，扫把联了网，扫把就活了。等所有的家具家电都联网的时候，就需要一个平台来管理这些智能硬件了。</p><p>所有接入互联网的传感器都成为了这个智能系统的感官，神经将这些信息传递到可以分析、处理数据的终端，经过计算后作出应答，并由这些神经传递指令到相应的智能设备上。</p><p>人与人、人与物之间的联系就更加紧密了，随时的远程互动，远程协助都更加方便了。<br>当然，这中间涉及到的隐私和网络安全问题也十分重要，但问题总要解决，不能因噎废食。</p><p>传统硬件，将一步一步被替换为智能硬件，至少是能用手机 app 控制，用手机 app 来控制，就是一种雏形了。毕竟目前没有足够多的智能硬件，没有到需要开发一个系统的程度。</p><h2 id="平台化"><a href="#平台化" class="headerlink" title="平台化"></a>平台化</h2><p>现在智能硬件也越来越多了，网络也十分发达了，但是它们的「语言」不同，各厂商的产品都用自己的标准，不同厂商之间的硬件是无法协同工作的。它们需要一个协议、或者一个平台，来实现合作。平台，也许就是智能家居时代来临的一个必要条件吧。</p>]]></content>
      
      
      <categories>
          
          <category> 闲聊时间 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何进行有效的团队合作</title>
      <link href="/blog/20130206/"/>
      <url>/blog/20130206/</url>
      
        <content type="html"><![CDATA[<p>本文只是我在大学时期关于小组决策效率与分工方面的思考，可能不适用于其它场景。</p><p>在任何一个团队中，我始终都是先做一个观察者，因为在掌握足够的信息之前，我的看法可能是片面的，由此产生的观点及推论发表出来可能会误导人。</p><span id="more"></span><h2 id="偏执"><a href="#偏执" class="headerlink" title="偏执"></a>偏执</h2><p>我印象非常深刻的一次经历：初二的时候，物理老师提问一个思考问题，我的答案和班上其它同学的都不一样，我有点犹豫了，老师说了一句话：<span class="tag-plugin quot" type="text">有时候，真理往往掌握在少数人手中</span>，而正是那一次的正确的坚持，让我受益匪浅。这件事在我的成长过程中起到了非常重要的作用，所以现在我是一个对认定事情非常偏执的人。</p><p>要相信自己有理有据的判断，在追求真理的路上敢于以一敌众，后来的某些经历也表明，即使所有人都反对你，你也未必要因此放弃，因为真相总有浮出水面的时候。</p><h2 id="交流意见"><a href="#交流意见" class="headerlink" title="交流意见"></a>交流意见</h2><p>然而我却又是一个不爱争论的人，往往我发表完我的意见，也理解了对方的意见之后，就不会再继续谈论了。</p><p>为什么不说服别人呢？我会尝试去说服别人，但是当说服的难度远远大于它所带来的意义的时候，我就放弃了。我没有当过领导者，所以说服别人对我来说也不是个必选项，尤其是考虑到这个过程所花费的时间成本跟成果的价值孰轻孰重，我会越来越谨慎行事。</p><h2 id="独立决策与民主决策"><a href="#独立决策与民主决策" class="headerlink" title="独立决策与民主决策"></a>独立决策与民主决策</h2><p>两者并非不可兼得。为什么要兼得？为了效率。</p><p>我的眼中只有效率，不在乎形式，假如一个问题有两种既定方案，如果三十个人讨论半天各执己见，有些人选择A方案，有些人选择B方案，选择A方案的人试图说服选择B方案的人，选择B方案的人也试图说服选择A方案的人，最终的结果可能是选A也可能是选B，也可能出来一种新的C方案。</p><p><strong>不是所有人都能看见真相</strong>，经过讨论可能会让更多人走向正确的道路，也有可能会让少部分持有最佳方案却意志不够坚定的人被说服放弃，历史上这样的例子并不少见，每时每刻，都有数不清的人会在讨论中与<strong>成为历史</strong>或<strong>被历史遗忘</strong>擦肩而过。</p><p>我们更需要的是：交流意见 –&gt; 独立思考 –&gt; 独立决策。</p><h2 id="合力不等于力量的叠加"><a href="#合力不等于力量的叠加" class="headerlink" title="合力不等于力量的叠加"></a>合力不等于力量的叠加</h2><p>力量都是有方向的，方向相同则相加。很多时候一次糟糕的合作导致若干力量相抵消，最终还不如一个人的效率高，一个聪明的团队应该在力量和方向上都作出最优选择。</p><p>我自认为是一个没有大家所谓的“团队精神”的人，因为我认为即使我们做不到最好，也不要硬撑着搞形式，作出最糟糕的选择，效率才是最终目的。</p>]]></content>
      
      
      <categories>
          
          <category> 胡思乱想 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin about"><a class="nav-back cap" href="/"><svg aria-hidden="true" viewBox="0 0 16 16" fill="currentColor"><path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path></svg></a><div class="about-header"><div class="avatar"><img src="/assets/xaoxuu/logo/xaoxuu.navbar@3x.png" height="32px"/></div></div><div class="about-body fs14"><p><strong>如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。</strong></p><p>本站是 <a href="https://xaoxuu.com/">@xaoxuu</a> 的个人站，博主目前主要从事于 iOS 开发行业，活跃于开源社区，热衷于设计和打磨美妙的东西。代表作有：<a href="/wiki/prohud/">ProHUD</a>、<a href="/wiki/valuex/">ValueX</a>、<a href="/wiki/stellar/">Stellar</a>、<a href="/wiki/heartmate/">心率管家</a> 等，更多的作品可以去 <a href="/wiki/">项目</a> 页查看，希望大家喜欢～</p><div class="tag-plugin navbar"><nav class="cap"><a href="/timeline/">动态</a><a href="/friends/">友链</a><a class="active" href="/about/">关于</a></nav></div></div></div><p>本站使用 Stellar 主题生成，技术架构为 Hexo 静态博客框架，面向所有具有基础 <code>markdown</code> 和 <code>git</code> 技能的有个人站点需求的用户，文档链接如下：</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://xaoxuu.com/wiki/stellar/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div><span class="cap link fs12">https://xaoxuu.com/wiki/stellar/</span></div><div class="bottom"><span class="title">https://xaoxuu.com/wiki/stellar/</span><span class="cap desc fs12"></span></div></a></div><br><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />关于博主</p><div class="tag-plugin tabs" align="center"id="tab_8""><ul class="nav-tabs"><li class="tab active"><a href="#tab_8-1">音乐</a></li><li class="tab"><a href="#tab_8-2">游戏</a></li><li class="tab"><a href="#tab_8-3">话题</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_8-1"><p>非常热爱音乐，喜欢的品类很多，尤 <a href="https://music.163.com/#/artist?id=34517">Hans Zimmer</a> 和 <a href="https://music.163.com/#/artist?id=102714">Two Steps From Hell</a> 的史诗音乐，夜深人静的时候喜欢听 <a href="https://music.163.com/#/artist?id=38127">Ludovico Einaudi</a> 的钢琴曲，能量不足的时候会听一些电音或摇滚来充电，心灰意冷的时候会听一些十年前常听的轻音乐怀旧，那时我还特别喜欢 <a href="https://music.163.com/#/artist?id=88149">班得瑞</a> 的音乐。</p></div><div class="tab-pane" id="tab_8-2"><table><thead><tr><th align="left">游戏</th><th align="left">推荐指数</th><th align="left">游玩时间</th></tr></thead><tbody><tr><td align="left">Red Alert 2</td><td align="left">★★★★</td><td align="left">2005-2012</td></tr><tr><td align="left">World of Warcraft</td><td align="left">★★★★☆</td><td align="left">2006-2020</td></tr><tr><td align="left">Red Alert 3</td><td align="left">★★★★☆</td><td align="left">2013-2021</td></tr><tr><td align="left">Minecraft</td><td align="left">★★★★</td><td align="left">2013-2016</td></tr><tr><td align="left">Bad Piggies</td><td align="left">★★★★★</td><td align="left">2014-2017</td></tr><tr><td align="left">Terraria</td><td align="left">★★★★☆</td><td align="left">2014-2021</td></tr><tr><td align="left">Don‘t Starve</td><td align="left">★★★★☆</td><td align="left">2015-2021</td></tr><tr><td align="left">Ori and the Blind Forest</td><td align="left">★★★★★</td><td align="left">2018-2020</td></tr><tr><td align="left">Human Fall Flat</td><td align="left">★★★★★★</td><td align="left">2018-2021</td></tr></tbody></table></div><div class="tab-pane" id="tab_8-3"><p>此外，也热衷于欣赏和学习这方面的知识：产品设计、摄影、天文。</p></div></div></div><p>本站没有任何推广和打赏链接，如果您觉得哪个作品不错，欢迎去对应的仓库点个赞，或者在对应的文章下面留言互动一下。<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatattentionreverse.png"/></span></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/bookmark/index.html"/>
      <url>/bookmark/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin about"><a class="nav-back cap" href="/"><svg aria-hidden="true" viewBox="0 0 16 16" fill="currentColor"><path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path></svg></a><div class="about-header"><div class="avatar"><img src="/assets/xaoxuu/logo/xaoxuu.navbar@3x.png" height="32px"/></div></div><div class="about-body fs14"><div class="tag-plugin navbar"><nav class="cap"><a href="/notes/">随记</a><a class="active" href="/bookmark/">收藏</a></nav></div></div></div><h2 class="tag-plugin quot" type="icon" id="Mac 应用下载"><a href="#Mac 应用下载" class="headerlink" title="Mac 应用下载"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />Mac 应用下载</h2><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.macbl.com"><img src="/assets/bookmark/mac/macbl-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/mac/macbl-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">MacBL</span><span class="desc">马可菠萝 - 分享你喜欢的MAC应用</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://xclient.info"><img src="/assets/bookmark/mac/xclient-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/mac/xclient-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Xclient</span><span class="desc">精品MAC应用分享</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://appstorrent.ru"><img src="/assets/bookmark/mac/appstorrent-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/mac/appstorrent-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">appstorrent</span><span class="desc">https://appstorrent.ru</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://macapp.org.cn/app/"><img src="/assets/bookmark/mac/macapp.org-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">MacApp分享频道</span><span class="desc">https://macapp.org.cn/app/</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.macyy.cn/resources"><img src="/assets/bookmark/mac/macyy-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">MACYY</span><span class="desc">https://www.macyy.cn/resources</span></div></a></div></div></div><h2 class="tag-plugin quot" type="icon" id="设计灵感和素材"><a href="#设计灵感和素材" class="headerlink" title="设计灵感和素材"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />设计灵感和素材</h2><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://unsplash.com"><img src="/assets/bookmark/design/unsplash-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/design/unsplash-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Unsplash</span><span class="desc">Photos for everyone.</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://dribbble.com"><img src="/assets/bookmark/design/dribbble-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/design/dribbble-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Dribbble</span><span class="desc">Discover the world’s top designers & creatives.</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.flaticon.com"><img src="/assets/bookmark/design/flaticon-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/design/flaticon-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Flaticon</span><span class="desc">Access 3,260,000 vector icons.</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://heroicons.dev/"><img src="https://heroicons.dev/static/social.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://heroicons.dev/static/favicon.ico" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Heroicons</span><span class="desc">Free Open Source SVG Icon Library</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.uplabs.com/"><img src="/assets/bookmark/design/uplabs-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/design/uplabs-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">uplabs</span><span class="desc">Unlimited Android Templates Ready for Commercial Use - UpLabs</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://codyhouse.co"><img src="https://bu.dusays.com/2021/04/02/c846e169a995d.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://img.vim-cn.com/0c/8bcb03d3013c1edb6afab94964526aed35a1e7.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">CodyHouse</span><span class="desc">Web Design Made Easier</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://chuangzaoshi.com"><img src="/assets/bookmark/design/chuangzaoshi-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/design/chuangzaoshi-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">创造狮导航</span><span class="desc">Discover the world’s top designers & creatives.</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.pinterest.com"><img src="/assets/bookmark/design/pinterest-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/design/pinterest-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Pinterest</span><span class="desc">寻找值得尝试的新点子</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.iconfont.cn"><img src="/assets/bookmark/design/iconfont-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Iconfont</span><span class="desc">阿里巴巴矢量图标库</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.easyicon.net/"><img src="/assets/bookmark/design/easyicon-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">easyicon</span><span class="desc">多彩图标</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://html5up.net/"><img src="/assets/bookmark/design/html5up-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">HTML5 UP</span><span class="desc">HTML5 网站模板</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://wallpaperaccess.com"><img src="/assets/bookmark/design/wallpaperaccess-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">WallpaperAccess</span><span class="desc">高质量壁纸</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.pixel4k.com/"><img src="/assets/bookmark/design/pixel4k-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">pixel4k</span><span class="desc">高清壁纸</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.materialpalette.com"><img src="/assets/bookmark/design/materialpalette-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Material Palette</span><span class="desc">Material Design Color Palette Generator.</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://hao.uisdc.com"><img src="/assets/bookmark/design/uisdc-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">设计师网址导航</span><span class="desc">优设导航 - 学设计从这里开始！</span></div></a></div></div></div><h2 class="tag-plugin quot" type="icon" id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />开发工具</h2><div class="tag-plugin tabs"id="tab_9""><ul class="nav-tabs"><li class="tab active"><a href="#tab_9-1">在线工具</a></li><li class="tab"><a href="#tab_9-2">国内镜像站</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_9-1"><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://screenshot-api.xaoxuu.com"><img src="https://bu.dusays.com/2022/10/24/6356184f8472c.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">screenshot</span><span class="desc">快速生成网站截图</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://image.thum.io"><img src="https://bu.dusays.com/2021/03/05/01ba3fde0e3d1.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://bu.dusays.com/2021/03/05/e2eeddd5e537f.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">thum.io</span><span class="desc">快速生成网站截图</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://neumorphism.io/#e0e0e0"><img src="https://bu.dusays.com/2021/03/05/31111c56bdf50.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Neumorphism.io</span><span class="desc">Generate Soft-UI CSS code</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://shields.io"><img src="https://bu.dusays.com/2021/03/03/81b7072581f29.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Shields IO</span><span class="desc">https://shields.io</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.json.cn"><img src="https://bu.dusays.com/2021/03/03/70f3b6e3d55b1.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">json.cn</span><span class="desc">https://www.json.cn</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://realfavicongenerator.net"><img src="https://bu.dusays.com/2021/03/03/d560caf42c66b.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Favicon Generator</span><span class="desc">https://realfavicongenerator.net</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://7bu.top/"><img src="https://bu.dusays.com/2021/03/03/b4c71570c4b04.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">去不图床</span><span class="desc">免费图床</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://img.vim-cn.com"><img src="https://bu.dusays.com/2021/03/03/a2b15981b5a14.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">vim-cn.com</span><span class="desc">免费图床</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://david-smith.org/iosversionstats/"><img src="https://bu.dusays.com/2021/03/03/28b33280e4dc5.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">david-smith.org</span><span class="desc">查询iOS各个版本用户量</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://kylebing.cn/tools/iphone/"><img src="https://bu.dusays.com/2021/03/11/52a60f363f422.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">iPhone 参数大全</span><span class="desc">https://kylebing.cn/tools/iphone/</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.latexlive.com/"><img src="https://bu.dusays.com/2021/03/03/e4df394a287a6.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">LaTeX公式编辑器</span><span class="desc">https://www.latexlive.com/</span></div></a></div></div></div></div><div class="tab-pane" id="tab_9-2"><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://mirrors.tuna.tsinghua.edu.cn"><img src="https://bu.dusays.com/2021/07/04/6f214fd127e65.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://bu.dusays.com/2021/07/04/0e5faae4d59b0.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">清华大学开源软件镜像站</span><span class="desc">https://mirrors.tuna.tsinghua.edu.cn</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://developer.aliyun.com/mirror/"><img src="https://bu.dusays.com/2021/07/04/3e669b4780254.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://bu.dusays.com/2021/07/04/53979dab9a153.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">阿里云官方镜像站</span><span class="desc">https://developer.aliyun.com/mirror/</span></div></a></div></div></div></div></div></div><h2 class="tag-plugin quot" type="icon" id="技术加油站"><a href="#技术加油站" class="headerlink" title="技术加油站"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />技术加油站</h2><div class="tag-plugin tabs"id="tab_10""><ul class="nav-tabs"><li class="tab active"><a href="#tab_10-1">行业大佬</a></li><li class="tab"><a href="#tab_10-2">技术社区</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_10-1"><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://onevcat.com/#blog"><img src="/assets/bookmark/developer/onevcat-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/developer/onevcat-icon.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">OneV's Den</span><span class="desc">上善若水，人淡如菊</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://blog.devzeng.com/#blog"><img src="/assets/bookmark/developer/devzeng-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/developer/devzeng-icon.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">曾静的博客</span><span class="desc">但行好事，莫问前程</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://blog.devtang.com"><img src="/assets/bookmark/developer/devtang-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/developer/devtang-icon.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">唐巧的博客</span><span class="desc">记录下自己学习的点滴</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://bubuzou.com"><img src="https://bu.dusays.com/2021/05/01/dee325e2853d3.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">步步走</span><span class="desc">前端大佬</span></div></a></div></div></div></div><div class="tab-pane" id="tab_10-2"><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://stackoverflow.com"><img src="https://bu.dusays.com/2021/03/03/d28d9e2f31f9a.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Stack Overflow</span><span class="desc">https://stackoverflow.com</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://www.cocoachina.com"><img src="https://bu.dusays.com/2021/03/03/b44f3d0731007.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">CocoaChina</span><span class="desc">http://www.cocoachina.com</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://www.runoob.com"><img src="https://bu.dusays.com/2021/03/03/7758e79c04623.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">RUNOOB</span><span class="desc">http://www.runoob.com</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://www.w3school.com.cn"><img src="https://bu.dusays.com/2021/03/03/2b6e242373dfb.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">W3school</span><span class="desc">http://www.w3school.com.cn</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="http://www.tensorfly.cn"><img src="https://bu.dusays.com/2021/03/03/773d6e9ab1ccf.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">TensorFlow中文社区</span><span class="desc">http://www.tensorfly.cn</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.liaoxuefeng.com"><img src="https://bu.dusays.com/2021/03/03/d67326f092780.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">廖雪峰的官方网站</span><span class="desc">https://www.liaoxuefeng.com</span></div></a></div></div></div></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin about"><a class="nav-back cap" href="/"><svg aria-hidden="true" viewBox="0 0 16 16" fill="currentColor"><path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path></svg></a><div class="about-header"><div class="avatar"><img src="/assets/xaoxuu/logo/xaoxuu.navbar@3x.png" height="32px"/></div></div><div class="about-body fs14"><p><strong>如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。</strong></p><p>本站是 <a href="https://xaoxuu.com/">@xaoxuu</a> 的个人站，博主目前主要从事于 iOS 开发行业，活跃于开源社区，热衷于设计和打磨美妙的东西。代表作有：<a href="/wiki/prohud/">ProHUD</a>、<a href="/wiki/valuex/">ValueX</a>、<a href="/wiki/stellar/">Stellar</a>、<a href="/wiki/heartmate/">心率管家</a> 等，更多的作品可以去 <a href="/wiki/">项目</a> 页查看，希望大家喜欢～</p><div class="tag-plugin navbar"><nav class="cap"><a href="/timeline/">动态</a><a class="active" href="/friends/">友链</a><a href="/about/">关于</a></nav></div></div></div><div class="tag-plugin users-wrap"><div class="stellar-friends-api" api="https://api.vlts.cc/output_data/v2/xaoxuu/friends"><div class="group-body"></div></div></div><div class="tag-plugin tabs"id="tab_11""><ul class="nav-tabs"><li class="tab active"><a href="#tab_11-1">朋友的动态</a></li><li class="tab"><a href="#tab_11-2">朋友的文章</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_11-1"><div class="tag-plugin folders" ><details class="folder" index="0"><summary><span>weekdaycare</span></summary><div class="body"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/weekdaycare/weekdaycare.github.io/issues?per_page=3" hide="footer"></div></div></details><details class="folder" index="1"><summary><span>seeseeme</span></summary><div class="body"><div class="tag-plugin timeline stellar-timeline-api" api="https://fastly.seeseeme.eu.org/ghapi/i-abc/blog-timeline/issues?per_page=3" hide="title,footer"></div></div></details><details class="folder" index="2"><summary><span>skyreeves</span></summary><div class="body"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/skyreeves/blog-timeline-svsvnm/issues?per_page=3" hide="footer"></div></div></details></div></div><div class="tab-pane" id="tab_11-2"><div class="tag-plugin timeline stellar-fcircle-api" api="https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator" limit="10"></div></div></div></div><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />如何交换友链？</p><p>先友后链，在我们有一定了解了之后才可以交换友链，除此之外，您的网站还应满足以下全部条件：</p><ol><li>合法的、非营利性、无商业广告、无木马植入。</li><li>有实质性原创内容的 <code>HTTPS</code> 站点，发布过至少 <code>5</code> 篇原创文章，内容题材不限。</li><li>有独立域名，非免费域名。</li><li>博客已运行至少半年，非刚搭建好。</li><li>与 <code>xaoxuu</code> 有至少 <code>5</code> 次有效互动（有内容的留言或者 <code>issue</code> 等）。</li></ol><details class="tag-plugin folding" ><summary><span>我已满足全部条件，快告诉我如何交换友链！<img no-lazy style=display:inline;height:1em src=https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatattentionreverse.png></span></summary><div class="body"><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>第一步：新建 Issue</p></div><div class="body fs14"><p>新建 <a href="https://github.com/xaoxuu/friends/issues/">GitHub Issue</a> 按照模板格式填写并提交。</p><p>为了提高图片加载速度，建议优化头像：</p><ol><li>打开 <a href="https://www.yasuotu.com/">压缩图</a> 上传自己的头像，将图片尺寸调整到 <code>144px</code> 后下载。</li><li>将压缩后的图片上传到 <a href="https://7bu.top/">去不图床</a> 或者其它稳定的图床并使用此图片链接作为头像。</li></ol></div></div><div class="timenode" index="1"><div class="header"><p>第二步：添加友链并等待管理员审核</p></div><div class="body fs14"><p>请添加本站到您的友链中：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">xaoxuu</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://xaoxuu.com</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">https://bu.dusays.com/2021/09/24/2f74810ceb3d3.png</span></span><br><span class="line"><span class="attr">screenshot:</span> <span class="string">https://bu.dusays.com/2022/10/23/63542895cfd29.png</span></span><br></pre></td></tr></table></figure><p>待管理员审核通过，添加了 <code>active</code> 标签后，回来刷新即可生效。</p><p>如果您需要更新自己的友链，请直接修改 issue 内容，大约 3 分钟内生效，无需等待博客更新。</p></div></div></div></div></details>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/notes/index.html"/>
      <url>/notes/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin about"><a class="nav-back cap" href="/"><svg aria-hidden="true" viewBox="0 0 16 16" fill="currentColor"><path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path></svg></a><div class="about-header"><div class="avatar"><img src="/assets/xaoxuu/logo/xaoxuu.navbar@3x.png" height="32px"/></div></div><div class="about-body fs14"><div class="tag-plugin navbar"><nav class="cap"><a class="active" href="/notes/">随记</a><a href="/bookmark/">收藏</a></nav></div></div></div><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.xaox.cc/repos/xaoxuu/blog-timeline-notes/issues" user="xaoxuu"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/privacy/index.html"/>
      <url>/privacy/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin about"><a class="nav-back cap" href="/"><svg aria-hidden="true" viewBox="0 0 16 16" fill="currentColor"><path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path></svg></a><div class="about-body fs14"><h1 id="隐私政策"><a href="#隐私政策" class="headerlink" title="隐私政策"></a><center>隐私政策</center></h1><p><strong><center><u>本站不收集和存储您的任何数据</u></center></strong></p><br><p>本站非常重视所有访客的隐私和个人信息保护，未使用任何访客统计和分析工具，未追踪您的 IP 地址、运营商信息，不会请求获取定位信息，不获取访问设备和浏览器信息，仅在您使用评论时，会要求登录 GitHub 账号进行授权，相关隐私政策见 <a href="https://docs.github.com/cn/site-policy/privacy-policies/github-privacy-statement">GitHub 隐私声明</a>，此第三方服务与本站无关，本站不存储任何数据。</p><br></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin about"><a class="nav-back cap" href="/"><svg aria-hidden="true" viewBox="0 0 16 16" fill="currentColor"><path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path></svg></a><div class="about-header"><div class="avatar"><img src="/assets/xaoxuu/logo/xaoxuu.navbar@3x.png" height="32px"/></div></div><div class="about-body fs14"><p><strong>如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。</strong></p><p>本站是 <a href="https://xaoxuu.com/">@xaoxuu</a> 的个人站，博主目前主要从事于 iOS 开发行业，活跃于开源社区，热衷于设计和打磨美妙的东西。代表作有：<a href="/wiki/prohud/">ProHUD</a>、<a href="/wiki/valuex/">ValueX</a>、<a href="/wiki/stellar/">Stellar</a>、<a href="/wiki/heartmate/">心率管家</a> 等，更多的作品可以去 <a href="/wiki/">项目</a> 页查看，希望大家喜欢～</p><div class="tag-plugin navbar"><nav class="cap"><a class="active" href="/timeline/">动态</a><a href="/friends/">友链</a><a href="/about/">关于</a></nav></div></div></div><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.xaox.cc/repos/xaoxuu/blog-timeline/issues" user="xaoxuu"></div><p>开源项目无任何盈利目的，只在工作闲暇时间进行维护，有相关需求请前往对应项目提 Issue 进行反馈，通过私人邮件询问开源项目问题可能得不到答复。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/blog/hot/index.html"/>
      <url>/blog/hot/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.xaox.cc/repos/xaoxuu/blog-comments/issues?sort=comments" user="utterances-bot,beaudar-bot" hide="title,user"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/friends/rss/index.html"/>
      <url>/friends/rss/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin timeline stellar-fcircle-api" api="https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter 相关问题</title>
      <link href="/notes/flutter/index.html"/>
      <url>/notes/flutter/index.html</url>
      
        <content type="html"><![CDATA[<p>运行时弹出「无法打开“iproxy”，因为无法验证开发者。」弹窗，手动添加信任：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine futter的SDK目录/bin/cache/artifacts/usbmuxd/iproxy</span><br></pre></td></tr></table></figure><p>清除缓存，重新 build：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf build</span><br><span class="line">flutter clean</span><br><span class="line">flutter build ios --debug</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 相关问题</title>
      <link href="/notes/ios/index.html"/>
      <url>/notes/ios/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="最新版-CocoaPods-的安装流程"><a href="#最新版-CocoaPods-的安装流程" class="headerlink" title="最新版 CocoaPods 的安装流程"></a>最新版 CocoaPods 的安装流程</h2><ol><li><p>（首次安装）移除现有Ruby默认源</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_5" value="gem sources --remove https://rubygems.org/"><button class="copy-btn" onclick="util.copy(&quot;copy_5&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>（首次安装）使用新的源</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_6" value="gem sources -a https://gems.ruby-china.com"><button class="copy-btn" onclick="util.copy(&quot;copy_6&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>（首次安装）验证新源是否替换成功</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_7" value="gem sources -l"><button class="copy-btn" onclick="util.copy(&quot;copy_7&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>（可选）更新 gem</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_8" value="sudo gem update --system"><button class="copy-btn" onclick="util.copy(&quot;copy_8&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>安装 CocoaPods</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_9" value="sudo gem install -n /usr/local/bin cocoapods && pod setup"><button class="copy-btn" onclick="util.copy(&quot;copy_9&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ol><h2 id="Podfile-文件中的一些写法"><a href="#Podfile-文件中的一些写法" class="headerlink" title="Podfile 文件中的一些写法"></a>Podfile 文件中的一些写法</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://guides.cocoapods.org/using/the-podfile.html" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://guides.cocoapods.org/using/the-podfile.html</span><span class="cap link fs12">https://guides.cocoapods.org/using/the-podfile.html</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置镜像源</span></span><br><span class="line">source <span class="string">&#x27;https://cdn.cocoapods.org/&#x27;</span></span><br><span class="line"><span class="comment"># 忽略警告</span></span><br><span class="line">inhibit_all_warnings!</span><br></pre></td></tr></table></figure><h2 id="如何发布开源库到-CocoaPods"><a href="#如何发布开源库到-CocoaPods" class="headerlink" title="如何发布开源库到 CocoaPods"></a>如何发布开源库到 CocoaPods</h2><p>说实在话，类似的教程网上很多，基本可以满足大多数人零基础发布 CocoaPods，但是其中可能会遇到一些问题，只有亲自尝试过才知道。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="1-clone-远程仓库到本地"><a href="#1-clone-远程仓库到本地" class="headerlink" title="1. clone 远程仓库到本地"></a>1. clone 远程仓库到本地</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 你的仓库链接</span><br></pre></td></tr></table></figure><h4 id="2-注册-trunk"><a href="#2-注册-trunk" class="headerlink" title="2. 注册 trunk"></a>2. 注册 trunk</h4><p>注册的命令</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pod trunk register 你的邮箱 你的用户名</span><br></pre></td></tr></table></figure><p>记得去邮箱里验证，然后可以输入以下命令查看个人信息</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pod trunk me</span><br></pre></td></tr></table></figure><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1-创建-podspec"><a href="#1-创建-podspec" class="headerlink" title="1. 创建 .podspec"></a>1. 创建 <code>.podspec</code></h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pod spec create AXKit</span><br></pre></td></tr></table></figure><h4 id="2-修改-podspec-并验证"><a href="#2-修改-podspec-并验证" class="headerlink" title="2. 修改 .podspec 并验证"></a>2. 修改 <code>.podspec</code> 并验证</h4><p>有很多类似的教程，可以参考。</p><blockquote><p>一个小技巧：你可以去GItHub搜索一些热门的第三方库，然后点击查看这些大牛的 <code>.podspec</code> 是怎么写的。<br>传送门：<a href="https://github.com/ibireme/YYKit/blob/master/YYKit.podspec">YYKit的podspec</a>、<a href="https://github.com/ReactiveCocoa/ReactiveObjC/blob/master/ReactiveObjC.podspec">ReactiveObjC的podspec</a>、<a href="https://github.com/BlocksKit/BlocksKit/blob/master/BlocksKit.podspec">BlocksKit的podspec</a></p></blockquote><p>最容易出错的地方就是资源路径</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">s.source_files = <span class="string">&quot;AXKit/**/*.&#123;h,m&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>常见写法</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Directory1/*&quot;</span>  表示匹配所有文件</span><br><span class="line"><span class="string">&quot;Directory1/Directory2/*.&#123;h,m&#125;&quot;</span>  表示匹配所有以.h和.m结尾的文件</span><br><span class="line"><span class="string">&quot;Directory1/**/*.h&quot;</span>  表示匹配所有子目录</span><br></pre></td></tr></table></figure><p>s.source 常见写法</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 推荐写法：与版本号绑定</span></span><br><span class="line">s.source = &#123; <span class="symbol">:git</span> =&gt; <span class="string">&quot;https://github.com/TeaseTian/HTQRCode.git&quot;</span>, <span class="symbol">:tag</span> =&gt; <span class="string">&quot;<span class="subst">#&#123;s.version&#125;</span>&quot;</span> &#125;</span><br><span class="line"><span class="comment"># 与commit id 绑定</span></span><br><span class="line">s.source = &#123; <span class="symbol">:git</span> =&gt; <span class="string">&quot;https://github.com/TeaseTian/HTQRCode.git&quot;</span>, <span class="symbol">:commit</span> =&gt; <span class="string">&quot;68defea&quot;</span> &#125;</span><br></pre></td></tr></table></figure><p>tag &#x3D;&gt; s.version 表示将这个 Pod 版本与 Git 仓库中相同版本的 comit 绑定</p><div class="tag-plugin note" ><div class="body"><p><strong>注意</strong></p><p>如果仓库中对应的tag是 <code>“v1.0.0”</code> 这样以字母开头的，可以在 <code>#{s.version}</code> 前面加上对应的字母。commit &#x3D;&gt; “68defea” 表示将这个 Pod 版本与 Git 仓库中某个 commit 绑定</p></div></div><p><strong>验证</strong></p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pod spec lint AXKit.podspec</span><br></pre></td></tr></table></figure><h4 id="3-上传到远程仓库"><a href="#3-上传到远程仓库" class="headerlink" title="3. 上传到远程仓库"></a>3. 上传到远程仓库</h4><p>修改 <code>.podspec</code> 时指定的版本号，如 <code>0.0.1</code>。那么远程仓库中必须始终存在这个版本的 <code>branch</code> 或 <code>tag</code> 才能够下载。建议使用 tag。<code>s.source</code> 中的 tag 需要与远程仓库中的 tag 对应起来。</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">s.version = <span class="string">&quot;0.0.1&quot;</span></span><br><span class="line">s.source  = &#123; <span class="symbol">:git</span> =&gt; <span class="string">&quot;https://github.com/xaoxuu/AXKit.git&quot;</span>, <span class="symbol">:tag</span> =&gt; <span class="string">&quot;v<span class="subst">#&#123;s.version&#125;</span>&quot;</span> &#125;</span><br></pre></td></tr></table></figure><p>这里指向的是 <code>&quot;v0.0.1&quot;</code> 这个分支，因为分支我们用完之后习惯把它删掉，所以这里也可以指向 tag，也就是说打一个 <code>&quot;v0.0.1&quot;</code> 的 tag 并推送到远程就可以了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag v0.0.1</span><br><span class="line">git push --tags</span><br></pre></td></tr></table></figure><p>这样做的好处就是删掉当前分支不影响 CocoaPods 中指向的仓库源码。</p><h4 id="4-发布到-CocoaPods"><a href="#4-发布到-CocoaPods" class="headerlink" title="4. 发布到 CocoaPods"></a>4. 发布到 CocoaPods</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pod trunk push AXKit.podspec</span><br></pre></td></tr></table></figure><h4 id="n-删除一个-podspec-版本"><a href="#n-删除一个-podspec-版本" class="headerlink" title="n. 删除一个 podspec 版本"></a>n. 删除一个 podspec 版本</h4><p>删除的命令是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pod trunk delete 项目名 版本号</span><br></pre></td></tr></table></figure><p>官方建议使用 <code>deprecate</code> 来弃用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pod trunk deprecate 项目名</span><br></pre></td></tr></table></figure><p>这两种方法执行完有很大几率会出现一串很长很长的错误，不要着急，这实际上这是一个 html。把它保存到一个 html 文件中，打开，是个404错误页，原因众所周知。</p><blockquote><p>删除之后立即搜索还是能搜到的，因为有一定的延迟，可能要半个小时才能更新。</p></blockquote><h4 id="pod-trunk-命令"><a href="#pod-trunk-命令" class="headerlink" title="pod trunk 命令"></a>pod trunk 命令</h4><p>在终端输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pod trunk --help</span><br></pre></td></tr></table></figure><p>可以查看帮助</p><h3 id="使用脚本"><a href="#使用脚本" class="headerlink" title="使用脚本"></a>使用脚本</h3><p>没必要每次都重复每个步骤，如果你已经发布过一个，可以省去注册的步骤，直接把已经发不过的 podspec 复制一份，改一下仓库模块名，验证通过就可以发布了。</p><p>我写了一个便于发布更新的脚本，把脚本放在与 podspec 同级目录下，当你更新了项目之后，如果需要更新到 cocoapods，可以执行此脚本。流程是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入版本号 -&gt; commit、push tag -&gt; pod spec lint -&gt; 询问是否发布(y/n) -&gt; 发布(y)</span><br></pre></td></tr></table></figure><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/xaoxuu/podspec.sh" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/xaoxuu/podspec.sh</span><span class="cap link fs12">https://github.com/xaoxuu/podspec.sh</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="应用上传失败"><a href="#应用上传失败" class="headerlink" title="应用上传失败"></a>应用上传失败</h2><p>原因可能有很多，有关于 Transporter 的问题可以尝试删除缓存：</p><h3 id="删除缓存"><a href="#删除缓存" class="headerlink" title="删除缓存"></a>删除缓存</h3><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_10" value="open ~/Library/Caches/com.apple.amp.itmstransporter/"><button class="copy-btn" onclick="util.copy(&quot;copy_10&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="重新下载缓存"><a href="#重新下载缓存" class="headerlink" title="重新下载缓存"></a>重新下载缓存</h3><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_11" value="/Applications/Xcode.app/Contents/SharedFrameworks/ContentDeliveryServices.framework/itms/bin/iTMSTransporter"><button class="copy-btn" onclick="util.copy(&quot;copy_11&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><blockquote><p>这个缓存有 60MB （2020年7月份下载实测）</p></blockquote><h2 id="素材规格"><a href="#素材规格" class="headerlink" title="素材规格"></a>素材规格</h2><h3 id="iPhone-各代屏幕尺寸与分辨率"><a href="#iPhone-各代屏幕尺寸与分辨率" class="headerlink" title="iPhone 各代屏幕尺寸与分辨率"></a>iPhone 各代屏幕尺寸与分辨率</h3><h4 id="经典屏幕iPhone"><a href="#经典屏幕iPhone" class="headerlink" title="经典屏幕iPhone"></a>经典屏幕iPhone</h4><table><thead><tr><th align="left">iPhone</th><th align="left">对角线</th><th align="left">缩放</th><th align="left">逻辑分辨率</th><th align="left">物理分辨率</th><th align="left">ppi</th></tr></thead><tbody><tr><td align="left">1、3G、3GS</td><td align="left">3.5</td><td align="left">@1x</td><td align="left">320x480</td><td align="left">320x480</td><td align="left">163</td></tr><tr><td align="left">4、4s</td><td align="left">3.5</td><td align="left">@2x</td><td align="left">320x480</td><td align="left">640x960</td><td align="left">326</td></tr><tr><td align="left">5、5s、SE</td><td align="left">4</td><td align="left">@2x</td><td align="left">320x568</td><td align="left">640x1136</td><td align="left">326</td></tr><tr><td align="left">6、6s、7、8、SE2、SE3</td><td align="left">4.7</td><td align="left">@2x</td><td align="left">375x667</td><td align="left">750x1334</td><td align="left">326</td></tr><tr><td align="left">6 Plus、6s Plus、7 Plus、8 Plus</td><td align="left">5.5</td><td align="left">@3x</td><td align="left">414x736</td><td align="left">1242x2208</td><td align="left">401</td></tr></tbody></table><h4 id="全面屏iPhone"><a href="#全面屏iPhone" class="headerlink" title="全面屏iPhone"></a>全面屏iPhone</h4><table><thead><tr><th align="left">iPhone</th><th align="left">对角线</th><th align="left">缩放</th><th align="left">逻辑分辨率</th><th align="left">物理分辨率</th><th align="left">ppi</th></tr></thead><tbody><tr><td align="left">X、XS、11 Pro</td><td align="left">5.8</td><td align="left">@3x</td><td align="left">375x812</td><td align="left">1125x2436</td><td align="left">458</td></tr><tr><td align="left">XR、11</td><td align="left">6.1</td><td align="left">@2x</td><td align="left">414x896</td><td align="left">828x1792</td><td align="left">326</td></tr><tr><td align="left">XS Max、11 Pro Max</td><td align="left">6.5</td><td align="left">@3x</td><td align="left">414x896</td><td align="left">1242x2688</td><td align="left">458</td></tr><tr><td align="left">12 mini、13 mini</td><td align="left">5.4</td><td align="left">@3x</td><td align="left">375x812</td><td align="left">1080x2340</td><td align="left">476</td></tr><tr><td align="left">12、12 Pro、13、13 Pro、14</td><td align="left">6.1</td><td align="left">@3x</td><td align="left">390x844</td><td align="left">1170x2532</td><td align="left">460</td></tr><tr><td align="left">12 Pro Max、13 Pro Max、14 Plus</td><td align="left">6.7</td><td align="left">@3x</td><td align="left">428x926</td><td align="left">1284x2778</td><td align="left">458</td></tr><tr><td align="left">14 Pro</td><td align="left">6.1</td><td align="left">@3x</td><td align="left">393x852</td><td align="left">1179x2556</td><td align="left">460</td></tr><tr><td align="left">14 Pro Max</td><td align="left">6.7</td><td align="left">@3x</td><td align="left">430x932</td><td align="left">1290x2796</td><td align="left">460</td></tr></tbody></table><h3 id="iPad-各代屏幕尺寸与分辨率"><a href="#iPad-各代屏幕尺寸与分辨率" class="headerlink" title="iPad 各代屏幕尺寸与分辨率"></a>iPad 各代屏幕尺寸与分辨率</h3><h4 id="经典屏幕iPad"><a href="#经典屏幕iPad" class="headerlink" title="经典屏幕iPad"></a>经典屏幕iPad</h4><table><thead><tr><th align="left">iPad</th><th align="left">对角线</th><th align="left">缩放</th><th align="left">逻辑分辨率</th><th align="left">物理分辨率</th><th align="left">ppi</th></tr></thead><tbody><tr><td align="left">1、2</td><td align="left">9.7</td><td align="left">@1x</td><td align="left">768x1024</td><td align="left">768x1024</td><td align="left">132</td></tr><tr><td align="left">mini 1</td><td align="left">7.9</td><td align="left">@1x</td><td align="left">768x1024</td><td align="left">768x1024</td><td align="left">163</td></tr><tr><td align="left">mini 2&#x2F;3&#x2F;4</td><td align="left">7.9</td><td align="left">@2x</td><td align="left">768x1024</td><td align="left">1536x2048</td><td align="left">326</td></tr><tr><td align="left">Air 1&#x2F;2</td><td align="left">9.7</td><td align="left">@2x</td><td align="left">768x1024</td><td align="left">1536x2048</td><td align="left">264</td></tr><tr><td align="left">Pro (9.7)</td><td align="left">9.7</td><td align="left">@2x</td><td align="left">768x1024</td><td align="left">1536x2048</td><td align="left">264</td></tr><tr><td align="left">iPad (10.2)</td><td align="left">10.2</td><td align="left">@2x</td><td align="left">810x1080</td><td align="left">1620x2160</td><td align="left">264</td></tr><tr><td align="left">Pro (10.5)</td><td align="left">10.5</td><td align="left">@2x</td><td align="left">834x1112</td><td align="left">1668x2224</td><td align="left">264</td></tr></tbody></table><h4 id="全面屏iPad"><a href="#全面屏iPad" class="headerlink" title="全面屏iPad"></a>全面屏iPad</h4><table><thead><tr><th align="left">iPad</th><th align="left">对角线</th><th align="left">缩放</th><th align="left">逻辑分辨率</th><th align="left">物理分辨率</th><th align="left">ppi</th></tr></thead><tbody><tr><td align="left">mini 6</td><td align="left">7.9</td><td align="left">@2x</td><td align="left">744x1133</td><td align="left">1488x2266</td><td align="left">326</td></tr><tr><td align="left">Air 5</td><td align="left">10.9</td><td align="left">@2x</td><td align="left">820x1180</td><td align="left">1640x2360</td><td align="left">264</td></tr><tr><td align="left">Pro (11’ 2018)</td><td align="left">11</td><td align="left">@2x</td><td align="left">834x1194</td><td align="left">1668x2388</td><td align="left">264</td></tr><tr><td align="left">Pro (12.9’ 2018)</td><td align="left">11</td><td align="left">@2x</td><td align="left">1024x1366</td><td align="left">2048x2732</td><td align="left">264</td></tr></tbody></table><div class="tag-plugin link dis-select"><a class="link-card plain" title="官方设计素材下载" href="https://developer.apple.com/design/resources/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">官方设计素材下载</span><span class="cap link fs12">https://developer.apple.com/design/resources/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="Logo-amp-启动图"><a href="#Logo-amp-启动图" class="headerlink" title="Logo &amp; 启动图"></a>Logo &amp; 启动图</h3><p>UI 只需要提供一张 <code>1024*1024</code> 尺寸的图即可，开发使用 <a href="https://img.vim-cn.com/24/a42106ba9e592869dc2293da2c04b11bf7657d.zip">IconKit</a> 工具可以直接生成开发需要的各种尺寸的图片及其 json 配置文件，直接拖进 Xcode 工程中就可以使用了。使用传统方式不同尺寸一张一张的切图不仅浪费 UI 的时间，开发也需要一张图一张图往对应位置拖，双方都很麻烦。</p><p>如果使用 LaunchImage 方式，需要切各个尺寸的图片，参考 <a href="#iPhone-%E5%90%84%E4%BB%A3%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8%E4%B8%8E%E5%88%86%E8%BE%A8%E7%8E%87">iPhone 各代屏幕尺寸与分辨率</a> 表，如果需要兼容 iPhone 4、4s 机型，则需要提供一共7种尺寸的图片，如果最低兼容 iPhone5 的话，就只需要提供6种尺寸的图片。</p><blockquote><p>注意：iOS 并不需要 <code>1920*1080</code> 这种尺寸的图片。</p></blockquote><h3 id="icon-素材"><a href="#icon-素材" class="headerlink" title="icon 素材"></a>icon 素材</h3><p>iOS 端的切图需要同时提供 @2x 和 @3x 两种尺寸的图片，例如某个名为 “imagename” 的图片需要提供两个文件分别命名为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">imagename@2x.png</span><br><span class="line">imagename@3x.png</span><br></pre></td></tr></table></figure><p>素材名（imagename）命名可以根据公司或团队规范而异，但是两种尺寸的文件的素材名部分要保持一致，唯一的不同就是 <code>@2x</code> 和 <code>@3x</code>。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Json在线解析工具</title>
      <link href="/notes/json/index.html"/>
      <url>/notes/json/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin note" child="iframe"><div class="body"><iframe width="100%" id="json-format" height="600px" frameborder="0" src="https://json.xaoxuu.com"></iframe></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 相关问题</title>
      <link href="/notes/mac/index.html"/>
      <url>/notes/mac/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin folders" ><details class="folder" index="0"><summary><span>提示 “安装包已损坏” 怎么办？</span></summary><div class="body"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_12" value="sudo spctl --master-disable"><button class="copy-btn" onclick="util.copy(&quot;copy_12&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div></details><details class="folder" index="1"><summary><span>如何清理 Mac 的 DNS 缓存</span></summary><div class="body"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo killall -HUP mDNSResponder</span><br><span class="line">sudo killall mDNSResponderHelper</span><br><span class="line">sudo dscacheutil -flushcache</span><br></pre></td></tr></table></figure></div></details><details class="folder" index="2"><summary><span>TNT 团队的应用无法使用怎么办？</span></summary><div class="body"><p>TNT 的证书签署的软件在 2019年7月12日 后都不能运行了，临时的解决办法，就是自己签名。</p><p><strong>1. 安装 Xcode</strong></p><p>安装 Xcode，你可以在 App Store 中下载安装，并且至少运行一次。</p><p><strong>2. 安装 Command Line Tools 工具</strong></p><p>打开终端工具输入如下命令：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_13" value="xcode-select --install"><button class="copy-btn" onclick="util.copy(&quot;copy_13&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>弹出后选择继续安装。</p><p><strong>3. 为应用签名</strong></p><p>打开终端工具输入并执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codesign --force --deep --sign - /Applications/name.app</span><br></pre></td></tr></table></figure><p>注意后面的文件路径，你可以打开访达找到应用程序，找到要签名的软件，直接拖入「终端」界面，即可自动生成路径。</p></div></details><details class="folder" index="3"><summary><span>如何显示隐藏文件</span></summary><div class="body"><div class="tag-plugin tabs" align="left"id="tab_12""><ul class="nav-tabs"><li class="tab active"><a href="#tab_12-1">显示</a></li><li class="tab"><a href="#tab_12-2">隐藏</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_12-1"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_14" value="defaults write com.apple.finder _FXShowPosixPathInTitle -bool TRUE; killall Finder"><button class="copy-btn" onclick="util.copy(&quot;copy_14&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div><div class="tab-pane" id="tab_12-2"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_15" value="defaults delete com.apple.finder _FXShowPosixPathInTitle; killall Finder"><button class="copy-btn" onclick="util.copy(&quot;copy_15&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div></div></div></div></details><details class="folder" index="4"><summary><span>外置磁盘路径</span></summary><div class="body"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/volume/磁盘路径/~~~</span><br></pre></td></tr></table></figure><p>例如一个名称为 “Files” 的磁盘里的文件夹 “Projects” 路径是:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/Volumes/Files/Projects/</span><br></pre></td></tr></table></figure></div></details><details class="folder" index="5"><summary><span>使用终端将 json 文件转为 plist 文件</span></summary><div class="body"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plutil -convert xml1 data.json -o data.plist</span><br></pre></td></tr></table></figure><p>其中 <code>data.json</code>、<code>data.plist</code> 分别对应转换前后的文件路径。</p></div></details><details class="folder" index="6"><summary><span>sudo 依然没有权限的解决办法</span></summary><div class="body"><div class="tag-plugin tabs" align="left"id="tab_13""><ul class="nav-tabs"><li class="tab active"><a href="#tab_13-1">查询 SIP 状态</a></li><li class="tab"><a href="#tab_13-2">关闭 SIP</a></li><li class="tab"><a href="#tab_13-3">开启 SIP</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_13-1"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_16" value="csrutil status"><button class="copy-btn" onclick="util.copy(&quot;copy_16&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>如果输出以下信息，说明 SIP 开启，需要暂时将 SIP 关闭。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">System Integrity Protection status: enabled.</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab_13-2"><p>重启 Mac，按住 <kbd>command</kbd> + <kbd>R</kbd> 直到出现开机 logo，此时会进入 Recovery 模式，选择「实用工具」-&gt;「Terminal」并输入以下命令：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_17" value="csrutil disable"><button class="copy-btn" onclick="util.copy(&quot;copy_17&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>然后重新启动电脑即可关闭 SIP。</p></div><div class="tab-pane" id="tab_13-3"><p>重启 Mac，按住 <kbd>command</kbd> + <kbd>R</kbd> 直到出现开机 logo，此时会进入 Recovery 模式，选择「实用工具」-&gt;「Terminal」并输入以下命令：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_18" value="csrutil enable"><button class="copy-btn" onclick="util.copy(&quot;copy_18&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>然后重新启动电脑即可开启 SIP。</p></div></div></div></div></details><details class="folder" index="7"><summary><span>搭载 Intel 芯片的 Mac 启动组合键</span></summary><div class="body"><ul><li><p><strong>Command (⌘)-R</strong>：从内建的 macOS 恢复系统启动。或者，您也可以使用 Option-Command-R 或 Shift-Option-Command-R 以通过互联网从 macOS 恢复功能启动。macOS 恢复功能可以安装不同版本的 macOS，具体取决于您在电脑启动时使用的组合键。如果您的 Mac 使用了固件密码，系统将提示您输入这个密码。</p></li><li><p><strong>Option (⌥) 或 Alt</strong>：启动进入“启动管理器”，您可以从中选取其他可用的启动磁盘或宗卷。如果您的 Mac 使用了固件密码，系统将提示您输入这个密码。</p></li><li><p><strong>Option-Command-P-R</strong>：重置 NVRAM 或 PRAM。如果您的 Mac 使用了固件密码，电脑会忽略这个组合键或从 macOS 恢复功能启动。</p></li><li><p><strong>Shift (⇧)</strong> ：以安全模式启动。如果使用了固件密码，这个组合键将被停用。</p></li><li><p><strong>D</strong>：启动进入“Apple 诊断”实用工具。也可以使用 Option-D 通过互联网启动进入这个实用工具。如果使用了固件密码，这个组合键将被停用。</p></li><li><p><strong>N</strong>：从 NetBoot 服务器启动，前提是您的 Mac 支持网络启动宗卷。要使用服务器上默认的引导映像，请按住 Option-N。如果使用了固件密码，这个组合键将被停用。</p></li><li><p><strong>Command-S</strong>：以单用户模式启动。如果运行的是 macOS Mojave 或更高版本，或者使用了固件密码，这个组合键会被停用。</p></li><li><p><strong>T</strong>：以目标磁盘模式启动。如果使用了固件密码，这个组合键将被停用。</p></li><li><p><strong>Command-V</strong>：以详细模式启动。如果使用了固件密码，这个组合键将被停用。</p></li><li><p><strong>推出键 (⏏)、F12</strong>、鼠标按钮或触控板按钮：推出可移动介质，例如光盘。如果使用了固件密码，这个组合键将被停用。</p></li></ul></div></details></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js 相关问题</title>
      <link href="/notes/nodejs/index.html"/>
      <url>/notes/nodejs/index.html</url>
      
        <content type="html"><![CDATA[<p>查看当前的源：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_19" value="npm config get registry"><button class="copy-btn" onclick="util.copy(&quot;copy_19&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>官方源：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_20" value="npm set registry https://registry.npmjs.org/"><button class="copy-btn" onclick="util.copy(&quot;copy_20&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>淘宝源：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_21" value="npm set registry https://registry.npm.taobao.org/"><button class="copy-btn" onclick="util.copy(&quot;copy_21&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>服务器相关问题</title>
      <link href="/notes/server/index.html"/>
      <url>/notes/server/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub-Action-Hexo-部署到服务器"><a href="#GitHub-Action-Hexo-部署到服务器" class="headerlink" title="GitHub Action + Hexo 部署到服务器"></a>GitHub Action + Hexo 部署到服务器</h2><h3 id="在本地电脑生成-ssh-key"><a href="#在本地电脑生成-ssh-key" class="headerlink" title="在本地电脑生成 ssh key"></a>在本地电脑生成 ssh key</h3><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_22" value="ssh-keygen -t rsa"><button class="copy-btn" onclick="util.copy(&quot;copy_22&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="创建-git-用户"><a href="#创建-git-用户" class="headerlink" title="创建 git 用户"></a>创建 git 用户</h3><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_23" value="adduser git"><button class="copy-btn" onclick="util.copy(&quot;copy_23&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="设置-ssh"><a href="#设置-ssh" class="headerlink" title="设置 ssh"></a>设置 ssh</h3><p>把本机的 <code>id_isa.pub</code> 内容复制到这里：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/git/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="如果通过-ssh-登录仍需要密码的解决方法"><a href="#如果通过-ssh-登录仍需要密码的解决方法" class="headerlink" title="如果通过 ssh 登录仍需要密码的解决方法"></a>如果通过 ssh 登录仍需要密码的解决方法</h3><p>找到并修改 <code>/etc/ssh/sshd_config</code> 文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#禁用root账户登录，如果是用root用户登录请开启</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line"># 是否让 sshd 去检查用户家目录或相关档案的权限数据，</span><br><span class="line"># 这是为了担心使用者将某些重要档案的权限设错，可能会导致一些问题所致。</span><br><span class="line"># 例如使用者的 ~.ssh/ 权限设错时，某些特殊情况下会不许用户登入</span><br><span class="line">StrictModes no</span><br><span class="line"></span><br><span class="line"># 是否允许用户自行使用成对的密钥系统进行登入行为，仅针对 version 2。</span><br><span class="line"># 至于自制的公钥数据就放置于用户家目录下的 .ssh/authorized_keys 内</span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"># 有了证书登录了，就禁用密码登录。</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>然后重启 <code>sshd</code> 服务</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_24" value="/bin/systemctl restart sshd.service"><button class="copy-btn" onclick="util.copy(&quot;copy_24&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="网站路径"><a href="#网站路径" class="headerlink" title="网站路径"></a>网站路径</h3><p>创建网站，以 <code>/www/wwwroot/xaoxuu.github.io</code> 为例，<code>/www/wwwroot/xaoxuu.github.io</code> 的权限要改成 777 并且所有者为 www 才可以访问。</p><h3 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h3><figure class="highlight yaml"><figcaption><span>.github/workflows/auto-deploy.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  [<span class="string">push</span>] <span class="comment"># 触发事件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment"># 运行环境为最新版 Ubuntu</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="comment"># 1. 获取源码</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span> <span class="comment"># 使用 actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span> <span class="comment"># 条件</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else). 当有子模块时切换分支？</span></span><br><span class="line">    <span class="comment"># 2. 配置环境</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">16.13</span><span class="string">.x</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;16.13.x&quot;</span></span><br><span class="line">    <span class="comment"># 3. 生成静态文件</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Public</span> <span class="string">Files</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm i</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string">        hexo clean &amp;&amp; hexo generate</span></span><br><span class="line"><span class="string"></span>    <span class="comment"># 4. 部署到 GitHub 仓库</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">external_repository:</span> <span class="string">xaoxuu/xaoxuu.github.io</span></span><br><span class="line">        <span class="attr">publish_branch:</span> <span class="string">gh-pages</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">commit_message:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">&#x27;github-actions[bot]&#x27;</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">&#x27;github-actions[bot]@users.noreply.github.com&#x27;</span></span><br><span class="line">    <span class="comment"># 5. 部署到服务器</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">Server</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">easingthemes/ssh-deploy@v2</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_SSH_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">ARGS:</span> <span class="string">&quot;-rltgoDzvO --delete&quot;</span></span><br><span class="line">        <span class="attr">EXCLUDE:</span> <span class="string">&quot;.well-known&quot;</span></span><br><span class="line">        <span class="attr">SOURCE:</span> <span class="string">public/</span></span><br><span class="line">        <span class="attr">REMOTE_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">REMOTE_PORT:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_PORT</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">REMOTE_USER:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_USER</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">TARGET:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.TARGET</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>在 Settings -&gt; Secrets 中填写对应的值：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">SERVER_SSH_KEY:</span> <span class="string">第一步本机生成的</span> <span class="string">id_isa</span> <span class="string">文件内容</span></span><br><span class="line"><span class="attr">REMOTE_HOST:</span> <span class="string">服务器地址</span></span><br><span class="line"><span class="attr">REMOTE_PORT:</span> <span class="string">服务器SSH端口</span></span><br><span class="line"><span class="attr">REMOTE_USER:</span> <span class="string">用户名，例如</span> <span class="string">&quot;git&quot;</span></span><br><span class="line"><span class="attr">TARGET:</span> <span class="string">生成的文件路径，例如</span> <span class="string">&quot;/www/wwwroot/xaoxuu.github.io/&quot;</span></span><br></pre></td></tr></table></figure><h2 id="设置-webhook"><a href="#设置-webhook" class="headerlink" title="设置 webhook"></a>设置 webhook</h2><figure class="highlight sh"><figcaption><span>post-receive</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">WEBROOT=/www/wwwroot/xaoxuu.github.io</span><br><span class="line">git --work-tree=<span class="variable">$WEBROOT</span> checkout -f master</span><br></pre></td></tr></table></figure><p>把上述的 post-receive 文件放在这里：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/git/xxx.git/hooks/post-receive</span><br></pre></td></tr></table></figure><blockquote><p><code>/www/wwwroot/xaoxuu.github.io</code> 的权限要改成 777 才行</p></blockquote><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://zhuanlan.zhihu.com/p/58654392" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://zhuanlan.zhihu.com/p/58654392</span><span class="cap link fs12">https://zhuanlan.zhihu.com/p/58654392</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="GitLab" href="http://42.192.89.158:8099" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">GitLab</span><span class="cap link fs12">http://42.192.89.158:8099</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><p>把上述的 post-receive 文件放在这里：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/opt/gitlab/git-data/repositories/root/xxx.git/custom_hooks/post-receive</span><br></pre></td></tr></table></figure><p>GitLab 的 ssh 能记住密钥， hook 也正常，缺点就是每个月多花10块钱满足 GitLab 最低配置要求。</p><h2 id="404"><a href="#404" class="headerlink" title="404"></a>404</h2><p>打开 nginx 配置文件，拉到最后，看到：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include /www/server/panel/vhost/nginx/*.conf;</span><br></pre></td></tr></table></figure><p>然后根据这个路径找到自定义的配置文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/www/server/panel/vhost/nginx/xaoxuu.com.conf</span><br></pre></td></tr></table></figure><p>在其中添加如下代码就可以了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    fastcgi_intercept_errors on;</span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">    location = /404.html &#123;</span><br><span class="line">        root /www/wwwroot/xaoxuu.github.io;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>综合型ObjC开发工具包</title>
      <link href="/wiki/axkit/index.html"/>
      <url>/wiki/axkit/index.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h3 id="沙盒文件"><a href="#沙盒文件" class="headerlink" title="沙盒文件"></a>沙盒文件</h3><ul><li>使用链式语法快速存取沙盒文件</li></ul><h3 id="toJson"><a href="#toJson" class="headerlink" title=".toJson()"></a>.toJson()</h3><ul><li><code>.toJson()</code> 快速将字典、数组与 json 进行转换以及非空判断</li></ul><h3 id="Blocks"><a href="#Blocks" class="headerlink" title="Blocks"></a>Blocks</h3><ul><li>构造方法的 block 支持</li><li>EventTarget 的 block 支持</li><li>给视图添加手势的 block 支持（Runtime）</li></ul><h3 id="Cooldown"><a href="#Cooldown" class="headerlink" title="Cooldown"></a>Cooldown</h3><ul><li>代码冷却机制（基于 GCD 实现）</li></ul><h3 id="Date"><a href="#Date" class="headerlink" title="Date+"></a>Date+</h3><ul><li>NSDate 的链式封装（日期的格式化和操作）</li></ul><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><figure class="highlight ruby"><figcaption><span>在 Podfile 中添加：</span></figcaption><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;AXKit&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>然后执行：</span></figcaption><table><tr><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="沙盒文件与ToJson"><a href="#沙盒文件与ToJson" class="headerlink" title="沙盒文件与ToJson"></a>沙盒文件与ToJson</h3><p>保存</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">NSDictionary</span> *dict = @&#123;<span class="string">@&quot;name&quot;</span>: <span class="string">@&quot;Alex&quot;</span>&#125;;</span><br><span class="line"><span class="string">@&quot;File.json&quot;</span>.docPath.saveJson(dict);</span><br></pre></td></tr></table></figure><p>读取和转换</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="type">id</span> read = <span class="string">@&quot;File.json&quot;</span>.docPath.readJson();</span><br><span class="line"><span class="built_in">NSDictionary</span> *readDict = <span class="built_in">NSDictionary</span>.safe(read);</span><br><span class="line"><span class="built_in">NSArray</span> *readArr = <span class="built_in">NSArray</span>.safe(read);</span><br></pre></td></tr></table></figure><p>转换</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">NSUserDefaults</span>.setObjectForKey(@<span class="number">23</span>, <span class="string">@&quot;age&quot;</span>);</span><br><span class="line"><span class="built_in">NSUserDefaults</span>.numberForKey(<span class="string">@&quot;age&quot;</span>);</span><br><span class="line"><span class="built_in">NSUserDefaults</span>.setObjectForKey(<span class="string">@&quot;23&quot;</span>, <span class="string">@&quot;age&quot;</span>);</span><br><span class="line"><span class="built_in">NSUserDefaults</span>.numberForKey(<span class="string">@&quot;age&quot;</span>);</span><br><span class="line"><span class="comment">// 以上两种情况都可以正常读取到值，因为内部做了自动转换</span></span><br></pre></td></tr></table></figure><h3 id="Cooldown-1"><a href="#Cooldown-1" class="headerlink" title="Cooldown"></a>Cooldown</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 10秒内即使多次调用也不会重复执行</span></span><br><span class="line">ax_dispatch_cooldown(<span class="number">0</span>, <span class="number">10</span>, <span class="string">&quot;cool&quot;</span>, dispatch_get_main_queue(), ^&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;, ^&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;正在冷却，请稍后&quot;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Date-1"><a href="#Date-1" class="headerlink" title="Date+"></a>Date+</h3><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">NSDate</span> *date = <span class="built_in">NSDate</span>.initWithFormat(<span class="string">@&quot;yyyyMMdd&quot;</span>, <span class="string">@&quot;20160802&quot;</span>);</span><br><span class="line">date = date.addDays(<span class="number">1</span>).addhours(<span class="number">-1</span>).addWeeks(<span class="number">-2</span>).addMinutes(<span class="number">20</span>);</span><br><span class="line"><span class="built_in">NSString</span> *str = date.stringWithFormat(<span class="string">@&quot;yyyyMMdd&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Blocks-1"><a href="#Blocks-1" class="headerlink" title="Blocks"></a>Blocks</h3><p>手势</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">[view ax_addTapGestureHandler:^(<span class="built_in">UITapGestureRecognizer</span> * sender) &#123;</span><br><span class="line">    <span class="comment">// 点击事件</span></span><br><span class="line">&#125;];</span><br><span class="line">[view ax_addPanGesture:<span class="literal">nil</span> handler:^(<span class="built_in">UIPanGestureRecognizer</span> * sender) &#123;</span><br><span class="line">    <span class="comment">// 拖拽</span></span><br><span class="line">&#125;];</span><br><span class="line">[view ax_addLongPressGesture:^(<span class="built_in">UILongPressGestureRecognizer</span> * sender) &#123;</span><br><span class="line">    sender.minimumPressDuration = <span class="number">5</span>;</span><br><span class="line">&#125; handler:^(<span class="built_in">UILongPressGestureRecognizer</span> * sender) &#123;</span><br><span class="line">    <span class="comment">// 长按</span></span><br><span class="line">&#125;];</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>事件</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="built_in">UIButton</span> *button;</span><br><span class="line">[button ax_addTouchUpInsideHandler:^(<span class="built_in">UIButton</span> * sender) &#123;</span><br><span class="line">    <span class="comment">// 点击</span></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">UISlider</span> *slider;</span><br><span class="line">[slider ax_addEventHandler:^(<span class="built_in">UISlider</span> * sender) &#123;</span><br><span class="line">    <span class="comment">// 事件</span></span><br><span class="line">&#125; forControlEvents:<span class="built_in">UIControlEventValueChanged</span>];</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/wiki/cloud-shell/index.html"/>
      <url>/wiki/cloud-shell/index.html</url>
      
        <content type="html"><![CDATA[<h2 class="tag-plugin quot" type="icon" id="什么是 cloud-shell"><a href="#什么是 cloud-shell" class="headerlink" title="什么是 cloud-shell"></a><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />什么是 cloud-shell</h2><p>一个轻量级云端脚本库，里面的脚本不依赖任何包管理工具，一行代码即可使用。</p><p>在终端中输入以下指令可以安装对应脚本：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s https://sh.xaox.cc/install | sh 脚本名</span><br></pre></td></tr></table></figure><p>也可以指定分支或版本号：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s https://sh.xaox.cc/install | sh 脚本名 分支或版本号</span><br></pre></td></tr></table></figure><p>快来试一试吧～</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_25" value="curl -s https://sh.xaox.cc/install | sh"><button class="copy-btn" onclick="util.copy(&quot;copy_25&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>心率管家</title>
      <link href="/wiki/heartmate/index.html"/>
      <url>/wiki/heartmate/index.html</url>
      
        <content type="html"><![CDATA[<p>专为那些没有智能手环或手表却需要测量心率的用户而设计，可以方便快捷的测量和记录心率。 使用Heart Mate心率助手，你可以在没有智能手环等心率监测设备的情况下随时检测并记录自己的心率。 通过设置tag标签，快速记录当前状态，如饭后、运动后等，方便以后检索具有同样标签的心率数据，从而分析这些情景下的心率数据，发现健康问题。</p><span id="more"></span><div class="tag-plugin swiper-container" id="swiper-api" width="min"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot01.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot02.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot03.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot04.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot05.jpg"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/heartmate/screenshot06.jpg"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><br><p>心率管家App（仅iOS端），专业版不定期限免，欢迎下载体验。</p><p>如果您看到的时候已经过了限免期，可以先下载免费版使用。为了吸引app推荐类网站的爬虫进行推荐，专业版的价格通常在1元到68元之间浮动变化的。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="心率管家（免费版）" href="https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">心率管家（免费版）</span><span class="cap link fs12">https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="心率管家（专业版）" href="https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1463348922?ls=1" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">心率管家（专业版）</span><span class="cap link fs12">https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1463348922?ls=1</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="如何测量"><a href="#如何测量" class="headerlink" title="如何测量"></a>如何测量</h2><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"focus="top"><video poster="/assets/wiki/heartmate/docs/usage01.jpg" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/heartmate/docs/usage01.mp4" type="video/mp4"></video><div class="frame"></div></div></div><h3 id="第一步，调整位置"><a href="#第一步，调整位置" class="headerlink" title="第一步，调整位置"></a>第一步，调整位置</h3><p>请用一只手指同时按住手机后方的摄像头和闪光灯，调整遮挡的位置使上方的取景器看起来是红色的。</p><h3 id="第二步，保持不动"><a href="#第二步，保持不动" class="headerlink" title="第二步，保持不动"></a>第二步，保持不动</h3><p>太好了，现在手指尽量不要动，请等待数据稳定，这大概需要10秒钟。</p><h3 id="第三步，继续保持不动"><a href="#第三步，继续保持不动" class="headerlink" title="第三步，继续保持不动"></a>第三步，继续保持不动</h3><p>正在采集数据，马上就要成功了，手指请继续保持不动。</p><h3 id="第四步，请松开手"><a href="#第四步，请松开手" class="headerlink" title="第四步，请松开手"></a>第四步，请松开手</h3><p>恭喜您，测量已经完成，您可以松开手指结束此次测量，也可以保持不动继续测量更长时间以提高准确性。</p><blockquote><p>App内部有详细的使用帮助。</p></blockquote><h2 id="近期限免日程"><a href="#近期限免日程" class="headerlink" title="近期限免日程"></a>近期限免日程</h2><p><img src="https://bu.dusays.com/2021/02/26/24622fa8268f1.jpg"></p><p>付费真不是为了赚钱，是为了骗应用推荐类网站的爬虫给我做推广，同时这样也减少了免费时的莫名其妙的大量差评。已经高价购买的用户实在是抱歉，我的其它 App 也会采用类似的定价策略，所以请多多关注我的博客，能省下不少钱呢。</p><h2 id="安装测试版"><a href="#安装测试版" class="headerlink" title="安装测试版"></a>安装测试版</h2><p>安装地址：<a href="https://testflight.apple.com/join/rqNjAxg1">https://testflight.apple.com/join/rqNjAxg1</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>认识 Git</title>
      <link href="/wiki/git/index.html"/>
      <url>/wiki/git/index.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="什么是-Git-？"><a href="#什么是-Git-？" class="headerlink" title="什么是 Git ？"></a>什么是 Git ？</h2><p>Git 是目前世界上最先进的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><h3 id="Git-与-SVN-区别点"><a href="#Git-与-SVN-区别点" class="headerlink" title="Git 与 SVN 区别点"></a>Git 与 SVN 区别点</h3><ol><li>Git 是分布式的，SVN 不是。这是 Git 和其它非分布式的版本控制系统如 SVN，CVS 等最核心的区别。</li><li>Git 把内容按元数据方式存储，而 SVN 是按文件。</li><li>Git 分支和 SVN 的分支不同：分支在 SVN 中一点都不特别，其实它就是版本库中的另外一个目录。</li><li>Git 没有一个全局的版本号，而 SVN 有。目前为止这是跟 SVN 相比 Git 缺少的最大的一个特征。</li><li>Git 的内容完整性要优于 SVN。Git 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。</li></ol><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/git/svn-git.jpg" alt="图片来源于 RUNOOB" style="width:400px;"/></div><div class="image-meta"><span class="image-caption center">图片来源于 RUNOOB</span></div></div><h2 id="Git-工作区、暂存区和版本库"><a href="#Git-工作区、暂存区和版本库" class="headerlink" title="Git 工作区、暂存区和版本库"></a>Git 工作区、暂存区和版本库</h2><ul><li>工作区：就是你在电脑里能看到的目录。</li><li>暂存区：英文叫stage, 或index。一般存放在 “.git目录下” 下的index文件（.git&#x2F;index）中，所以我们把暂存区有时也叫作索引（index）。</li><li>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>NEXUS</title>
      <link href="/wiki/nexus/index.html"/>
      <url>/wiki/nexus/index.html</url>
      
        <content type="html"><![CDATA[<p>点击屏幕左上角，即可呼出搜索栏，此搜索栏对于一些常用的网站如[优酷]、[淘宝]等等可以直达官网，省去了搜索引擎检索的步骤。左上角热键是透明的，不影响视觉，只有在允许后台运行时才会生效。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/nexus/IMG_0355.PNG"/></div></div><div class="tag-plugin swiper-container" id="swiper-api"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="/assets/wiki/nexus/IMG_0356.PNG"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/nexus/IMG_0357.PNG"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/nexus/IMG_0358.PNG"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/nexus/IMG_0359.PNG"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><span id="more"></span><h2 id="适用平台"><a href="#适用平台" class="headerlink" title="适用平台"></a>适用平台</h2><p>Windows 7~10</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://github.com/xaoxuu/NEXUS-Windows/releases/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://github.com/xaoxuu/NEXUS-Windows/releases/</span><span class="cap link fs12">https://github.com/xaoxuu/NEXUS-Windows/releases/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="已归档"><a href="#已归档" class="headerlink" title="已归档"></a>已归档</h2><p>这是一个已经归档的项目，最后一次更新时间是在2017年1月。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>基于主题的Swift开发工具包</title>
      <link href="/wiki/inspire/index.html"/>
      <url>/wiki/inspire/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h3 id="可缓存的"><a href="#可缓存的" class="headerlink" title="可缓存的"></a>可缓存的</h3><ul><li>App 的样式参数（颜色、字体、布局）存储于 json 文件中。</li></ul><h3 id="可配置的"><a href="#可配置的" class="headerlink" title="可配置的"></a>可配置的</h3><ul><li>可由用户修改主题参数并保存或者分享。</li></ul><h3 id="提供便利"><a href="#提供便利" class="headerlink" title="提供便利"></a>提供便利</h3><ul><li>便捷的方式获取屏幕布局参数、如各边安全区域尺寸，便于机型适配。</li></ul><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><figure class="highlight ruby"><figcaption><span>在 Podfile 中添加：</span></figcaption><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;Inspire&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>然后执行：</span></figcaption><table><tr><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><h2 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h2><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">view.backgroundColor <span class="operator">=</span> .background</span><br><span class="line">view.tintColor <span class="operator">=</span> .accent</span><br></pre></td></tr></table></figure><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> lb <span class="operator">=</span> <span class="type">UILabel</span>()</span><br><span class="line">lb.font <span class="operator">=</span> .regular(<span class="number">15</span>)</span><br><span class="line">lb.font <span class="operator">=</span> .bold(<span class="number">20</span>, for: .title)</span><br><span class="line">lb.font <span class="operator">=</span> .regular(<span class="number">14</span>, for: .code)</span><br></pre></td></tr></table></figure><h3 id="边距"><a href="#边距" class="headerlink" title="边距"></a>边距</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> topMargin <span class="operator">=</span> layout.topBarHeight(for: <span class="keyword">self</span>)</span><br><span class="line"><span class="keyword">let</span> bottomMargin <span class="operator">=</span> layout.bottomBarHeight(for: <span class="keyword">self</span>)</span><br><span class="line"><span class="keyword">let</span> safeArea <span class="operator">=</span> layout.safeAreaInsets(for: <span class="keyword">self</span>)</span><br><span class="line"><span class="keyword">let</span> safeArea2 <span class="operator">=</span> <span class="type">Inspire</span>.shared.screen.safeAreaInsets</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> layout <span class="operator">=</span> <span class="type">Inspire</span>.shared.layout</span><br><span class="line">view.frame.size.height <span class="operator">=</span> layout.rowHeight</span><br><span class="line">view.layer.cornerRadius <span class="operator">=</span> layout.cornerRadius.large</span><br></pre></td></tr></table></figure><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 保存</span></span><br><span class="line"><span class="type">Inspire</span>.shared.cache()</span><br><span class="line"><span class="type">Inspire</span>.shared.cache(named: <span class="string">&quot;myTheme&quot;</span>)</span><br><span class="line"><span class="comment">// 读取</span></span><br><span class="line"><span class="keyword">let</span> ipr <span class="operator">=</span> <span class="type">Inspire</span>.<span class="keyword">init</span>(<span class="string">&quot;myTheme&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>易于上手又完全可定制化的专业HUD库</title>
      <link href="/wiki/prohud/index.html"/>
      <url>/wiki/prohud/index.html</url>
      
        <content type="html"><![CDATA[<p><strong>易于上手</strong></p><ul><li>用极少的参数就可以创建并显示一个实例。</li><li>用相似的接口调用<strong>Toast</strong>、<strong>Alert</strong>、<strong>Sheet</strong>。</li></ul><p><strong>功能丰富</strong></p><ul><li>具有完善的实例管理（多实例共存方案、查找与更新方案）。</li><li>可对已发布的实例进行数据更新。</li><li>横竖屏和iPad布局优化。</li></ul><p><strong>完全可定制化</strong></p><ul><li>支持只使用ProHUD的容器，而容器内容可完全自定义。</li><li>程序初始化时配置自定义UI样式，调用的时候只需要关注数据。</li><li>易于扩展，可以很方便的添加任意控件。</li></ul><h2 id="Toast（顶部通知横幅）"><a href="#Toast（顶部通知横幅）" class="headerlink" title="Toast（顶部通知横幅）"></a>Toast（顶部通知横幅）</h2><p>通知条控件，用于非阻塞性事件通知。显示效果如同原生通知，默认会自动消失，可以支持手势移除，有多条通知可以平铺并列显示。</p><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"focus="top"><video poster="/assets/wiki/prohud/toast/demo-loading.png" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/prohud/toast/demo-loading.mp4" type="video/mp4"></video><div class="frame"></div></div></div><h3 id="方式一：传入ViewModel生成实例"><a href="#方式一：传入ViewModel生成实例" class="headerlink" title="方式一：传入ViewModel生成实例"></a>方式一：传入ViewModel生成实例</h3><p>这种方式创建的实例在调用<code>push()</code>之后才会显示出来，结构为： </p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> 实例 <span class="operator">=</span> <span class="type">Toast</span>(视图模型)</span><br><span class="line">实例.push()</span><br></pre></td></tr></table></figure><p>也可以连在一起写，例如：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Toast</span>(.message(<span class="string">&quot;要显示的消息内容&quot;</span>)).push()</span><br></pre></td></tr></table></figure><h4 id="如何创建ViewModel"><a href="#如何创建ViewModel" class="headerlink" title="如何创建ViewModel"></a>如何创建ViewModel</h4><p>ViewModel有多种创建方式，也可以自行扩展更多常用场景，例如：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 纯文本</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .message(<span class="string">&quot;要显示的消息内容&quot;</span>)</span><br><span class="line"><span class="comment">// 持续2s的文本</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .message(<span class="string">&quot;要显示的消息内容&quot;</span>).duration(<span class="number">2</span>)</span><br><span class="line"><span class="comment">// 标题 + 正文</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .title(<span class="string">&quot;标题&quot;</span>).message(<span class="string">&quot;正文&quot;</span>)</span><br></pre></td></tr></table></figure><p>内置了几种常见的场景扩展，例如正在加载的场景：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">var</span> loading: <span class="type">ViewModel</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> obj <span class="operator">=</span> <span class="type">ViewModel</span>(icon: <span class="type">UIImage</span>(inProHUD: <span class="string">&quot;prohud.windmill&quot;</span>))</span><br><span class="line">    obj.rotation <span class="operator">=</span> .<span class="keyword">init</span>(repeatCount: .infinity)</span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">func</span> <span class="title function_">loading</span>(<span class="keyword">_</span> <span class="params">seconds</span>: <span class="type">TimeInterval</span>) -&gt; <span class="type">ViewModel</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> obj <span class="operator">=</span> <span class="type">ViewModel</span>(icon: <span class="type">UIImage</span>(inProHUD: <span class="string">&quot;prohud.windmill&quot;</span>), duration: seconds)</span><br><span class="line">    obj.rotation <span class="operator">=</span> .<span class="keyword">init</span>(repeatCount: .infinity)</span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用的时候可以：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 无限持续时间</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .loading</span><br><span class="line"><span class="comment">// 无限持续时间, 带有文字</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .loading.message(<span class="string">&quot;正在加载&quot;</span>)</span><br><span class="line"><span class="comment">// 持续10s</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .loading(<span class="number">10</span>)</span><br><span class="line"><span class="comment">// 持续10s, 带有文字</span></span><br><span class="line"><span class="keyword">let</span> vm <span class="operator">=</span> .loading(<span class="number">10</span>).message(<span class="string">&quot;正在加载&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="方式二：以闭包形式创建并显示实例"><a href="#方式二：以闭包形式创建并显示实例" class="headerlink" title="方式二：以闭包形式创建并显示实例"></a>方式二：以闭包形式创建并显示实例</h3><p>对于复杂实例，建议以这种方式使用，例如给实例增加事件响应：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> title <span class="operator">=</span> <span class="string">&quot;您收到了一条消息&quot;</span></span><br><span class="line"><span class="keyword">let</span> message <span class="operator">=</span> <span class="string">&quot;点击通知横幅任意处即可回复&quot;</span></span><br><span class="line"><span class="type">Toast</span> &#123; toast <span class="keyword">in</span></span><br><span class="line">    toast.vm <span class="operator">=</span> .msg.title(title).message(message)</span><br><span class="line">    toast.onTapped &#123; toast <span class="keyword">in</span></span><br><span class="line">        toast.pop()</span><br><span class="line">        <span class="type">Alert</span>(.success(<span class="number">1</span>).message(<span class="string">&quot;操作成功&quot;</span>)).push()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以增加多个按钮，横向平铺，在这个例子中，左侧图标位置自定义为头像：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> title <span class="operator">=</span> <span class="string">&quot;您收到了一条好友申请&quot;</span></span><br><span class="line"><span class="keyword">let</span> message <span class="operator">=</span> <span class="string">&quot;丹妮莉丝·坦格利安申请添加您为好友，是否同意？&quot;</span></span><br><span class="line"><span class="type">Toast</span>(.title(title).message(message)) &#123; toast <span class="keyword">in</span></span><br><span class="line">    toast.isRemovable <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    toast.vm.icon <span class="operator">=</span> <span class="type">UIImage</span>(named: <span class="string">&quot;avatar&quot;</span>)</span><br><span class="line">    toast.imageView.layer.masksToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    toast.imageView.layer.cornerRadius <span class="operator">=</span> toast.config.iconSize.width <span class="operator">/</span> <span class="number">2</span></span><br><span class="line">    toast.add(action: <span class="string">&quot;拒绝&quot;</span>, style: .destructive) &#123; toast <span class="keyword">in</span></span><br><span class="line">        <span class="comment">// 按钮点击事件回调</span></span><br><span class="line">        <span class="operator">...</span></span><br><span class="line">    &#125;</span><br><span class="line">    toast.add(action: <span class="string">&quot;同意&quot;</span>) &#123; toast <span class="keyword">in</span></span><br><span class="line">        <span class="comment">// 按钮点击事件回调</span></span><br><span class="line">        toast.pop()</span><br><span class="line">        <span class="type">Alert</span>(.success(<span class="number">1</span>).message(<span class="string">&quot;Good choice!&quot;</span>)).push()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin img-wrap"><div class="frame-wrap" id="iphone11"focus="top"><img class="img" src="/assets/wiki/prohud/toast/buttons.jpg"/><div class="frame"></div></div></div><h3 id="如果存在就更新，不存在就创建新的实例"><a href="#如果存在就更新，不存在就创建新的实例" class="headerlink" title="如果存在就更新，不存在就创建新的实例"></a>如果存在就更新，不存在就创建新的实例</h3><p>例如弹出一个loading，有多个地方需要更新这个loading，为了避免重复弹出多个实例，可以使用 <code>lazyPush</code> 方法：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Toast</span>.lazyPush(identifier: <span class="string">&quot;loading&quot;</span>) &#123; toast <span class="keyword">in</span></span><br><span class="line">    toast.vm <span class="operator">=</span> .loading.title(<span class="string">&quot;正在加载<span class="subst">\(i)</span>&quot;</span>).message(<span class="string">&quot;这条消息不会重复显示多条&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如果存在就更新，不存在就忽略指令"><a href="#如果存在就更新，不存在就忽略指令" class="headerlink" title="如果存在就更新，不存在就忽略指令"></a>如果存在就更新，不存在就忽略指令</h3><p>如果要对一个已经存在的实例进行更新，假如实例已经结束显示了，那就不进行任何操作，这时候可以使用 <code>find</code> 方法：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Toast</span>.find(identifier: <span class="string">&quot;loading&quot;</span>) &#123; toast <span class="keyword">in</span></span><br><span class="line">    toast.vm <span class="operator">=</span> .success(<span class="number">2</span>).message(<span class="string">&quot;加载成功&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"focus="top"><video poster="/assets/wiki/prohud/toast/demo-update.png" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/prohud/toast/demo-update.mp4" type="video/mp4"></video><div class="frame"></div></div></div><h2 id="Alert（页面中心弹窗）"><a href="#Alert（页面中心弹窗）" class="headerlink" title="Alert（页面中心弹窗）"></a>Alert（页面中心弹窗）</h2><p>弹窗控件，用于强阻塞性交互，用户必须做出选择或者等待结果才能进入下一步，当多个实例出现时，会以堆叠的形式显示，新的实例会在覆盖旧的实例上层。</p><p>Alert和Toast一样有两种创建方法，不再赘述。</p><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"><video poster="/assets/wiki/prohud/alert/demo-stack.png" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/prohud/alert/demo-stack.mp4" type="video/mp4"></video><div class="frame"></div></div></div><h3 id="修改实例内容"><a href="#修改实例内容" class="headerlink" title="修改实例内容"></a>修改实例内容</h3><p>在实例弹出后仍然可以修改实例内容：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 持有实例的情况下：</span></span><br><span class="line"><span class="type">Alert</span>(.note) &#123; alert <span class="keyword">in</span></span><br><span class="line">    alert.vm.message <span class="operator">=</span> <span class="string">&quot;可以动态增加、删除、更新文字&quot;</span></span><br><span class="line">    alert.add(action: <span class="string">&quot;增加标题&quot;</span>) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.vm.title <span class="operator">=</span> <span class="string">&quot;这是标题&quot;</span></span><br><span class="line">        alert.reloadTextStack()</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;增加正文&quot;</span>) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.vm.message <span class="operator">=</span> <span class="string">&quot;可以动态增加、删除、更新文字&quot;</span></span><br><span class="line">        alert.reloadTextStack()</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;删除标题&quot;</span>, style: .destructive) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.vm.title <span class="operator">=</span> <span class="literal">nil</span></span><br><span class="line">        alert.reloadTextStack()</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;删除正文&quot;</span>, style: .destructive) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.vm.message <span class="operator">=</span> <span class="literal">nil</span></span><br><span class="line">        alert.reloadTextStack()</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;取消&quot;</span>, style: .gray)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 未持有实例时，可通过 identifier 查找并更新：</span></span><br><span class="line"><span class="type">Alert</span>.find(identifier: <span class="string">&quot;my-alert&quot;</span>) &#123; alert <span class="keyword">in</span></span><br><span class="line">    alert.vm.title <span class="operator">=</span> <span class="string">&quot;这是标题&quot;</span></span><br><span class="line">    alert.reloadTextStack()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"><video poster="/assets/wiki/prohud/alert/demo-update.png" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/prohud/alert/demo-update.mp4" type="video/mp4"></video><div class="frame"></div></div></div><h3 id="按钮的增删改查"><a href="#按钮的增删改查" class="headerlink" title="按钮的增删改查"></a>按钮的增删改查</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Alert</span>(.note) &#123; alert <span class="keyword">in</span></span><br><span class="line">    alert.vm.message <span class="operator">=</span> <span class="string">&quot;可以动态增加、删除按钮&quot;</span></span><br><span class="line">    alert.add(action: <span class="string">&quot;在底部增加按钮&quot;</span>, style: .filled(color: .systemGreen)) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.add(action: <span class="string">&quot;哈哈1&quot;</span>, identifier: <span class="string">&quot;haha1&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;在当前按钮下方增加&quot;</span>, style: .filled(color: .systemIndigo), identifier: <span class="string">&quot;add&quot;</span>) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.insert(action: .<span class="keyword">init</span>(identifier: <span class="string">&quot;haha2&quot;</span>, style: .light(color: .systemOrange), title: <span class="string">&quot;哈哈2&quot;</span>, handler: <span class="literal">nil</span>), after: <span class="string">&quot;add&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;修改当前按钮文字&quot;</span>, identifier: <span class="string">&quot;edit&quot;</span>) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.update(action: <span class="string">&quot;已修改&quot;</span>, for: <span class="string">&quot;edit&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;删除「哈哈1」&quot;</span>, style: .destructive) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.remove(actions: .identifiers(<span class="string">&quot;haha1&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;删除「哈哈1」和「哈哈2」&quot;</span>, style: .destructive) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.remove(actions: .identifiers(<span class="string">&quot;haha1&quot;</span>, <span class="string">&quot;haha2&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;删除全部按钮&quot;</span>, style: .destructive) &#123; alert <span class="keyword">in</span></span><br><span class="line">        alert.remove(actions: .all)</span><br><span class="line">        <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: .now() <span class="operator">+</span> <span class="number">2</span>) &#123;</span><br><span class="line">            alert.pop()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    alert.add(action: <span class="string">&quot;取消&quot;</span>, style: .gray)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加自定义控件"><a href="#添加自定义控件" class="headerlink" title="添加自定义控件"></a>添加自定义控件</h3><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Alert</span> &#123; alert <span class="keyword">in</span></span><br><span class="line">    alert.vm.title <span class="operator">=</span> <span class="string">&quot;自定义控件&quot;</span></span><br><span class="line">    <span class="comment">// 图片</span></span><br><span class="line">    <span class="keyword">let</span> imgv <span class="operator">=</span> <span class="type">UIImageView</span>(image: <span class="type">UIImage</span>(named: <span class="string">&quot;landscape&quot;</span>))</span><br><span class="line">    imgv.contentMode <span class="operator">=</span> .scaleAspectFill</span><br><span class="line">    imgv.clipsToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    imgv.layer.cornerRadiusWithContinuous <span class="operator">=</span> <span class="number">12</span></span><br><span class="line">    alert.add(subview: imgv).snp.makeConstraints &#123; make <span class="keyword">in</span></span><br><span class="line">        make.height.equalTo(<span class="number">120</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// seg</span></span><br><span class="line">    <span class="keyword">let</span> seg <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;开发&quot;</span>, <span class="string">&quot;测试&quot;</span>, <span class="string">&quot;预发&quot;</span>, <span class="string">&quot;生产&quot;</span>])</span><br><span class="line">    seg.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    alert.add(subview: seg).snp.makeConstraints &#123; make <span class="keyword">in</span></span><br><span class="line">        make.height.equalTo(<span class="number">40</span>)</span><br><span class="line">        make.width.equalTo(<span class="number">400</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// slider</span></span><br><span class="line">    <span class="keyword">let</span> slider <span class="operator">=</span> <span class="type">UISlider</span>()</span><br><span class="line">    slider.minimumValue <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    slider.maximumValue <span class="operator">=</span> <span class="number">100</span></span><br><span class="line">    slider.value <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">    alert.add(subview: slider)</span><br><span class="line">    alert.add(spacing: <span class="number">24</span>)</span><br><span class="line">    alert.add(action: <span class="string">&quot;取消&quot;</span>, style: .gray)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin img-wrap"><div class="frame-wrap" id="iphone11"><img class="img" src="/assets/wiki/prohud/alert/custom.png"/><div class="frame"></div></div></div><h2 id="Sheet（底部操作表）"><a href="#Sheet（底部操作表）" class="headerlink" title="Sheet（底部操作表）"></a>Sheet（底部操作表）</h2><p>操作表控件，用于弱阻塞性交互。显示区域为从屏幕底部向上弹出的新图层，可以放置丰富的内容，自由度较高。</p><div class="tag-plugin img-wrap"><div class="frame-wrap" id="iphone11"focus="bottom"><img class="img" src="/assets/wiki/prohud/sheet/regular.jpg"/><div class="frame"></div></div></div><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>操作表控件空间较大，可以放置更多的文字、按钮和其它任何控件。</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Sheet</span> &#123; sheet <span class="keyword">in</span></span><br><span class="line">    sheet.add(title: <span class="string">&quot;ProHUD&quot;</span>)</span><br><span class="line">    sheet.add(subTitle: <span class="string">&quot;什么是操作表控件&quot;</span>)</span><br><span class="line">    sheet.add(message: <span class="string">&quot;操作表控件，用于弱阻塞性交互。显示区域为从屏幕底部向上弹出的新图层，可以放置丰富的内容，自由度较高。&quot;</span>)</span><br><span class="line">    sheet.add(spacing: <span class="number">24</span>)</span><br><span class="line">    sheet.add(action: <span class="string">&quot;确认&quot;</span>, style: .destructive) &#123; sheet <span class="keyword">in</span></span><br><span class="line">        <span class="type">Alert</span>(.confirm) &#123; alert <span class="keyword">in</span></span><br><span class="line">            alert.vm.title <span class="operator">=</span> <span class="string">&quot;处理点击事件&quot;</span></span><br><span class="line">            alert.add(action: <span class="string">&quot;我知道了&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sheet.add(action: <span class="string">&quot;取消&quot;</span>, style: .gray)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样支持添加任意其它视图：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Sheet</span> &#123; sheet <span class="keyword">in</span></span><br><span class="line">    sheet.add(title: <span class="string">&quot;ProHUD&quot;</span>)</span><br><span class="line">    <span class="comment">// 图片</span></span><br><span class="line">    <span class="keyword">let</span> imgv <span class="operator">=</span> <span class="type">UIImageView</span>(image: <span class="type">UIImage</span>(named: <span class="string">&quot;landscape&quot;</span>))</span><br><span class="line">    imgv.contentMode <span class="operator">=</span> .scaleAspectFill</span><br><span class="line">    imgv.clipsToBounds <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    imgv.layer.cornerRadiusWithContinuous <span class="operator">=</span> <span class="number">16</span></span><br><span class="line">    sheet.add(subview: imgv).snp.makeConstraints &#123; make <span class="keyword">in</span></span><br><span class="line">        make.height.equalTo(<span class="number">200</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// seg</span></span><br><span class="line">    <span class="keyword">let</span> seg <span class="operator">=</span> <span class="type">UISegmentedControl</span>(items: [<span class="string">&quot;开发&quot;</span>, <span class="string">&quot;测试&quot;</span>, <span class="string">&quot;预发&quot;</span>, <span class="string">&quot;生产&quot;</span>])</span><br><span class="line">    seg.selectedSegmentIndex <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    sheet.add(subview: seg).snp.makeConstraints &#123; make <span class="keyword">in</span></span><br><span class="line">        make.height.equalTo(<span class="number">40</span>)</span><br><span class="line">        make.width.equalTo(<span class="number">400</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// slider</span></span><br><span class="line">    <span class="keyword">let</span> slider <span class="operator">=</span> <span class="type">UISlider</span>()</span><br><span class="line">    slider.minimumValue <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">    slider.maximumValue <span class="operator">=</span> <span class="number">100</span></span><br><span class="line">    slider.value <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">    sheet.add(subview: slider).snp.makeConstraints &#123; make <span class="keyword">in</span></span><br><span class="line">        make.height.equalTo(<span class="number">50</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin img-wrap"><div class="frame-wrap" id="iphone11"focus="bottom"><img class="img" src="/assets/wiki/prohud/sheet/custom.jpg"/><div class="frame"></div></div></div><h3 id="拦截背景点击事件"><a href="#拦截背景点击事件" class="headerlink" title="拦截背景点击事件"></a>拦截背景点击事件</h3><p>有时候如果不希望点击背景直接<code>pop</code>掉，可以实现 <code>onTappedBackground</code> 以拦截背景点击事件</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Sheet</span> &#123; sheet <span class="keyword">in</span></span><br><span class="line">    sheet.add(title: <span class="string">&quot;ProHUD&quot;</span>)</span><br><span class="line">    sheet.add(message: <span class="string">&quot;点击背景将不会dismiss，必须在下方做出选择才能关掉&quot;</span>)</span><br><span class="line">    sheet.add(spacing: <span class="number">24</span>)</span><br><span class="line">    sheet.add(action: <span class="string">&quot;确认&quot;</span>)</span><br><span class="line">    sheet.add(action: <span class="string">&quot;取消&quot;</span>, style: .gray)</span><br><span class="line">&#125; onTappedBackground: &#123; sheet <span class="keyword">in</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;点击了背景&quot;</span>)</span><br><span class="line">    <span class="type">Toast</span>.lazyPush(identifier: <span class="string">&quot;alert&quot;</span>) &#123; toast <span class="keyword">in</span></span><br><span class="line">        toast.vm <span class="operator">=</span> .error</span><br><span class="line">        toast.vm.title <span class="operator">=</span> <span class="string">&quot;点击了背景&quot;</span></span><br><span class="line">        toast.vm.message <span class="operator">=</span> <span class="string">&quot;点击背景将不会dismiss，必须在下方做出选择才能关掉&quot;</span></span><br><span class="line">        toast.vm.duration <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定制属于自己的UI"><a href="#定制属于自己的UI" class="headerlink" title="定制属于自己的UI"></a>定制属于自己的UI</h2><h3 id="个性化配置"><a href="#个性化配置" class="headerlink" title="个性化配置"></a>个性化配置</h3><p>ProHUD内置的布局也支持丰富的个性化参数，例如：</p><ul><li>标题、正文、按钮字体字号</li><li>背景颜色、模糊效果</li><li>文字颜色</li><li>图标大小</li><li>卡片圆角</li><li>Sheet组件卡片距离屏幕的边距</li></ul><p>具体请探索 <code>ProHUD.Configuration</code> 类代码。</p><h3 id="完全自定义布局"><a href="#完全自定义布局" class="headerlink" title="完全自定义布局"></a>完全自定义布局</h3><p>ProHUD支持完全自定义布局，即将整个容器交给使用者来布局，在 <code>Alert.Configuration.shared</code> 中配置了 <code>reloadData</code> 规则之后，实例在显示前以及更新内容时都会进入此函数，执行自定义的 <code>reloadData</code> 代码。也可以指定部分 <code>identifier</code> 走自定义布局代码，其余走内置布局代码，例如：</p><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Alert</span>.<span class="type">Configuration</span>.shared &#123; config <span class="keyword">in</span></span><br><span class="line">    config.reloadData &#123; vc <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">if</span> vc.identifier <span class="operator">==</span> <span class="string">&quot;custom&quot;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">Alert</span> &#123; alert <span class="keyword">in</span></span><br><span class="line">    alert.identifier <span class="operator">=</span> <span class="string">&quot;custom&quot;</span></span><br><span class="line">    alert.contentView.backgroundColor <span class="operator">=</span> .systemYellow</span><br><span class="line">    alert.view.addSubview(alert.contentView)</span><br><span class="line">    alert.contentView.layer.cornerRadiusWithContinuous <span class="operator">=</span> <span class="number">32</span></span><br><span class="line">    alert.contentView.snp.makeConstraints &#123; make <span class="keyword">in</span></span><br><span class="line">        make.width.equalTo(<span class="type">UIScreen</span>.main.bounds.width <span class="operator">-</span> <span class="number">100</span>)</span><br><span class="line">        make.height.equalTo(<span class="type">UIScreen</span>.main.bounds.height <span class="operator">-</span> <span class="number">200</span>)</span><br><span class="line">        make.center.equalToSuperview()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: .now() <span class="operator">+</span> <span class="number">2</span>) &#123;</span><br><span class="line">        alert.pop()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin img-wrap"><div class="frame-wrap" id="iphone11"focus="bottom"><img class="img" src="/assets/wiki/prohud/sheet/background.jpg"/><div class="frame"></div></div></div><h2 id="横屏和iPad适配"><a href="#横屏和iPad适配" class="headerlink" title="横屏和iPad适配"></a>横屏和iPad适配</h2><div class="tag-plugin swiper-container" id="swiper-api" width="max"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="/assets/wiki/prohud/toast/landscape.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/prohud/sheet/landscape.png"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>一个简约的在线简历主题</title>
      <link href="/wiki/resume/index.html"/>
      <url>/wiki/resume/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin link dis-select"><a class="link-card plain" title="在线演示" href="https://resume.js.org/zh-cn/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">在线演示</span><span class="cap link fs12">https://resume.js.org/zh-cn/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin link dis-select"><a class="link-card plain" title="主题源码" href="https://github.com/xaoxuu/hexo-theme-resume" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">主题源码</span><span class="cap link fs12">https://github.com/xaoxuu/hexo-theme-resume</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><span id="more"></span><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><ol><li><p>下载 <a href="https://github.com/xaoxuu/resume-docs">示例源码</a> 的整个仓库代码。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xaoxuu/resume-docs</span><br></pre></td></tr></table></figure></li><li><p>然后安装必要的依赖包</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure></li></ol><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p>创建全新的博客，通过 <code>npm</code> 命令安装：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-resume</span><br></pre></td></tr></table></figure><p>然后删除多余的依赖包（重要），打开 <code>package.json</code> 复制并全部替换为以下内容：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo server&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node pre-deploy.js &amp;&amp; hexo clean &amp;&amp; hexo generate&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run build &amp;&amp; hexo deploy&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=8.9.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-all-minifier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.5.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-autonofollow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-fs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-lazyload-image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-offline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后输入 <code>npm i</code> 安装依赖包。</p><h2 id="编写简历"><a href="#编写简历" class="headerlink" title="编写简历"></a>编写简历</h2><p>打开 <code>index.md</code> 文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">resume-docs/src/index.md</span><br></pre></td></tr></table></figure><p>按照示例中的提示语将信息修改为自己的。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>打开站点配置文件：</p><figure class="highlight yaml"><figcaption><span>resume-docs/_config.yaml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="comment"># 项目路径</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">update</span> <span class="string">pages</span></span><br></pre></td></tr></table></figure><p>Hexo官方教程：<a href="https://hexo.io/zh-cn/docs/one-command-deployment">https://hexo.io/zh-cn/docs/one-command-deployment</a></p><div class="tag-plugin note" ><div class="title"><strong>小提示</strong></div><div class="body"><p>图标从这里找：<a href="https://fontawesome.com/">https://fontawesome.com/</a><br>如果需要更多DIY，请自行修改源码。<br>简历主题不支持评论，如果需要，请自行集成。</p></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>蓝牙智能灯毕业设计项目</title>
      <link href="/wiki/smartlamp/index.html"/>
      <url>/wiki/smartlamp/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin swiper-container" id="swiper-api"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="/assets/wiki/smartlamp/screenshot01.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/smartlamp/screenshot02.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/smartlamp/screenshot03.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/smartlamp/screenshot04.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/smartlamp/screenshot05.png"></div><div class="swiper-slide"><img no-lazy src="/assets/wiki/smartlamp/screenshot06.png"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><span id="more"></span><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p><strong>调节亮度、颜色、定时关闭</strong></p><p>主页是核心功能，实现一键连接蓝牙灯、自由调节颜色、亮度、设置定时关灯等功能。<br>情景页是保存用户设置的情景模式，可以根据使用场景不同快速切换至对应的工作模式。<br>设备页可以管理多台蓝牙灯。<br>发现页提供一些智能家居相关资讯。</p><h2 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h2><h3 id="ATTitleBar"><a href="#ATTitleBar" class="headerlink" title="ATTitleBar"></a>ATTitleBar</h3><ul><li>支持横向滑动切换tab，并具有点击涟漪效果。</li><li>titlebar是在app中广泛应用的一种tab设计。我写的这个小框架模仿Google的Material Design设计，涟漪效果代码由MaterialControls框架改写。</li><li>页面较多时采用类似tableview的懒加载模式，只加载需要显示的几页，减少内存占用，提高流畅度。</li></ul><h3 id="ReactiveCocoa"><a href="#ReactiveCocoa" class="headerlink" title="ReactiveCocoa"></a>ReactiveCocoa</h3><ul><li>本项目大量使用了ReactiveCocoa框架进行响应式编程，大幅简化代码、提高可读性。</li><li>RAC的订阅机制使得一对多传值有了新的选择，如蓝牙中心设备。</li><li>RAC的信号监听机制使得我更容易根据需要定制个性化控件。如带翻转、旋转效果的tabbar、带缩放和回弹效果的slider等，使app的界面栩栩如生。</li></ul><h3 id="CBCentralManager"><a href="#CBCentralManager" class="headerlink" title="CBCentralManager"></a>CBCentralManager</h3><ul><li>CBCentralManager是蓝牙类app的核心，本项目在编写这部分代码时使用了链式语法进行封装，外界调用起来十分方便。</li></ul><h3 id="ATCarouselView"><a href="#ATCarouselView" class="headerlink" title="ATCarouselView"></a>ATCarouselView</h3><ul><li>轮播图也是在app中广泛存在的一种自定义控件，我将这部分代码封装至ATKit中，以Pods导入方式使用，便于维护和扩展，同时也使得本项目代码更加简洁。</li><li>部分app的轮播图可以根据下方列表的滑动而改变高度或者添加蒙版效果，我目前实现了改变高度的功能。</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>安装与更新</title>
      <link href="/wiki/stellar/index.html"/>
      <url>/wiki/stellar/index.html</url>
      
        <content type="html"><![CDATA[<p>Stellar 是一个内置文档系统的简约商务风 Hexo 主题，支持丰富的标签和动态数据组件，帮助您简单从容地应对各种表达需求，十分推荐内容创作者使用 Stellar 开始您全新的博客之旅。</p><details class="tag-plugin folding" ><summary><span>了解 Stellar 的设计理念</span></summary><div class="body"><p><strong>“真正的简约远不止删繁就简，而是在纷繁中建立秩序。”</strong></p><p>人的注意力是有限的，要提高有效信息的醒目程度，就必须降低不重要信息醒目程度，删除所有无效信息。</p><p><strong>降低视觉密度</strong></p><ul><li>增加留白，增加间距。</li><li>减少颜色丰富度，大面积出现的是中性色，彩色必须有其特殊意义，意义相同的元素使用同一种颜色。</li></ul><p><strong>提高有效信息优先级</strong></p><ul><li>文章标题永远是最大的，对比度最高的</li><li>不可交互的不重要的小标题（如侧边栏某个插件的标题）降低对比度</li><li>与文章相关的不重要的小标题，使用小号字体</li></ul><p><strong>删掉无效信息</strong></p><ul><li>文章标签、字数、阅读量、评论数</li><li>网站访问量、字数、搭建时间</li><li>全局播放器（除了特殊文章）</li></ul></div></details><h2 id="开始前的准备工作"><a href="#开始前的准备工作" class="headerlink" title="开始前的准备工作"></a>开始前的准备工作</h2><p>尽管我们致力于降低使用门槛，但是自建独立博客仍然需要一定的相关知识，<a href="https://www.runoob.com/markdown/md-tutorial.html">markdown</a> 常用语法是必须要掌握的，除此之外，您还需要知道 <code>yaml</code> 文件格式、简单的 <code>git</code> 知识，最最重要的是，遇到问题知道该如何高效地寻找答案：</p><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>翻阅和搜索文档</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>搜索 issues 中是否已经有解决办法</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>如果没有，新建 issue 并按照要求进行操作，详尽地描述您遇到的问题</span></div><p><strong>如果您没有使用过 Hexo 也不要着急，我十分建议您去通读一遍 <a href="https://hexo.io/zh-cn/docs/">Hexo</a> 中文文档</strong>。</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://hexo.io/zh-cn/docs/</span><span class="cap link fs12">https://hexo.io/zh-cn/docs/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><p>此外，如果您从旧版本更新或者其它主题迁移，请确保环境版本不要太低，否则会产生兼容性问题：</p><figure class="highlight yaml"><figcaption><span>建议的版本</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Hexo:</span> <span class="number">5.4</span><span class="number">.0</span> <span class="string">~</span> <span class="number">6.3</span><span class="number">.0</span></span><br><span class="line"><span class="attr">hexo-cli:</span> <span class="number">4.3</span><span class="number">.0</span> <span class="string">~</span> <span class="string">latest</span></span><br><span class="line"><span class="attr">node.js:</span> <span class="number">14.17</span><span class="number">.3</span> <span class="string">～</span> <span class="number">18.12</span><span class="number">.0</span> <span class="comment"># 建议选择 LTS 版本，过高的版本 hexo 还没有进行兼容。</span></span><br><span class="line"><span class="attr">npm:</span> <span class="number">6.14</span><span class="number">.13</span> <span class="string">~</span> <span class="number">8.19</span><span class="number">.2</span></span><br></pre></td></tr></table></figure><h2 id="安装与更新"><a href="#安装与更新" class="headerlink" title="安装与更新"></a>安装与更新</h2><div class="tag-plugin note" ><div class="body"><div class="tag-plugin tabs"id="tab_14""><ul class="nav-tabs"><li class="tab active"><a href="#tab_14-1">稳定版</a></li><li class="tab"><a href="#tab_14-2">最新版</a></li><li class="tab"><a href="#tab_14-3">自定义</a></li><li class="tab"><a href="#tab_14-4">引用源码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_14-1"><p><strong>安装方法</strong></p><ol><li><p>在终端中输入：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_26" value="npm i hexo-theme-stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_26&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>在 <code>blog/_config.yml</code> 文件中找到并修改：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_27" value="theme: stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_27&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ol><p><strong>更新方法</strong></p><ol><li><p>在 package.json 中修改 stellar 的版本号，然后执行：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_28" value="npm i"><button class="copy-btn" onclick="util.copy(&quot;copy_28&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>阅读 <a href="https://github.com/xaoxuu/hexo-theme-stellar/releases">更新日志</a> 进行迁移操作。</p></li></ol><div class="tag-plugin note" color="green"><div class="title"><strong>适用范围</strong></div><div class="body"><p>稳定版适用于以内容创作为主，不需要自定义主题，追求稳定和可靠性的用户。</p></div></div></div><div class="tab-pane" id="tab_14-2"><p><strong>安装方法</strong></p><ol><li><p>把 Stellar 主题仓库添加为博客仓库的子模块</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_29" value="git submodule add https://github.com/xaoxuu/hexo-theme-stellar.git themes/stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_29&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>在 <code>blog/_config.yml</code> 文件中找到并修改：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_30" value="theme: stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_30&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ol><p><strong>更新方法</strong></p><ol><li><p>打开终端并进入主题文件夹，执行：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_31" value="git pull"><button class="copy-btn" onclick="util.copy(&quot;copy_31&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>阅读 <a href="https://github.com/xaoxuu/hexo-theme-stellar/releases">更新日志</a> 进行迁移操作。</p></li></ol><div class="tag-plugin note" color="blue"><div class="title"><strong>适用范围</strong></div><div class="body"><p>最新版适用于以内容创作为主，不需要自定义主题，追求新特性的用户。</p></div></div></div><div class="tab-pane" id="tab_14-3"><p><strong>安装方法</strong></p><ol><li><p>把 Stellar 主题仓库 <a href="https://github.com/xaoxuu/hexo-theme-stellar">fork</a> 到您的 GitHub 账号下</p></li><li><p>把您 fork 的 Stellar 主题仓库添加为博客仓库的子模块</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_32" value="git submodule add https://github.com/#yourname#/hexo-theme-stellar.git themes/stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_32&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>在 <code>blog/_config.yml</code> 文件中找到并修改：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_33" value="theme: stellar"><button class="copy-btn" onclick="util.copy(&quot;copy_33&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li></ol><p><strong>更新方法</strong></p><ol><li><p>在您 fork 的 Stellar 主题仓库打开终端，执行：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_34" value="git pull"><button class="copy-btn" onclick="util.copy(&quot;copy_34&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>阅读 <a href="https://github.com/xaoxuu/hexo-theme-stellar/releases">更新日志</a> 进行迁移操作。</p></li></ol><div class="tag-plugin note" color="yellow"><div class="title"><strong>适用范围</strong></div><div class="body"><p>自定义版适用于对主题有自定义需求，且掌握了一定的前端知识和动手能力的用户。</p></div></div><p><strong>自动更新💡</strong></p><p>安装并授权 <a href="https://github.com/apps/pull">pull</a> 这个机器人，当源仓库发生更新时，机器人会自动提 <code>PR</code> 到自己 <code>fork</code> 的仓库中。</p></div><div class="tab-pane" id="tab_14-4"><p><strong>安装方法</strong></p><p>下载源码放到 <code>themes/</code> 文件夹下面试用。</p><div class="tag-plugin note" color="red"><div class="title"><strong>适用范围</strong></div><div class="body"><p>仅试用，无法获得更新。</p></div></div></div></div></div></div></div><h2 id="开源许可协议"><a href="#开源许可协议" class="headerlink" title="开源许可协议"></a>开源许可协议</h2><p class="tag-plugin quot" type="text">项目中的许可声明文件应包含在所有副本中</p><p>本主题是由 <a href="https://github.com/xaoxuu">@xaoxuu</a> 设计和开发，使用 <a href="https://fastly.jsdelivr.net/gh/xaoxuu/hexo-theme-stellar/LICENSE">MIT License</a> 开源许可协议进行授权，拷贝、分享或基于此进行创作时请遵守协议内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MIT License</span><br><span class="line"></span><br><span class="line">Copyright (c) 2021 xaoxuu</span><br><span class="line"></span><br><span class="line">Permission is hereby granted, free of charge, to any person obtaining a copy</span><br><span class="line">of this software and associated documentation files (the &quot;Software&quot;), to deal</span><br><span class="line">in the Software without restriction, including without limitation the rights</span><br><span class="line">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span><br><span class="line">copies of the Software, and to permit persons to whom the Software is</span><br><span class="line">furnished to do so, subject to the following conditions:</span><br><span class="line"></span><br><span class="line">The above copyright notice and this permission notice shall be included in all</span><br><span class="line">copies or substantial portions of the Software.</span><br><span class="line"></span><br><span class="line">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span><br><span class="line">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span><br><span class="line">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span><br><span class="line">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span><br><span class="line">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span><br><span class="line">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span><br><span class="line">SOFTWARE.</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>实用的ObjC安全对象类型转换库</title>
      <link href="/wiki/valuex/index.html"/>
      <url>/wiki/valuex/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>有效避免后台返回数据类型异常导致程序崩溃</li><li>快速由已知对象得到期望的对象类型</li></ul><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><figure class="highlight ruby"><figcaption><span>在 Podfile 中添加：</span></figcaption><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;ValueX&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>然后执行：</span></figcaption><table><tr><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><h3 id="确保类型正确"><a href="#确保类型正确" class="headerlink" title="确保类型正确"></a>确保类型正确</h3><p>以字符串为例，通过 <code>NSSafeString(obj)</code> 拿到的值如果不为空，则其类型一定是 <code>NSString</code>，不会是 <code>NSNumber</code> 或者 <code>NSNull</code>。</p><details class="tag-plugin folding" child="codeblock" open><summary><span>测试代码</span></summary><div class="body"><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)test01 &#123;</span><br><span class="line">    <span class="built_in">NSDictionary</span> *d1 = @&#123;<span class="string">@&quot;name&quot;</span>: <span class="string">@&quot;Mr. Xu&quot;</span>, <span class="string">@&quot;info&quot;</span>: <span class="string">@&quot;&#123;\n    \&quot;age\&quot; : \&quot;23\&quot;,\n    \&quot;userId\&quot; : \&quot;123123123\&quot;,\n    \&quot;deviceId\&quot; : \&quot;&lt;null&gt;\&quot;\n&#125;&quot;</span>&#125;;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;\nd1: %@&quot;</span>, d1);</span><br><span class="line">    <span class="built_in">NSDictionary</span> *d11 = <span class="built_in">NSSafeDictionary</span>([d1 dictionaryForKey:<span class="string">@&quot;name&quot;</span>]);</span><br><span class="line">    <span class="built_in">NSDictionary</span> *d12 = <span class="built_in">NSSafeDictionary</span>([d1 dictionaryForKey:<span class="string">@&quot;info&quot;</span>]);</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;\n d11: %@,\n d12: %@&quot;</span>, d11, d12);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSDictionary</span> *d2 = @&#123;<span class="string">@&quot;age&quot;</span>: @<span class="number">23</span>, <span class="string">@&quot;userId&quot;</span>: <span class="string">@&quot;123123123&quot;</span>, <span class="string">@&quot;deviceId&quot;</span>: <span class="string">@&quot;&lt;null&gt;&quot;</span>&#125;;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;\nd2: %@&quot;</span>, d2);</span><br><span class="line">    <span class="built_in">NSNumber</span> *d21 = [d2 numberForKey:<span class="string">@&quot;userId&quot;</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *d22 = [d2 stringForKey:<span class="string">@&quot;userId&quot;</span>];</span><br><span class="line">    <span class="built_in">NSNumber</span> *d23 = [d2 numberForKey:<span class="string">@&quot;age&quot;</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *d24 = [d2 stringForKey:<span class="string">@&quot;age&quot;</span>];</span><br><span class="line">    <span class="built_in">NSNumber</span> *d25 = [d2 numberForKey:<span class="string">@&quot;deviceId&quot;</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *d26 = [d2 stringForKey:<span class="string">@&quot;deviceId&quot;</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;\n d21: %@,\n d22: %@,\n d23: %@,\n d24: %@,\n d25: %@,\n d26: %@&quot;</span>, d21, d22, d23, d24, d25, d26);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><h3 id="安全地获取字典值"><a href="#安全地获取字典值" class="headerlink" title="安全地获取字典值"></a>安全地获取字典值</h3><p>字典中的值存在很多不确定性，例如 <code>age</code> 可能是 <code>NSNumber</code>，也可能是 <code>NSNull</code> 的实例对象。</p><p>通过 <code>[dict numberForKey:@&quot;age&quot;]</code> 得到的值，如果不为空，则一定是 <code>NSNumber</code> 的实例对象。</p><details class="tag-plugin folding" child="codeblock" open><summary><span>测试代码</span></summary><div class="body"><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 测试: 从后台接收到字典</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param value 后台返回的字典数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="type">void</span>)test1:(<span class="built_in">NSDictionary</span> *)value &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;value: %@&quot;</span>, value);</span><br><span class="line">    <span class="comment">// 真实类型并不一定是NSDictionary，要确保拿来用的时候一定是NSDictionary</span></span><br><span class="line">    VXObject *vx = ValueX(value);</span><br><span class="line">    <span class="built_in">NSDictionary</span> *dict = ValueX(value).dictionaryValue;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;ValueX(value).dictionaryValue: %@&quot;</span>, dict);</span><br><span class="line">    <span class="comment">// 获取其中的某个值</span></span><br><span class="line">    <span class="built_in">NSNumber</span> *deviceId = [dict numberForKey:<span class="string">@&quot;deviceId&quot;</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *userId = [dict stringForKey:<span class="string">@&quot;userId&quot;</span>];</span><br><span class="line">    <span class="built_in">NSNumber</span> *age = [dict numberForKey:<span class="string">@&quot;age&quot;</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;deviceId: %@, userId: %@, age: %@&quot;</span>, deviceId, userId, age);</span><br><span class="line">    <span class="built_in">NSString</span> *str = vx.stringValue;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;ValueX(value).stringValue: %@&quot;</span>, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><p>如果我们已知一个字典，想要得到它的Json字符串，只需要通过 <code>ValueX(dict).stringValue</code> 获取。</p><p>同理，只要是能互相转换的值均能通过类似的格式一行代码获取，如果不能转换，得到的值是 <code>nil</code>。</p><details class="tag-plugin folding" child="codeblock" open><summary><span>测试代码</span></summary><div class="body"><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">- (<span class="type">void</span>)test2:(<span class="built_in">NSDictionary</span> *)value &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;value: %@&quot;</span>, value);</span><br><span class="line">    <span class="comment">// 真实类型并不一定是NSDictionary，要确保拿来用的时候一定是NSDictionary</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dict = ValueX(value).dictionaryValue;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;ValueX(value).dictionaryValue: %@&quot;</span>, dict);</span><br><span class="line">    <span class="comment">// 获取其中的某个值</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *info = [dict dictionaryForKey:<span class="string">@&quot;info&quot;</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@&quot;info: %@&quot;</span>, info);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Volantis for Hexo</title>
      <link href="/wiki/volantis/index.html"/>
      <url>/wiki/volantis/index.html</url>
      
        <content type="html"><![CDATA[<p>Volantis 是一个高度模块化的 Hexo 主题，拥有丰富的内置标签和第三方插件支持，拥有庞大的开发者团队和年轻活跃的社区文化。得益于其强大的模块化特性，您可以轻松搭建一个极简风格的轻博客，也可以仿照社区主页搭建一个多人协作的、包含 wiki 的综合型站点。</p><p>Volantis <mark class="tag-plugin mark" color="dark">X</mark> 是 Volantis 社区文化的符号。在过去的<mark class="tag-plugin mark" color="dark">五</mark>年里，<mark class="tag-plugin mark" color="dark">40+</mark> 开发者为其贡献了 <mark class="tag-plugin mark" color="dark">2200+</mark> commits，数以千计的用户为瓦兰提斯点亮了星星，<mark class="tag-plugin mark" color="dark">60+</mark> 来自各行各业的热情的小伙伴们参与了社区建设，因为大家的参与，Volantis 变得越来越强大和富有生命力。</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://volantis.js.org" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://volantis.js.org</span><span class="cap link fs12">https://volantis.js.org</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>尽管我们致力于降低使用门槛，但是自建独立博客仍然需要一定的相关知识，<a href="https://www.runoob.com/markdown/md-tutorial.html">markdown</a> 常用语法是必须要掌握的，除此之外，您还需要知道 <code>yaml</code> 文件格式、简单的 <code>git</code> 知识，最最重要的是，遇到问题知道该如何高效地寻找答案：</p><ol><li>翻阅和搜索文档</li><li>搜索 issues 中是否已经有解决办法</li><li>如果没有，新建 issue 并按照要求进行操作，详尽地描述您遇到的问题</li></ol><p>如果您没有使用过 Hexo 也不要着急，可以先通读一遍 <a href="https://hexo.io/zh-cn/docs/">Hexo</a> 中文文档，要想使用地得心应手，最好参照团队提供的开源项目的源码进行搭建：</p><p><a href="https://github.com/volantis-x/demo">Demo 源码</a>｜<a href="https://github.com/volantis-x/community">官网源码</a></p><p>如果您从旧版本更新或者其它主题迁移，请确保环境版本不要太低，否则会产生兼容性问题。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Hexo:</span> <span class="number">5.3</span><span class="number">.0</span></span><br><span class="line"><span class="attr">hexo-cli:</span> <span class="number">4.2</span><span class="number">.0</span></span><br><span class="line"><span class="attr">node.js:</span> <span class="number">14.15</span><span class="number">.4</span> <span class="string">LTS</span> <span class="comment"># 选 LTS 就行，过高的版本 hexo 还没有进行兼容。</span></span><br><span class="line"><span class="attr">npm:</span> <span class="number">6.14</span><span class="number">.10</span> <span class="string">LTS</span></span><br></pre></td></tr></table></figure><h2 id="快速体验"><a href="#快速体验" class="headerlink" title="快速体验"></a>快速体验</h2><p>如果您已经具备环境配置条件，可以在终端中输入下面这行代码，稍等片刻就可以看到示例站点已经运行起来了：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_35" value="git clone https://github.com/volantis-x/demo.git && cd demo && npm i && hexo s"><button class="copy-btn" onclick="util.copy(&quot;copy_35&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><ul><li><p>如果您是 Mac 用户，可以在博客路径打开终端，下载安装并应用主题：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_36" value="curl -s https://volantis.js.org/start | sh"><button class="copy-btn" onclick="util.copy(&quot;copy_36&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>如果您是内容创作者，推荐使用 npm 稳定版本：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_37" value="npm i hexo-theme-volantis"><button class="copy-btn" onclick="util.copy(&quot;copy_37&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></li><li><p>如果您需要定制主题，请 <a href="https://github.com/volantis-x/hexo-theme-volantis/">fork</a> 主题，然后添加为子模块，详细教程如下：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="如何正确地更新主题（Fork篇）" href="https://github.com/volantis-x/hexo-theme-volantis/issues/459#issuecomment-679465906" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">如何正确地更新主题（Fork篇）</span><span class="cap link fs12">https://github.com/volantis-x/hexo-theme-volantis/issues/459#issuecomment-679465906</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin note" color="orange"><div class="title"><strong>温馨提示</strong></div><div class="body"><p>请一定不要直接下载源码并进行修改使用，因为这样会导致<strong>失去版本管理系统</strong>且<strong>无法获得更新</strong>。</p></div></div></li></ul><h2 id="配置与使用"><a href="#配置与使用" class="headerlink" title="配置与使用"></a>配置与使用</h2><p>完整而详细的文档请移步 Volantis 社区查看：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://volantis.js.org/v4/site-settings/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://volantis.js.org/v4/site-settings/</span><span class="cap link fs12">https://volantis.js.org/v4/site-settings/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><div class="tag-plugin image"><div class="image-bg"><img src="https://api.star-history.com/svg?repos=volantis-x/hexo-theme-volantis&type=Date"/></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>[blog] 管理与发布博客的脚本</title>
      <link href="/wiki/cloud-shell/blog/index.html"/>
      <url>/wiki/cloud-shell/blog/index.html</url>
      
        <content type="html"><![CDATA[<p>Mac 用户可以在终端体验一下：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_38" value="curl -s https://sh.xaox.cc/install | sh -s blog && blog init"><button class="copy-btn" onclick="util.copy(&quot;copy_38&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>这条指令可以自动检测并安装必要环境和依赖，并初始化一个博客。</p><h2 id="下载并安装脚本"><a href="#下载并安装脚本" class="headerlink" title="下载并安装脚本"></a>下载并安装脚本</h2><blockquote><p>如果您已经执行过上面那条命令，就已经安装过了，可以跳过此步骤。</p></blockquote><p>打开终端，输入这行命令：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_39" value="curl -s https://sh.xaox.cc/install | sh -s blog"><button class="copy-btn" onclick="util.copy(&quot;copy_39&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>如需安装指定分支或版本，在后面加上分支名或版本号即可，例如：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_40" value="curl -s https://sh.xaox.cc/install | sh -s blog main"><button class="copy-btn" onclick="util.copy(&quot;copy_40&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><blockquote><p>在忘记功能的时候可以输入 <code>blog help</code> 以打开此页面查看脚本所有支持的指令。</p></blockquote><h3 id="快速搭建环境"><a href="#快速搭建环境" class="headerlink" title="快速搭建环境"></a>快速搭建环境</h3><p>如果您重装了系统或者更换了电脑，可以 copy 这条命令迅速完成环境的搭建：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_41" value="curl -s https://sh.xaox.cc/install | sh -s blog check"><button class="copy-btn" onclick="util.copy(&quot;copy_41&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h3 id="新用户快速搭建博客"><a href="#新用户快速搭建博客" class="headerlink" title="新用户快速搭建博客"></a>新用户快速搭建博客</h3><p>如果您从未使用过 hexo 博客，那么可以执行这条命令完成初始化并看到效果：</p><div class="tag-plugin tabs" align="center"id="tab_15""><ul class="nav-tabs"><li class="tab active"><a href="#tab_15-1">已安装blog脚本</a></li><li class="tab"><a href="#tab_15-2">未安装blog脚本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_15-1"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_42" value="blog init"><button class="copy-btn" onclick="util.copy(&quot;copy_42&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div><div class="tab-pane" id="tab_15-2"><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_43" value="curl -s https://sh.xaox.cc/install | sh -s blog && blog init"><button class="copy-btn" onclick="util.copy(&quot;copy_43&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div></div></div></div><p>脚本会依次执行以下这些操作：</p><ol><li>检测 node.js 环境，如果没有就安装。</li><li>检测 hexo 环境，如果没有就安装。</li><li>输入自定义博客名，在当前目录执行初始化。</li><li>安装 Stellar 主题。</li><li>安装所有依赖包。</li><li>执行 hexo s 运行博客。</li><li>打开 localhost:4000 预览博客。</li></ol><div class="tag-plugin note" color="yellow"><div class="title"><strong>注意</strong></div><div class="body"><p>安装 node.js 或者 hexo 的时候需要输入一次<strong>本机密码</strong>，别忘了哦。搭建博客的时候你需要输入<strong>博客名</strong>，其他时间就可以坐和放宽了。</p></div></div><h3 id="使用脚本快速更新博客"><a href="#使用脚本快速更新博客" class="headerlink" title="使用脚本快速更新博客"></a>使用脚本快速更新博客</h3><p>有时候如果修改了 <code>_config.yml</code> 是需要重新启动博客的，有些参数甚至需要 <code>clean</code> 之后重启才能生效，这时候你只需要输入：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_44" value="blog cs"><button class="copy-btn" onclick="util.copy(&quot;copy_44&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>就执行 <code>hexo clean &amp;&amp; hexo server</code> 了。</p><p>如果你已经修改完毕，需要发布更新，可以输入：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_45" value="blog cgd"><button class="copy-btn" onclick="util.copy(&quot;copy_45&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>脚本就会执行 <code>hexo clean</code>、<code>hexo generate</code>、<code>hexo deploy</code>，然后执行一系列的 git 命令把源码的更新提交至远程仓库。</p><h2 id="所有支持的命令"><a href="#所有支持的命令" class="headerlink" title="所有支持的命令"></a>所有支持的命令</h2><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left"><code>blog init</code></td><td align="left">检查并安装环境，然后创建并运行博客</td></tr><tr><td align="left"><code>blog test</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog test stellar</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog test vlts</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog test 主题名</code></td><td align="left">检查并安装环境，然后创建并运行单元测试博客（用于查看未经修改的主题效果）</td></tr><tr><td align="left"><code>blog i node</code></td><td align="left">安装 node.js</td></tr><tr><td align="left"><code>blog i hexo</code></td><td align="left">安装 hexo</td></tr><tr><td align="left"><code>blog i stellar</code></td><td align="left">安装 stellar 主题，同理换成其它主题名字都可以</td></tr><tr><td align="left"><code>blog i 主题名</code></td><td align="left">安装任意主题</td></tr><tr><td align="left"><code>blog c</code></td><td align="left">同 <code>hexo clean</code> 然后打开 <code>localhost:4000</code></td></tr><tr><td align="left"><code>blog cs</code></td><td align="left">同 <code>hexo clean &amp;&amp; hexo g</code> 然后打开 <code>localhost:4000</code></td></tr><tr><td align="left"><code>blog cgd</code></td><td align="left">同 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d &amp;&amp; git add --all &amp;&amp; git commit &amp;&amp; git push origin</code></td></tr><tr><td align="left"><code>blog help</code></td><td align="left">打开文档页面</td></tr></tbody></table><blockquote><p>其中，上述的「主题名」需要是发布到 <a href="https://www.npmjs.com/">npmjs.org</a> 的主题，匹配到 <code>hexo-theme-主题名</code> 的部分。</p></blockquote>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>[tag] 快速发布 git 版本的脚本</title>
      <link href="/wiki/cloud-shell/tag/index.html"/>
      <url>/wiki/cloud-shell/tag/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><p>打开终端，输入并执行这一行命令即可：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_46" value="curl -s https://sh.xaox.cc/install | sh -s tag"><button class="copy-btn" onclick="util.copy(&quot;copy_46&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><h2 id="发布版本"><a href="#发布版本" class="headerlink" title="发布版本"></a>发布版本</h2><p>当您需要进行版本发布时，在 git 仓库中打开终端，输入：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tag 版本号 描述</span><br></pre></td></tr></table></figure><p>然后稍等片刻即可完成发布。</p><h2 id="删除版本"><a href="#删除版本" class="headerlink" title="删除版本"></a>删除版本</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tag del 版本号</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>[vimcn] 快速批量上传图片的脚本</title>
      <link href="/wiki/cloud-shell/vimcn/index.html"/>
      <url>/wiki/cloud-shell/vimcn/index.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h2><p>打开终端，<code>cd</code> 到存放图片的文件夹，输入这行命令就开始上传图片：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_47" value="curl -s https://sh.xaox.cc/run/vimcn/main/upload.sh | sh"><button class="copy-btn" onclick="util.copy(&quot;copy_47&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><div class="tag-plugin note" color="cyan"><div class="body"><p>为了简化指令，建议下载安装后使用。</p></div></div><h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><p>打开终端，输入这行命令：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_48" value="curl -s https://sh.xaox.cc/install | sh -s vimcn"><button class="copy-btn" onclick="util.copy(&quot;copy_48&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>如需安装指定版本，在后面加上版本号即可，例如：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_49" value="curl -s https://sh.xaox.cc/install | sh -s vimcn 2.1.0"><button class="copy-btn" onclick="util.copy(&quot;copy_49&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>然后就会开始下载脚本并安装到 <code>usr/local/bin</code> 路径，可能需要输入电脑密码以授权。</p><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>需要上传图片到时候，打开终端，<code>cd</code> 到存放图片的文件夹，输入 <code>upload</code> 就可以了。当然，还可以传递参数：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">upload [扩展名] [操作]</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">扩展名</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>all</code> 或者不传任何参数</td><td align="left">上传所有格式的文件</td></tr><tr><td align="left"><code>png</code>、<code>jpg</code>、<code>ico</code> 等具体的某个扩展名</td><td align="left">上传指定格式的文件</td></tr></tbody></table><table><thead><tr><th align="left">操作</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left"><code>open</code></td><td align="left">上传成功后打开链接</td></tr></tbody></table><details class="tag-plugin folding" ><summary><span>常见的用法示例</span></summary><div class="body"><p>上传当前文件夹中的所有文件</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">upload</span><br></pre></td></tr></table></figure><p>上传当前文件夹中的所有文件，并打开链接</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">upload all open</span><br></pre></td></tr></table></figure><p>上传当前文件夹中的所有png格式的图片</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">upload png</span><br></pre></td></tr></table></figure></div></details><h2 id="支持的文件格式"><a href="#支持的文件格式" class="headerlink" title="支持的文件格式"></a>支持的文件格式</h2><p>经测试，可以上传的格式有：png、jpg、ico、gif、svg、tiff、webp、pdf、mp3、mp4、zip等。</p><p>支持的文件大小大概在 50MB 以内。</p><h2 id="请勿滥用"><a href="#请勿滥用" class="headerlink" title="请勿滥用"></a>请勿滥用</h2><div class="tag-plugin note" color="yellow"><div class="title"><strong>注意</strong></div><div class="body"><p>为了大家都能愉快使用，请不要上传一些奇奇怪怪的图片。</p></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>[podspec] 快速发布 podspec 版本的脚本</title>
      <link href="/wiki/cloud-shell/podspec/index.html"/>
      <url>/wiki/cloud-shell/podspec/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>let <code>path</code> &#x3D; 你的项目的 <code>podspec</code> 所在的路径</p><p>打开终端，cd 到 <code>path</code> ，输入下面这条命令下载脚本到当前文件夹：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_50" value="curl -s https://sh.xaox.cc/install | sh -s podspec"><button class="copy-btn" onclick="util.copy(&quot;copy_50&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>如需安装指定版本，在后面加上版本号即可，例如：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_51" value="curl -s https://sh.xaox.cc/install | sh -s podspec 1.2.1"><button class="copy-btn" onclick="util.copy(&quot;copy_51&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>需要发布 podspec 到时候，在终端中输入：</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_52" value=". podspec.sh"><button class="copy-btn" onclick="util.copy(&quot;copy_52&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>就会自动开始执行发布流程。</p><h2 id="发布流程"><a href="#发布流程" class="headerlink" title="发布流程"></a>发布流程</h2><ul><li>如果目录下有一个 podspec 文件，直接询问版本号，然后打包验证、询问是否发布。</li><li>如果目录下有多个 podspec 文件，遍历每一个 podspec 文件，询问版本号，然后打包验证、询问是否发布。</li></ul><h2 id="脚本运行权限"><a href="#脚本运行权限" class="headerlink" title="脚本运行权限"></a>脚本运行权限</h2><p>如果提示没有权限，就输入以下命令修改 <code>podspec.sh</code> 的权限</p><div class="tag-plugin copy" width="max"><input class="copy-area" readonly id="copy_53" value="chmod 777 podspec.sh"><button class="copy-btn" onclick="util.copy(&quot;copy_53&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 Git 服务器</title>
      <link href="/wiki/git/git-server/index.html"/>
      <url>/wiki/git/git-server/index.html</url>
      
        <content type="html"><![CDATA[<p>网上相关教程挺多，但是步骤略繁琐，本文将借助 Gitblit 开源工具使用最简单的方式搭建和维护 Git 服务器，支持 Linux、Windows、Mac 平台。</p><span id="more"></span><h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><h3 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a>安装 JDK</h3><p>下载并安装 JDK：<a href="https://www.oracle.com/java/technologies/javase-downloads.html">https://www.oracle.com/java/technologies/javase-downloads.html</a></p><h3 id="安装并配置-Gitblit"><a href="#安装并配置-Gitblit" class="headerlink" title="安装并配置 Gitblit"></a>安装并配置 Gitblit</h3><ul><li>下载 Gitblit：<a href="https://github.com/gitblit/gitblit">https://github.com/gitblit/gitblit</a></li><li>解压 Gitblit，进入目录 <code>~/gitblit-1.8.0/data/defaults.properties</code></li><li>用编辑器打开 <code>defaults.properties</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git.repositoriesFolder = /Users/用户名/gitserver/gitRepository</span><br><span class="line">server.httpPort = 7070</span><br></pre></td></tr></table></figure></li></ul><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>在终端中执行 <code>gitblit.sh</code> 脚本即可启动服务：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./gitblit.sh</span><br></pre></td></tr></table></figure><details class="tag-plugin folding" ><summary><span>建议设置开机自启动</span></summary><div class="body"><p>通过 Mac 的自动化工具，将启动指令写成脚本，系统启动后自动运行脚本即可。<br>Windows 平台可以添加到启动计划任务中。</p></div></details><h2 id="客户端访问"><a href="#客户端访问" class="headerlink" title="客户端访问"></a>客户端访问</h2><p>用服务器 IP + 端口号来访问。例如我的电脑的 IP 是 <code>10.8.12.200</code>，那么在局域网内另外一台电脑访问 <code>http://10.8.12.200:7070</code> 就可以看到管理页面了：</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/git/gitblit01.jpg" style="width:500px;"/></div></div><p>网页操作和使用 GitHub、Coding 等平台相似，非常简单。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>使用 GitHub</title>
      <link href="/wiki/git/github/index.html"/>
      <url>/wiki/git/github/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="fork-amp-pull-request"><a href="#fork-amp-pull-request" class="headerlink" title="fork &amp; pull request"></a>fork &amp; pull request</h2><ul><li>fork 操作相当于把别人的 git 仓库克隆到自己账号中。</li><li>pull request 则可以将自己 fork 过来的仓库中的修改合并到原仓库中，实现团队协作。</li></ul><h2 id="静态页面持续集成"><a href="#静态页面持续集成" class="headerlink" title="静态页面持续集成"></a>静态页面持续集成</h2><h3 id="1-生成-SSH-Key"><a href="#1-生成-SSH-Key" class="headerlink" title="1. 生成 SSH Key"></a>1. 生成 SSH Key</h3><p>打开 terminal 输入下面的命令生成 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 文件：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C me@xxx.com</span><br></pre></td></tr></table></figure><p>其中 <code>me@xxx.com</code> 就是 GitHub 账号的邮箱。</p><h3 id="2-填写-Deploy-Keys-和-Secrets"><a href="#2-填写-Deploy-Keys-和-Secrets" class="headerlink" title="2. 填写 Deploy Keys 和 Secrets"></a>2. 填写 Deploy Keys 和 Secrets</h3><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>打开源码仓库，在设置中找到「Secrets」</p></div><div class="body fs14"><p>第 1&#x2F;3 步：添加 <code>DEPLOY_KEY</code> 内容是 <code>id_rsa</code> 文件的全部内容。<br>第 2&#x2F;3 步：添加 <code>EMAIL</code> 内容是 GitHub 邮箱。<br>第 3&#x2F;3 步：添加 <code>NAME</code> 内容是 GitHub 账号名。</p></div></div><div class="timenode" index="1"><div class="header"><p>打开 deploy 目标仓库，在设置中找到「Deploy Keys」</p></div><div class="body fs14"><p>第 1&#x2F;1 步：添加 <code>deploy_key.pub</code> 内容是 <code>id_rsa.pub</code> 文件的全部内容。</p></div></div></div><h3 id="3-在-GitHub-上添加-Actions"><a href="#3-在-GitHub-上添加-Actions" class="headerlink" title="3. 在 GitHub 上添加 Actions"></a>3. 在 GitHub 上添加 Actions</h3><p>在 GitHub 上添加 Actions 内容为：</p><figure class="highlight yaml"><figcaption><span>.github/workflows/auto-deploy.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span> <span class="comment"># workflow name</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  [<span class="string">push</span>] <span class="comment"># 触发事件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span> <span class="comment"># job1 id</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment"># 运行环境为最新版 Ubuntu</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">A</span> <span class="string">job</span> <span class="string">to</span> <span class="string">deploy</span> <span class="string">blog.</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="comment"># step1 获取源码</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span> <span class="comment"># 使用 actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span> <span class="comment"># 条件</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else). 当有子模块时切换分支？</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.) 缓存压缩 node_modules，不用每次下载，使用时解压，可以加快工作流的执行过程，超过 7 天没有使用将删除压缩包。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">node</span> <span class="string">modules</span> <span class="comment"># step2</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          $&#123;&#123; runner.os &#125;&#125;-node-</span></span><br><span class="line"><span class="string"></span>    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span> <span class="comment"># step3 name</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span> <span class="comment"># 如果变量 cache-hit 不等于 true</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="comment"># 安装 node modules 相关依赖</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Deploy hexo blog website.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="comment"># step4</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">sma11black/hexo-action@v1.0.0</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.NAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.EMAIL</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-大功告成"><a href="#4-大功告成" class="headerlink" title="4. 大功告成"></a>4. 大功告成</h3><p>您可以尝试修改一下源码库，看是否能够成功运行 Actions 。</p><h2 id="GitHub-API"><a href="#GitHub-API" class="headerlink" title="GitHub API"></a>GitHub API</h2><p><a href="https://docs.github.com/en/graphql">https://docs.github.com/en/graphql</a></p><div class="tag-plugin note" ><div class="body"><p>未完待续</p></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>安装与配置</title>
      <link href="/wiki/git/install-and-config/index.html"/>
      <url>/wiki/git/install-and-config/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><div class="tag-plugin tabs"id="tab_16""><ul class="nav-tabs"><li class="tab active"><a href="#tab_16-1">Linux</a></li><li class="tab"><a href="#tab_16-2">Windows</a></li><li class="tab"><a href="#tab_16-3">Mac</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_16-1"><div class="tag-plugin link dis-select"><a class="link-card plain" title="下载地址" href="https://git-scm.com/download/linux" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">下载地址</span><span class="cap link fs12">https://git-scm.com/download/linux</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><p>安装指定系统的依赖包：</p><figure class="highlight plaintext"><figcaption><span>Centos/RedHat</span></figcaption><table><tr><td class="code"><pre><span class="line">$ yum install curl-devel expat-devel gettext-devel \</span><br><span class="line">  openssl-devel zlib-devel</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>Debian/Ubuntu</span></figcaption><table><tr><td class="code"><pre><span class="line">$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \</span><br><span class="line">  libz-dev libssl-dev</span><br></pre></td></tr></table></figure><p>解压安装下载的源码包：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tar -zxf git-1.7.2.2.tar.gz</span><br><span class="line">$ cd git-1.7.2.2</span><br><span class="line">$ make prefix=/usr/local all</span><br><span class="line">$ sudo make prefix=/usr/local install</span><br></pre></td></tr></table></figure><details class="tag-plugin folding" ><summary><span>使用终端指令安装</span></summary><div class="body"><p><strong>Debian&#x2F;Ubuntu</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \</span><br><span class="line">  libz-dev libssl-dev</span><br><span class="line"></span><br><span class="line">$ apt-get install git</span><br><span class="line"></span><br><span class="line">$ git --version</span><br><span class="line">git version 1.8.1.2</span><br></pre></td></tr></table></figure><p><strong>CentOS&#x2F;RedHat</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ yum install curl-devel expat-devel gettext-devel \</span><br><span class="line">  openssl-devel zlib-devel</span><br><span class="line"></span><br><span class="line">$ yum -y install git-core</span><br><span class="line"></span><br><span class="line">$ git --version</span><br><span class="line">git version 1.7.1</span><br></pre></td></tr></table></figure></div></details></div><div class="tab-pane" id="tab_16-2"><div class="tag-plugin link dis-select"><a class="link-card plain" title="下载地址" href="https://gitforwindows.org/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">下载地址</span><span class="cap link fs12">https://gitforwindows.org/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><p>完成安装之后，就可以使用命令行的 git 工具（已经自带了 ssh 客户端）了，另外还有一个图形界面的 Git 项目管理工具。</p><p>在开始菜单里找到 <kbd>Git</kbd> -&gt; <kbd>Git Bash</kbd>，会弹出 Git 命令窗口，你可以在该窗口进行 Git 操作。</p></div><div class="tab-pane" id="tab_16-3"><div class="tag-plugin link dis-select"><a class="link-card plain" title="下载地址" href="https://git-scm.com/download/mac" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">下载地址</span><span class="cap link fs12">https://git-scm.com/download/mac</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><p>Mac 自带 git 并且随着系统版本的更新，自带的 git 也会升级到最新，一般无需手动安装。</p></div></div></div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Git 提供了一个叫做 <code>git config</code> 的工具，专门用来配置或读取相应的工作环境变量。这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量可以存放在以下三个不同的地方：</p><ul><li><code>/etc/gitconfig</code> 文件：系统中对所有用户都普遍适用的配置。若使用 <code>git config</code> 时用 <code>--system</code> 选项，读写的就是这个文件。</li><li><code>~/.gitconfig</code> 文件：用户目录下的配置文件只适用于该用户。若使用 <code>git config</code> 时用 <code>--global</code> 选项，读写的就是这个文件。</li><li>当前项目的 Git 目录中的配置文件（也就是工作目录中的 <code>.git/config</code> 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 <code>.git/config</code> 里的配置会覆盖 <code>/etc/gitconfig</code> 中的同名变量。</li></ul><h3 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name xaoxuu</span><br><span class="line">$ git config --global user.email git@xaoxuu.com</span><br></pre></td></tr></table></figure><ul><li>如果用了 <code>--global</code> 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的项目都会默认使用这里配置的用户信息。</li><li>如果要在某个特定的项目中使用其他名字或者电邮，只要去掉 <code>--global</code> 选项重新配置即可，新的设定保存在当前项目的 <code>.git/config</code> 文件里。</li></ul><h3 id="查看配置信息"><a href="#查看配置信息" class="headerlink" title="查看配置信息"></a>查看配置信息</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git config --list</span><br><span class="line">http.postbuffer=2M</span><br><span class="line">user.name=xaoxuu</span><br><span class="line">user.email=git@xaoxuu.com</span><br></pre></td></tr></table></figure><h2 id="git-ssh"><a href="#git-ssh" class="headerlink" title="git-ssh"></a>git-ssh</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C user@example.com</span><br></pre></td></tr></table></figure><p>其中 <code>user@example.com</code> 对应的是你的 Git 邮箱。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/git/ssh-keys1.png" style="width:400px;"/></div></div><p>ssh-agent 是一种控制用来保存公钥身份验证所使用的私钥的程序，其实 ssh-agent 就是一个密钥管理器，运行 ssh-agent 以后，使用 ssh-add 将私钥交给 ssh-agent 保管，其他程序需要身份验证的时候可以将验证申请交给 ssh-agent 来完成整个认证过程。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br></pre></td></tr></table></figure><p>添加生成的 SSH key 到 ssh-agent：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/git/ssh-keys2.jpg" style="width:400px;"/></div></div><p>登陆 Github，添加 ssh：</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/git/ssh-keys3.jpg" style="width:400px;"/></div></div><p>把 id_rsa.pub 文件里的内容复制到这里：</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/git/ssh-keys4.jpg" style="width:400px;"/></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>基本操作入门</title>
      <link href="/wiki/git/usage/index.html"/>
      <url>/wiki/git/usage/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本操作流程"><a href="#基本操作流程" class="headerlink" title="基本操作流程"></a>基本操作流程</h2><ol><li>在对代码进行了一些修改之后，使用：<code>git add --all</code> 将本地所有新增文件和修改内容添加到暂存区。</li><li>使用：<code>git commit -m 备注</code> 将代码提交到本地版本库。（备注内容没有空格的话不需要加引号）</li><li>使用：<code>git pull origin</code> 从服务器拉取代码，更新本地版本库。</li><li>使用：<code>git push origin</code> 将本地版本库推送到服务器。</li></ol><span id="more"></span><h2 id="克隆与配置"><a href="#克隆与配置" class="headerlink" title="克隆与配置"></a>克隆与配置</h2><h3 id="克隆版本库"><a href="#克隆版本库" class="headerlink" title="克隆版本库"></a>克隆版本库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/xaoxuu/AXKit.git</span><br><span class="line"># 或者</span><br><span class="line">git clone https://github.com/xaoxuu/AXKit.git AXKit</span><br></pre></td></tr></table></figure><h3 id="配置版本库"><a href="#配置版本库" class="headerlink" title="配置版本库"></a>配置版本库</h3><p>要忽略某些文件的改动需要配置 <code>.gitignore</code> 文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这是macOS文件夹属性的隐藏文件，不需要同步到git</span><br><span class="line">.DS_Store</span><br><span class="line"></span><br><span class="line"># 某个文件夹不想要同步到git</span><br><span class="line">/public</span><br><span class="line">/node_modules</span><br><span class="line"></span><br><span class="line"># 某个文件不想要同步到git</span><br><span class="line">test.txt</span><br><span class="line"></span><br><span class="line"># 通配符</span><br><span class="line">._*</span><br></pre></td></tr></table></figure><h2 id="基本操作指令"><a href="#基本操作指令" class="headerlink" title="基本操作指令"></a>基本操作指令</h2><h3 id="创建与切换分支"><a href="#创建与切换分支" class="headerlink" title="创建与切换分支"></a>创建与切换分支</h3><figure class="highlight sh"><figcaption><span>创建并切换 branch</span></figcaption><table><tr><td class="code"><pre><span class="line">git checkout -b 分支名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>仅仅切换 branch</span></figcaption><table><tr><td class="code"><pre><span class="line">git checkout 分支名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>创建 tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git tag 标签名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>创建 tag 并备注</span></figcaption><table><tr><td class="code"><pre><span class="line">git tag -a 标签名 -m 备注信息</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>创建 PGP tag 并备注</span></figcaption><table><tr><td class="code"><pre><span class="line">git tag -s 标签名 -m 备注信息</span><br></pre></td></tr></table></figure><h3 id="查看分支和标签"><a href="#查看分支和标签" class="headerlink" title="查看分支和标签"></a>查看分支和标签</h3><figure class="highlight sh"><figcaption><span>查看本地 tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>查看某个本地 tag 详情</span></figcaption><table><tr><td class="code"><pre><span class="line">git show 标签名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>查看本地 branch list</span></figcaption><table><tr><td class="code"><pre><span class="line">git branch 分支名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>查看远程 branch list</span></figcaption><table><tr><td class="code"><pre><span class="line">git branch -r 分支名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>查看所有 branch list</span></figcaption><table><tr><td class="code"><pre><span class="line">git branch -a 分支名</span><br></pre></td></tr></table></figure><h3 id="删除分支和标签"><a href="#删除分支和标签" class="headerlink" title="删除分支和标签"></a>删除分支和标签</h3><figure class="highlight sh"><figcaption><span>删除本地 branch / tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git branch -d 分支名或标签名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>删除所有未推送的本地 branch</span></figcaption><table><tr><td class="code"><pre><span class="line">git fetch -p</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>仅仅删除某个远程 branch / tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git push origin :分支名或标签名</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push origin --delete 分支名或标签名</span><br></pre></td></tr></table></figure><h3 id="推送分支和标签"><a href="#推送分支和标签" class="headerlink" title="推送分支和标签"></a>推送分支和标签</h3><figure class="highlight sh"><figcaption><span>推送某个 branch / tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git push origin 分支名或标签名</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>推送所有 branch</span></figcaption><table><tr><td class="code"><pre><span class="line">git push --all origin</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>推送所有 tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git push --tags</span><br></pre></td></tr></table></figure><h3 id="重命名分支"><a href="#重命名分支" class="headerlink" title="重命名分支"></a>重命名分支</h3><p>重命名本地分支：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git branch -m 旧分支名 新分支名</span><br></pre></td></tr></table></figure><p>重命名远程分支：</p><ol><li>删除远程分支</li><li>重命名本地分支</li><li>推送本地分支</li></ol><h2 id="拉取、合并分支"><a href="#拉取、合并分支" class="headerlink" title="拉取、合并分支"></a>拉取、合并分支</h2><h3 id="拉取某个远程标签"><a href="#拉取某个远程标签" class="headerlink" title="拉取某个远程标签"></a>拉取某个远程标签</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git fetch origin tag 远程标签名</span><br></pre></td></tr></table></figure><h3 id="合并某本地分支到当前分支"><a href="#合并某本地分支到当前分支" class="headerlink" title="合并某本地分支到当前分支"></a>合并某本地分支到当前分支</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git merge 分支名</span><br></pre></td></tr></table></figure><h3 id="合并某远程分支到当前分支"><a href="#合并某远程分支到当前分支" class="headerlink" title="合并某远程分支到当前分支"></a>合并某远程分支到当前分支</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git pull origin 远程分支名</span><br></pre></td></tr></table></figure><h2 id="代码冲突"><a href="#代码冲突" class="headerlink" title="代码冲突"></a>代码冲突</h2><p>我一般使用 Tower 客户端操作，pull 之后有冲突的文件会列出来。建议使用一个比较好的编辑器如 <a href="https://atom.io/">Atom</a>，有冲突的部分会用两种颜色高亮。</p><div class="tag-plugin note" ><div class="body"><p>未完待续</p></div></div><h2 id="代码回退"><a href="#代码回退" class="headerlink" title="代码回退"></a>代码回退</h2><p>如果冲突文件没有妥善解决就提交到版本库导致严重后果，这是需要查看某个历史时刻的代码，使用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git log</span><br><span class="line"># 查看提交记录</span><br></pre></td></tr></table></figure><p>然后 copy 某个 commit id 进行回退，回退的类型有两种：</p><h3 id="soft"><a href="#soft" class="headerlink" title="soft"></a>soft</h3><p>这是默认的回退方式，版本库的 HEAD 回滚到某个 commit 但本地代码不变，处于未 commit 的状态。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git reset [commit <span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git reset --soft [commit <span class="built_in">id</span>]</span><br></pre></td></tr></table></figure><h3 id="hard"><a href="#hard" class="headerlink" title="hard"></a>hard</h3><p>HEAD 和本地代码都回到某个 commit，后面的更改将会被丢弃。（如同时光穿梭）</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git reset --hard [commit <span class="built_in">id</span>]</span><br></pre></td></tr></table></figure><h2 id="版本迭代"><a href="#版本迭代" class="headerlink" title="版本迭代"></a>版本迭代</h2><p>查看本地所有标签</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure><p>把当前 HEAD 打个标签（名为：1.0）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag 1.0</span><br><span class="line"># 也可以添加备注信息，如同commit</span><br><span class="line">git tag 1.0 -m &#x27;message&#x27;</span><br></pre></td></tr></table></figure><p>切换到某个标签（1.0）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout 1.0</span><br></pre></td></tr></table></figure><p>把标签 push 到远程</p><figure class="highlight sh"><figcaption><span>push指定的tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git push origin 1.0</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>push所有未push的tag</span></figcaption><table><tr><td class="code"><pre><span class="line">git push --tags</span><br></pre></td></tr></table></figure><p>删除标签（1.0）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 删除本地tag</span><br><span class="line">git tag -d 1.0</span><br><span class="line"></span><br><span class="line"># 删除远程tag</span><br><span class="line"># 方法一：将空白tag覆盖到远程tag</span><br><span class="line">git push origin :1.0</span><br><span class="line"># 方法二：执行删除命令</span><br><span class="line">git push origin --delete 1.0</span><br></pre></td></tr></table></figure><h2 id="客户端操作"><a href="#客户端操作" class="headerlink" title="客户端操作"></a>客户端操作</h2><h3 id="Stash"><a href="#Stash" class="headerlink" title="Stash"></a>Stash</h3><ul><li>save：将当前未 commit 的代码保存到 stash，并且回到上次 commit 的状态。</li><li>apply：应用某个 stash 的代码。</li></ul><h3 id="Git-Flow"><a href="#Git-Flow" class="headerlink" title="Git-Flow"></a>Git-Flow</h3><p>自动化管理功能，例如：</p><ul><li>准备开发新版本的时候：点击 Start Release，客户端会自动新建一个 release 分支。</li><li>准备增加一个新特性的时候：点击 Start Feature，客户端会新建一个 feature 分支。</li><li>需要修复 bug 的时候：点击 Start Hotfix，客户端会新建一个 fix 分支。</li><li>当修复完 bug，点击 Finish Hotfix 的时候，客户端会自动把 fix 分支合并到创建它的分支，并且创建一个 tag。</li><li>当一个新特性开发完成，点击 Finish Feature 的时候，客户端会自动把 feature 分支合并到创建它的分支，并且创建一个 tag。</li><li>当一个新版本开发完成，点击 Finish Release 的时候，客户端会自动把 release 分支合并到创建它的分支，并且创建一个 tag。</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>探索个性化选项</title>
      <link href="/wiki/stellar/advanced-settings/index.html"/>
      <url>/wiki/stellar/advanced-settings/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="自定义主页文章检索栏"><a href="#自定义主页文章检索栏" class="headerlink" title="自定义主页文章检索栏"></a>自定义主页文章检索栏</h2><p>这个功能在 <mark class="tag-plugin mark" color="dark">1.13.0</mark> 版本后开始支持。</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">######## Index ########</span></span><br><span class="line"><span class="attr">post-index:</span> <span class="comment"># 近期发布 分类 标签 归档 and ...</span></span><br><span class="line">  <span class="string">&#x27;朋友文章&#x27;</span><span class="string">:</span> <span class="string">/friends/rss/</span> <span class="comment"># 这里填写的链接要与对应页面一致，否则可能无法正确高亮</span></span><br></pre></td></tr></table></figure><h2 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h2><p>我一看这文档，每次写一篇新文章都要重新写一遍 <code>cover</code>,<code>desciption</code>,<code>categories</code> 多麻烦，直接让 hexo 替我写了它不香吗</p><p>根目录下 <code>scaffolds</code> 文件夹中编辑 <code>post.md</code> 的 <code>font-matter</code>：</p><figure class="highlight yaml"><figcaption><span>blog/scaffolds/post.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">tags:</span> []</span><br><span class="line"><span class="attr">categories:</span> []</span><br><span class="line"><span class="attr">description:</span> </span><br><span class="line"><span class="attr">cover:</span> </span><br><span class="line"><span class="attr">banner:</span> </span><br><span class="line"><span class="attr">poster:</span> <span class="comment"># 海报（可选，全图封面卡片）</span></span><br><span class="line">  <span class="attr">topic:</span> <span class="string">标题上方的小字</span> <span class="comment"># 可选</span></span><br><span class="line">  <span class="attr">headline:</span> <span class="string">大标题</span> <span class="comment"># 必选</span></span><br><span class="line">  <span class="attr">caption:</span> <span class="string">标题下方的小字</span> <span class="comment"># 可选</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">标题颜色</span> <span class="comment"># 可选</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="主题色"><a href="#主题色" class="headerlink" title="主题色"></a>主题色</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">    <span class="attr">common:</span></span><br><span class="line">      <span class="attr">theme:</span> <span class="string">&#x27;#1BCDFC&#x27;</span> <span class="comment"># 主题色</span></span><br><span class="line">      <span class="attr">accent:</span> <span class="string">&#x27;#ff5722&#x27;</span> <span class="comment"># 强调色</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">&#x27;#2196f3&#x27;</span> <span class="comment"># 超链接颜色</span></span><br><span class="line">      <span class="attr">button:</span> <span class="string">&#x27;#1BCDFC&#x27;</span> <span class="comment"># 按钮颜色</span></span><br><span class="line">      <span class="attr">hover:</span> <span class="string">&#x27;#ff5722&#x27;</span> <span class="comment"># 按钮高亮颜色</span></span><br><span class="line">    <span class="attr">light:</span></span><br><span class="line">      <span class="attr">background:</span> <span class="string">&#x27;#f8f8f8&#x27;</span> <span class="comment"># 浅色背景颜色</span></span><br><span class="line">      <span class="attr">block:</span> <span class="string">&#x27;#f2f2f2&#x27;</span> <span class="comment"># 块背景颜色</span></span><br><span class="line">      <span class="attr">card:</span> <span class="string">white</span> <span class="comment"># 卡片背景颜色</span></span><br><span class="line">      <span class="attr">title:</span> <span class="string">&#x27;#000&#x27;</span> <span class="comment"># 标题文本颜色</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">&#x27;#333&#x27;</span> <span class="comment"># 正文文本颜色</span></span><br><span class="line">      <span class="attr">code:</span> <span class="string">&#x27;#111&#x27;</span> <span class="comment"># 行内代码颜色</span></span><br><span class="line">    <span class="attr">dark:</span></span><br><span class="line">      <span class="attr">background:</span> <span class="string">&#x27;#313438&#x27;</span> <span class="comment"># 深色背景颜色</span></span><br><span class="line">      <span class="attr">background-mobile:</span> <span class="string">black</span> <span class="comment"># 移动端深色背景（OLED调成纯黑可以省电）</span></span><br><span class="line">      <span class="attr">block:</span> <span class="string">&#x27;#2B2F33&#x27;</span> <span class="comment"># 块背景颜色</span></span><br><span class="line">      <span class="attr">card:</span> <span class="string">&#x27;#464D57&#x27;</span> <span class="comment"># 卡片背景颜色</span></span><br><span class="line">      <span class="attr">title:</span> <span class="string">&#x27;#fff&#x27;</span> <span class="comment"># 标题文本颜色</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">&#x27;#eee&#x27;</span> <span class="comment"># 正文文本颜色</span></span><br><span class="line">      <span class="attr">code:</span> <span class="string">&#x27;#ff7043&#x27;</span> <span class="comment"># 行内代码颜色</span></span><br></pre></td></tr></table></figure><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h3 id="系统字体"><a href="#系统字体" class="headerlink" title="系统字体"></a>系统字体</h3><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="attr">font-size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br><span class="line">    <span class="attr">logo:</span> <span class="string">&#x27;system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27;</span></span><br><span class="line">    <span class="attr">body:</span> <span class="string">&#x27;system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27;</span></span><br><span class="line">    <span class="attr">code:</span> <span class="string">&#x27;Menlo, Monaco, Consolas, system-ui, &quot;Courier New&quot;, monospace, sans-serif&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="外部字体"><a href="#外部字体" class="headerlink" title="外部字体"></a>外部字体</h3><p>要想引用外部字体，你需要先在 <code>_config.yml</code> 中 <code>inject</code> 引入</p><p>举例，引用 <a href="https://fonts.google.com/noto/specimen/Noto+Serif+SC?query=noto+&subset=chinese-simplified">Noto Serif SC</a> 在 <code>_config.yml</code> 中写入</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap&quot;</span> <span class="string">rel=&quot;stylesheet&quot;&gt;</span></span><br><span class="line">  <span class="attr">script:</span></span><br></pre></td></tr></table></figure><p>并在 <code>_config.stellar.yml</code> 中填写你引入的字体名称</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br><span class="line">    <span class="attr">body:</span> <span class="string">&#x27;&quot;Noto Serif SC&quot;, &quot;Microsoft Yahei&quot;,..., sans-serif&#x27;</span></span><br></pre></td></tr></table></figure><p>选择在线字体：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://www.googlefonts.cn/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://www.googlefonts.cn/</span><span class="cap link fs12">https://www.googlefonts.cn/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h3 id="本地字体"><a href="#本地字体" class="headerlink" title="本地字体"></a>本地字体</h3><p>若您想引用本地字体，举例，引用得意黑（<code>SmileySans-Oblique.ttf</code>）这个字体，先将字体放置于 <code>blog/source/font/</code> 目录下，然后改动一下主题文件</p><figure class="highlight styl"><figcaption><span>Blog/themes/stellar/source/css/_custom.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span></span><br><span class="line">   <span class="attribute">font-family</span>: <span class="string">&#x27;Smiley Sans&#x27;</span></span><br><span class="line">   <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;/font/SmileySans-Oblique.ttf&#x27;</span>)</span><br><span class="line">   <span class="attribute">font-weight</span>: normal</span><br><span class="line">   <span class="attribute">font-style</span>: normal</span><br></pre></td></tr></table></figure><p><code>font-family</code> 是你引入的字体家族名，<code>src</code> 中填写字体文件相对于 <code>source</code> 文件夹的路径</p><p>同样，你需要在 <code>_config.stellar.yml</code> 中填写你引入的字体名称（<code>font-family</code>）</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="attr">font-family:</span></span><br><span class="line">    <span class="attr">body:</span> <span class="string">&#x27;&quot;Smiley Sans&quot;, &quot;Microsoft Yahei&quot;,..., sans-serif&#x27;</span></span><br></pre></td></tr></table></figure><p>但是我个人并不推荐引用本地字体，相比于英文字体，中文字体囊括了众多的字符，这也无法避免地导致字体文件体积的增加，拿 <code>Noto Serif SC</code> 来说，单个ttf文件就有9mb之大，这对于您的站点而言加载速度可想而知。</p><h2 id="文本对齐方向"><a href="#文本对齐方向" class="headerlink" title="文本对齐方向"></a>文本对齐方向</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="attr">text-align:</span> <span class="string">left</span> <span class="comment"># justify/left/center/right</span></span><br></pre></td></tr></table></figure><h2 id="页面缓入效果"><a href="#页面缓入效果" class="headerlink" title="页面缓入效果"></a>页面缓入效果</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认关闭，目前已知scrollreveal与lazyload同时打开时会有footer不显示的bug</span></span><br><span class="line"><span class="attr">scrollreveal:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://fastly.jsdelivr.net/npm/scrollreveal@4.0.9/dist/scrollreveal.min.js</span></span><br><span class="line">  <span class="attr">distance:</span> <span class="string">4px</span> <span class="comment"># 执行距离</span></span><br><span class="line">  <span class="attr">duration:</span> <span class="number">400</span> <span class="comment"># ms # 执行时长</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">100</span> <span class="comment"># ms # 执行间隔（时间）</span></span><br><span class="line">  <span class="attr">scale:</span> <span class="number">0.1</span> <span class="comment"># 0.1~1 # 执行方式（缩放）</span></span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="warning"><div class="body"><p>此效果会和图片懒加载插件冲突，导致部分卡片可能加载不出来</p></div></div><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认打开</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># [hexo clean &amp;&amp; hexo s] is required after changing this value.</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://fastly.jsdelivr.net/npm/vanilla-lazyload@17.3.1/dist/lazyload.min.js</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="string">blur</span> <span class="comment"># blur, fade</span></span><br></pre></td></tr></table></figure><h2 id="加载提示"><a href="#加载提示" class="headerlink" title="加载提示"></a>加载提示</h2><p>加载动态时间线、动态友链等显示提示</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认打开</span></span><br><span class="line"><span class="attr">loading:</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">正在加载</span></span><br><span class="line">  <span class="attr">error:</span> <span class="string">加载失败，请稍后重试。</span></span><br></pre></td></tr></table></figure><h2 id="评论的灵活用法"><a href="#评论的灵活用法" class="headerlink" title="评论的灵活用法"></a>评论的灵活用法</h2><h3 id="共用评论数据"><a href="#共用评论数据" class="headerlink" title="共用评论数据"></a>共用评论数据</h3><p>如果您有多个页面需要共用评论数据，可以在 <code>front-matter</code> 中覆盖评论参数，例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/about/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">关于</span></span><br><span class="line"><span class="attr">beaudar:</span></span><br><span class="line">  <span class="attr">&#x27;issue-term&#x27;:</span> <span class="string">&#x27;留言板&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>blog/source/friends/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">友链</span></span><br><span class="line"><span class="attr">beaudar:</span></span><br><span class="line">  <span class="attr">&#x27;issue-term&#x27;:</span> <span class="string">&#x27;留言板&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="使用其它评论数据"><a href="#使用其它评论数据" class="headerlink" title="使用其它评论数据"></a>使用其它评论数据</h3><p>如果您有多个页面需要另外一个数据库的评论数据，以 Beaudar 为例，您可以这样：</p><figure class="highlight yaml"><figcaption><span>blog/source/wiki/stellar/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">快速开始您的博客之旅</span></span><br><span class="line"><span class="attr">beaudar:</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br><span class="line">  <span class="attr">&#x27;issue-term&#x27;:</span> <span class="string">&#x27;Q &amp; A&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="文章自定义"><a href="#文章自定义" class="headerlink" title="文章自定义"></a>文章自定义</h2><h3 id="是否自动生成封面"><a href="#是否自动生成封面" class="headerlink" title="是否自动生成封面"></a>是否自动生成封面</h3><p>根据 <code>tags</code> 作为关键词为每一篇文章在线搜索封面：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">article:</span></span><br><span class="line">  <span class="attr">auto_cover:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="是否自动生成摘要"><a href="#是否自动生成摘要" class="headerlink" title="是否自动生成摘要"></a>是否自动生成摘要</h3><p>建议您通过 <code>description</code> 或者 <code>excerpt</code> 方式生成摘要，但如果您希望自动从文章内容截取一定字数的文字作为摘要，可以这样设置：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">article:</span></span><br><span class="line">  <span class="attr">auto_excerpt:</span> <span class="number">200</span></span><br></pre></td></tr></table></figure><h3 id="相关文章推荐"><a href="#相关文章推荐" class="headerlink" title="相关文章推荐"></a>相关文章推荐</h3><p>要实现相关文章推荐功能，您需要安装插件：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_54" value="npm i hexo-related-popular-posts"><button class="copy-btn" onclick="util.copy(&quot;copy_54&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>然后在主题配置文件中开启：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">article:</span></span><br><span class="line">  <span class="comment"># npm i hexo-related-popular-posts</span></span><br><span class="line">  <span class="attr">related_posts:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">您可能感兴趣的文章</span></span><br></pre></td></tr></table></figure><h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><p>如果要修改样式，您需要删掉主题的样式文件的 CDN 链接，使用本地文件，然后在 <code>themes/stellar/source/css/_custom.styl</code> 中进行修改。</p><h3 id="使用其它-highlight-js-代码高亮主题"><a href="#使用其它-highlight-js-代码高亮主题" class="headerlink" title="使用其它 highlight.js 代码高亮主题"></a>使用其它 highlight.js 代码高亮主题</h3><p>Hexo 官方有文档：<a href="https://hexo.io/docs/syntax-highlight.html#hljs">https://hexo.io/docs/syntax-highlight.html#hljs</a></p><blockquote><p>Tip: When line_number is set to false, wrap is set to false and hljs is set to true, you can then use highlight.js theme directly in your site.</p></blockquote><p>以 <code>atom-one-dark</code> 主题为例，翻译过来就是 <code>_config.yml</code> 找到 <code>highlight</code> 并修改为：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;    &#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后再找到 <code>inject</code> 新增一个 css 链接：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://fastly.jsdelivr.net/gh/highlightjs/cdn-release@11.5.0/build/styles/atom-one-dark.min.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><h2 id="外部文件注入"><a href="#外部文件注入" class="headerlink" title="外部文件注入"></a>外部文件注入</h2><p>在站点根目录下的配置文件中进行修改 <code>inject.head</code> 以在 <code>&lt;head&gt;</code> 标签末尾处注入代码，修改 <code>inject.script</code> 以在 <code>&lt;body&gt;</code> 标签末尾处注入代码。</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;meta</span> <span class="string">name=&quot;msapplication-TileColor&quot;</span> <span class="string">content=&quot;#2d89ef&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;meta</span> <span class="string">name=&quot;msapplication-config&quot;</span> <span class="string">content=&quot;/assets/favicon/browserconfig.xml&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;meta</span> <span class="string">name=&quot;theme-color&quot;</span> <span class="string">content=&quot;#ffffff&quot;&gt;</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://fastly.jsdelivr.net/npm/jquery@3.5/dist/jquery.min.js</span></span><br></pre></td></tr></table></figure><h2 id="实现「笔记」页面"><a href="#实现「笔记」页面" class="headerlink" title="实现「笔记」页面"></a>实现「笔记」页面</h2><p>创建一个项目，设置为不索引：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Notes:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">笔记</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">笔记</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">一个隐藏项目：笔记</span></span><br><span class="line">  <span class="attr">index:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># sidebar: [toc]</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">知识库</span></span><br><span class="line">  <span class="attr">sections:</span></span><br><span class="line">    <span class="string">&#x27;日常问题解决方案&#x27;</span><span class="string">:</span> [<span class="number">100</span>, <span class="number">199</span>]</span><br><span class="line">    <span class="string">&#x27;移动端开发笔记&#x27;</span><span class="string">:</span> [<span class="number">200</span>, <span class="number">299</span>]</span><br><span class="line">    <span class="string">&#x27;前端学习笔记&#x27;</span><span class="string">:</span> [<span class="number">300</span>, <span class="number">399</span>]</span><br><span class="line">    <span class="string">&#x27;在线工具&#x27;</span><span class="string">:</span> [<span class="number">400</span>, <span class="number">499</span>]</span><br></pre></td></tr></table></figure><p>然后笔记页面的 <code>front-matter</code> 中指定要高亮的 <code>menu_id</code>：</p><figure class="highlight yaml"><figcaption><span>blog/source/notes/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">wiki</span></span><br><span class="line"><span class="attr">wiki:</span> <span class="string">Notes</span></span><br><span class="line"><span class="attr">menu_id:</span> <span class="string">notes</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>这样就可以啦～</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Stellar 探索号（教程分享）</title>
      <link href="/wiki/stellar/articles/index.html"/>
      <url>/wiki/stellar/articles/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?state=all&labels=分享" hide="title,footer"></div><div class="tag-plugin note" ><div class="title"><strong>小提示</strong></div><div class="body"><p>如果您也有与 Stellar 相关的文章并希望显示在这里，可以直接在 <a href="https://github.com/xaoxuu/hexo-theme-stellar/issues">hexo-theme-stellar</a> 中选择【文章分享】模板按照格式提交即可，立即生效。</p></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>开发者和社区支持</title>
      <link href="/wiki/stellar/contributors/index.html"/>
      <url>/wiki/stellar/contributors/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin tabs" align="left"id="tab_17""><ul class="nav-tabs"><li class="tab active"><a href="#tab_17-1">开发者</a></li><li class="tab"><a href="#tab_17-2">点赞的用户</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_17-1"><div class="tag-plugin users-wrap"><div class="stellar-friends-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/contributors?per_page=100&direction=asc"><div class="group-body"></div></div></div></div><div class="tab-pane" id="tab_17-2"><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />1-100</p><div class="tag-plugin users-wrap"><div class="stellar-friends-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/stargazers?per_page=100&page=1"><div class="group-body"></div></div></div><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />101-200</p><div class="tag-plugin users-wrap"><div class="stellar-friends-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/stargazers?per_page=100&page=2"><div class="group-body"></div></div></div><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />201-300</p><div class="tag-plugin users-wrap"><div class="stellar-friends-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/stargazers?per_page=100&page=3"><div class="group-body"></div></div></div></div></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://api.star-history.com/svg?repos=xaoxuu/hexo-theme-stellar&type=Date"/></div></div><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />如何加入社区</p><p>社区建设主要包括以下几个方面：</p><ul><li><a href="https://github.com/xaoxuu/hexo-theme-stellar/issues">Issues</a> 技术问题答疑、BUG反馈</li><li><a href="https://github.com/xaoxuu/hexo-theme-stellar/discussions">Discussions</a> 论坛、相关话题讨论</li><li><a href="https://github.com/xaoxuu/hexo-theme-stellar-docs">文档</a> 维护</li><li><a href="https://xaoxuu.com/wiki/stellar/articles/">探索号</a> 文章收录</li><li>QQ群：1146399464，验证码：<psw>vlts-2021</psw>（以聊天为主，技术问题未必跟进。）</li></ul><blockquote><p>无论在什么渠道，学习并掌握 <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧(23k Stars)</a> 可以方便大家更高效地帮你解决问题。</p></blockquote><div class="tag-plugin split" ><div class="cell" index="0"><div class="tag-plugin note" color="red"><div class="body"><p><strong>错误的提问</strong></p><hr><ul><li>XXX 功能怎么用？（文档有详细描述）</li><li>这个功能怎么用不了啊（不说明自己操作了什么，也不展示实际效果）</li><li>我怎么跑不起来，能帮我看看吗？（什么也不尝试，直接丢项目代码）</li><li>怎么报错了呢？（不贴或只贴极少部分的出错提示）</li><li>这个代码怎么改（扔过来一大段代码）</li><li>XXX 什么意思？（没有经过任何搜索）</li></ul></div></div></div><div class="cell" index="1"><div class="tag-plugin note" color="green"><div class="body"><p><strong>正确的提问</strong></p><hr><ul><li>我这里遇到了一个问题：【问题描述】，我经过了以下尝试：【思路细节】，不能得到解决，报错如下：【报错截图&#x2F;线上预览地址&#x2F;仓库源代码地址】，请问该怎么解决？</li><li>我不太理解【某处】里的【某处】，我的理解是这样的：【思路细节】，对吗？</li><li>我查看了文档的【某处】，并尝试【做法】，但是没有得到【预想效果】，正确的做法应该是什么？</li></ul></div></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Stellar 主题的博客</title>
      <link href="/wiki/stellar/examples/index.html"/>
      <url>/wiki/stellar/examples/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin sites-wrap"><div class="stellar-sites-api" api="https://api.vlts.cc/output_data/v2/xaoxuu/hexo-theme-stellar-examples"><div class="group-body"></div></div></div><div class="tag-plugin note" ><div class="title"><strong>小提示</strong></div><div class="body"><p>如果您也使用了 Stellar 并希望显示在这里，可以在 <a href="https://github.com/xaoxuu/hexo-theme-stellar-examples/issues">hexo-theme-stellar-examples</a> 中提交 issue 告知您的站点信息，在您提交后的大约 3 分钟内生效。</p></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>使用「友链朋友圈」极简版</title>
      <link href="/wiki/stellar/fcircle/index.html"/>
      <url>/wiki/stellar/fcircle/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin note" color="light"><div class="title"><strong>特别感谢</strong></div><div class="body"><p>主题内置版本数据服务由 <a href="https://github.com/Rock-Candy-Tea/hexo-circle-of-friends">友链朋友圈</a> 极简版提供。<br>这个功能在 1.13.0 版本后开始支持。</p></div></div><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>第一步：fork repo</p></div><div class="body fs14"><p>fork <a href="https://github.com/Rock-Candy-Tea/hexo-circle-of-friends">@Rock-Candy-Tea&#x2F;hexo-circle-of-friends</a></p></div></div><div class="timenode" index="1"><div class="header"><p>第二步：设置自己的友链页面地址和主题类型</p></div><div class="body fs14"><p>修改 <code>hexo_circle_of_friends/fc_settings.yaml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> &#123;<span class="attr">link:</span> <span class="string">&quot;https://xaoxuu.com/friends/&quot;</span>, <span class="attr">theme:</span> <span class="string">&quot;stellar&quot;</span>&#125;  <span class="comment"># 友链页地址1，修改为你的友链页地址</span></span><br></pre></td></tr></table></figure></div></div><div class="timenode" index="2"><div class="header"><p>第三步：打开 Issues 友链抓取功能</p></div><div class="body fs14"><p>修改 <code>hexo_circle_of_friends/fc_settings.yaml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">GITHUB_FRIENDS_LINKS:</span> &#123;</span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>, <span class="comment"># true 开启github issue兼容</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;volantis&quot;</span>,  <span class="comment"># volantis/stellar用户请在这里填写volantis</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">&quot;xaoxuu&quot;</span>,  <span class="comment"># 填写你的github用户名</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">&quot;friends&quot;</span>,  <span class="comment"># 填写你的github仓库名</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">&quot;open&quot;</span>,  <span class="comment"># 填写抓取的issue状态(open/closed)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="timenode" index="3"><div class="header"><p>第四步：打开 Actions 运行权限</p></div><div class="body fs14"><p>见官方教程 <a href="https://fcircle-doc.yyyzyyyz.cn/#/simplemode">#simplemode</a></p></div></div><div class="timenode" index="4"><div class="header"><p>第五步：放置在博客中</p></div><div class="body fs14"><p>支持首页文章导航栏、文章任意位置，创建一个文件，以本站 <code>friends/rss/index.md</code> 为例：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">seo_title:</span> <span class="string">朋友文章</span></span><br><span class="line"><span class="attr">robots:</span> <span class="string">noindex,nofollow</span></span><br><span class="line"><span class="attr">menu_id:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_list:</span> <span class="literal">true</span> <span class="comment"># 这就意味着页面会显示首页文章导航栏</span></span><br><span class="line"><span class="attr">sidebar:</span> [<span class="string">welcome</span>, <span class="string">recent</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">timeline</span> <span class="string">type:fcircle</span> <span class="string">api:https://raw.githubusercontent.com/xaoxuu/friends-rss-generator/output/data.json</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endtimeline</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>api</code> 部分替换为自己仓库地址及其对应的 <code>data.json</code> 文件真实路径。</p><p>其中，<code>post_list: true</code> 意味着页面会显示首页文章导航栏，搭配主题配置文件中的：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post-index:</span></span><br><span class="line">  <span class="string">&#x27;朋友文章&#x27;</span><span class="string">:</span> <span class="string">/friends/rss/</span></span><br></pre></td></tr></table></figure><p>即可实现在首页增加一个「朋友文章」栏目的效果。</p></div></div></div><blockquote><ul><li>你依然可以按照官方教程使用完整版。</li><li>本站示例仓库：<a href="https://github.com/xaoxuu/friends-rss-generator">@xaoxuu&#x2F;friends-rss-generator</a></li></ul></blockquote><p>如果把 <code>data.json</code> 输出到 <a href="https://github.com/xaoxuu/friends-rss-generator/blob/a97f385398928d2c0b5c7988cff34505eb3ae8fd/.github/workflows/main.yml#L115">output</a> 分支，可以直接使用下面的 API 来访问文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>编写文章以及独立页面</title>
      <link href="/wiki/stellar/pages/index.html"/>
      <url>/wiki/stellar/pages/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="文章摘要卡片"><a href="#文章摘要卡片" class="headerlink" title="文章摘要卡片"></a>文章摘要卡片</h2><h3 id="封面图片"><a href="#封面图片" class="headerlink" title="封面图片"></a>封面图片</h3><p>在文章列表页面或者其他位置显示的文章摘要卡片上面的图片称之为「文章封面」</p><p>在文章的 <code>front-matter</code> 中写上 <code>cover: xxx</code> 即可。例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 本地图片路径为 blog/source/assets/xaoxuu/blog/2020-0927a@1x.svg</span></span><br><span class="line"><span class="comment"># 也可以直接引用图片直链 https://xxx.jpg</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/assets/xaoxuu/blog/2020-0927a@1x.svg</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><details class="tag-plugin folding" ><summary><span>显示效果</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/6354e0a216f2c2beb100617c.jpg" style="width:600px;"/></div></div></div></details><p>上面这种方式会显示title与description或者摘要，若你想要图片全显示，可以加入如下参数：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/assets/xaoxuu/blog/2020-0927a@1x.svg</span> <span class="comment"># 必选</span></span><br><span class="line"><span class="attr">poster:</span> <span class="comment"># 海报（可选，全图封面卡片）</span></span><br><span class="line">  <span class="attr">topic:</span> <span class="string">标题上方的小字</span> <span class="comment"># 可选</span></span><br><span class="line">  <span class="attr">headline:</span> <span class="string">大标题</span> <span class="comment"># 必选</span></span><br><span class="line">  <span class="attr">caption:</span> <span class="string">标题下方的小字</span> <span class="comment"># 可选</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">标题颜色</span> <span class="comment"># 可选，默认为跟随主题的动态颜色 # white,red...</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="red"><div class="title"><strong>Stellar</strong></div><div class="body"><p>v1.14.0 更换 <code>cover-title</code> <code>cover-cat</code> <code>cover-subtitle</code> <code>cover-text-color</code> 为 <code>poster</code></p></div></div><blockquote><p>为了显示美观，建议 <code>topic</code> 和 <code>caption</code> 选择其一与 <code>headline</code> 搭配使用。</p></blockquote><details class="tag-plugin folding" ><summary><span>显示效果</span></summary><div class="body"><p>填写 <code>topic</code> 与 <code>headline</code> 时大标题位于上方</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/635aa9d016f2c2beb1fe4f53.jpg" style="width:600px;"/></div></div><p>只填写 <code>headline</code> 或填写 <code>headline</code> 与 <code>caption</code> 时大标题位于下方</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/635aaa8116f2c2beb1ffdd19.jpg" style="width:600px;"/></div></div></div></details><p>如果您想使用 Unsplash 搜索图片作为封面，可以在 <code>cover</code> 设置搜索关键词（用英文逗号隔开）：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">workout,strava</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="内容摘要"><a href="#内容摘要" class="headerlink" title="内容摘要"></a>内容摘要</h3><p>一篇文章开头一段文字描述就是摘要，摘要和正文用 <code>&lt;!-- more --&gt;</code> 隔开，前后一定要有空行。例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/assets/xaoxuu/blog/2020-0927a@1x.svg</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">在心率管家默默无闻地上线了一年多之后，现在终于打算来好好聊聊关于手机摄像头测量心率的那些事。本文参考了很多前辈的文章，将在文末列出。</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">more</span> <span class="string">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">后面是正文部分，在主页看不到。</span></span><br></pre></td></tr></table></figure><h2 id="文章页"><a href="#文章页" class="headerlink" title="文章页"></a>文章页</h2><h3 id="横幅图片"><a href="#横幅图片" class="headerlink" title="横幅图片"></a>横幅图片</h3><p>文章页面顶部区域可以显示长长的横幅图片，设置方法如下：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">banner:</span> <span class="string">/assets/xaoxuu/blog/2020-0927a@1x.svg</span></span><br></pre></td></tr></table></figure><p>如果您想使用 Unsplash 搜索图片作为横幅，可以在 <code>banner</code> 中设置搜索关键词（用英文逗号隔开）：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">banner:</span> <span class="string">workout,strava</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="指定一级标题"><a href="#指定一级标题" class="headerlink" title="指定一级标题"></a>指定一级标题</h3><p>默认的一级标题是文章的 <code>title</code>，如果希望使用别的文字作为一级标题，可以指定 <code>h1</code>，例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">h1:</span> <span class="string">快速开始</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="文章索引与推荐"><a href="#文章索引与推荐" class="headerlink" title="文章索引与推荐"></a>文章索引与推荐</h2><p>文章如果有分类和标签就会自动在主页出现「分类」、「标签」选项卡实现分类浏览，不需要手动添加页面。</p><h3 id="文章分类"><a href="#文章分类" class="headerlink" title="文章分类"></a>文章分类</h3><p>在文章列表页面会显示文章所属的第一级分类，例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">设计开发</span>, <span class="string">iOS开发</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>这样写就只会显示「设计开发」一级分类，而在文章页面顶部则会显示完整的面包屑导航。</p><h3 id="文章标签"><a href="#文章标签" class="headerlink" title="文章标签"></a>文章标签</h3><p>文章标签目前不可见，用于关键词、搜索、按标签检索、相关文章推荐等功能，例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">iOS</span>, <span class="string">心率</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>填写引用文章的标题和链接：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">references:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">&#x27;心跳之旅—💗—iOS用手机摄像头检测心率(PPG)&#x27;</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://punmy.cn/2016/07/28/15231176397746.html</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">&#x27;PPG光电容积脉搏波描记法技术概况&#x27;</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.jianshu.com/p/695c131abfa5</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>效果见这篇文章：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/blog/20200927/#references" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/blog/20200927/#references</span><span class="cap link fs12">https://xaoxuu.com/blog/20200927/#references</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="更多的独立页面"><a href="#更多的独立页面" class="headerlink" title="更多的独立页面"></a>更多的独立页面</h2><p>Stellar 同时具有博客和 Wiki 两个大模块，为了能够正确进行导航栏高亮，引入了 <code>menu_id</code> 来进行区分，通常情况下，<code>layout: post</code> 和 <code>layout: wiki</code> 两种布局模板可以自动为 <code>sidebar.menu.post</code> 和 <code>sidebar.menu.wiki</code> 的导航栏按钮高亮。自己创建的独立页面也可以在 <code>front-matter</code> 中指定 <code>menu_id</code> 来使某个按钮处于选中状态。</p><p>例如您有关于、友链两个页面，都希望高亮「更多」按钮：</p><figure class="highlight yaml"><figcaption><span>blog/source/about/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">menu_id:</span> <span class="string">more</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">关于</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>blog/source/friends/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">menu_id:</span> <span class="string">more</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">友链</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>在主题配置文件中设置导航栏：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="attr">more:</span> <span class="string">&#x27;[更多](/more/)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="友链页面"><a href="#友链页面" class="headerlink" title="友链页面"></a>友链页面</h2><p>友链被设计成标签，您可以在任何页面任何位置插入友链，详见：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="#友链标签" href="https://xaoxuu.com/wiki/stellar/tag-plugins/#友链标签" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">#友链标签</span><span class="cap link fs12">https://xaoxuu.com/wiki/stellar/tag-plugins/#友链标签</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="关于页面"><a href="#关于页面" class="headerlink" title="关于页面"></a>关于页面</h2><p>没有单独的关于页面布局，您可以自由组合丰富的标签来实现个性化的关于页面，例如：<code>about</code>、<code>tabs</code>、<code>navbar</code>、<code>quot</code>、<code>timeline</code> 标签。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>更新日志和近期计划</title>
      <link href="/wiki/stellar/releases/index.html"/>
      <url>/wiki/stellar/releases/index.html</url>
      
        <content type="html"><![CDATA[<p>版本命名规范：【大版本.小版本.修复版本】</p><ul><li>大版本：较大范围改动和设计调整、重构</li><li>小版本：较小范围改动、增加删除功能，也可能包含部分修复</li><li>修复版本：仅包含修复，可放心无缝升级</li></ul><div class="tag-plugin note" color="green"><div class="title"><strong>如何关注主题更新</strong></div><div class="body"><p>例如，您可以在自己博客任意位置用时间线标签显示主题最近一个版本更新内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tag-plugin tabs" align="left"id="tab_18""><ul class="nav-tabs"><li class="tab active"><a href="#tab_18-1">更新日志</a></li><li class="tab"><a href="#tab_18-2">Todo</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_18-1"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=10"></div></div><div class="tab-pane" id="tab_18-2"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?labels=todo&per_page=20"></div></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>评论插件配置</title>
      <link href="/wiki/stellar/comments/index.html"/>
      <url>/wiki/stellar/comments/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="Beaudar"><a href="#Beaudar" class="headerlink" title="Beaudar"></a>Beaudar</h2><p>Beaudar 是 Utterances 的中文版本，相比 Utterances 有更多的体验优化，可以按时间倒序排序。</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">beaudar</span></span><br><span class="line">  <span class="attr">beaudar:</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">xaoxuu/blog-comments</span></span><br></pre></td></tr></table></figure><p><a href="https://beaudar.lipk.org/">Beaudar</a> 的配置方法很简单，创建一个仓库，在仓库中创建一个 <a href="https://github.com/xaoxuu/blog-comments/blob/main/beaudar.json">域名白名单文件</a>，然后在 <a href="https://github.com/apps/beaudar">此处</a> 授权安装即可。</p><h2 id="utterances"><a href="#utterances" class="headerlink" title="utterances"></a>utterances</h2><p>A lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments, wiki pages and more!</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">utterances</span></span><br><span class="line">  <span class="attr">utterances:</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">xaoxuu/blog-comments</span></span><br></pre></td></tr></table></figure><p><a href="https://utteranc.es/">utterances</a> 的配置方法很简单，创建一个仓库，在仓库中创建一个 <a href="https://github.com/xaoxuu/blog-comments/blob/main/utterances.json">域名白名单文件</a>，然后在 <a href="https://github.com/apps/utterances">此处</a> 授权安装即可。</p><h2 id="giscus"><a href="#giscus" class="headerlink" title="giscus"></a>giscus</h2><p><a href="https://giscus.app/zh-CN">giscus</a> 是由 GitHub Discussions 驱动的评论系统。让访客借助 GitHub 在你的网站上留下评论和反应吧！本项目受 utterances 强烈启发。</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">giscus</span></span><br><span class="line">  <span class="comment"># giscus</span></span><br><span class="line">  <span class="comment"># https://giscus.app/zh-CN</span></span><br><span class="line">  <span class="attr">giscus:</span></span><br><span class="line">    <span class="attr">data-repo:</span> <span class="string">xxx/xxx</span> <span class="comment"># [在此输入仓库]</span></span><br><span class="line">    <span class="attr">data-repo-id:</span> <span class="comment"># [在此输入仓库 ID]</span></span><br><span class="line">    <span class="attr">data-category:</span> <span class="comment"># [在此输入分类名]</span></span><br><span class="line">    <span class="attr">data-category-id:</span></span><br><span class="line">    <span class="attr">data-mapping:</span> <span class="string">pathname</span></span><br><span class="line">    <span class="attr">data-strict:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">data-reactions-enabled:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">data-emit-metadata:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">data-input-position:</span> <span class="string">top</span> <span class="comment"># top, bottom</span></span><br><span class="line">    <span class="attr">data-theme:</span> <span class="string">preferred_color_scheme</span></span><br><span class="line">    <span class="attr">data-lang:</span> <span class="string">zh-CN</span></span><br><span class="line">    <span class="attr">data-loading:</span> <span class="string">lazy</span></span><br><span class="line">    <span class="attr">crossorigin:</span> <span class="string">anonymous</span></span><br></pre></td></tr></table></figure><h2 id="Twikoo"><a href="#Twikoo" class="headerlink" title="Twikoo"></a>Twikoo</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">twikoo</span></span><br><span class="line">  <span class="attr">twikoo:</span></span><br><span class="line">    <span class="attr">envId:</span> <span class="string">https://xxx</span> <span class="comment"># vercel函数</span></span><br></pre></td></tr></table></figure><h2 id="waline"><a href="#waline" class="headerlink" title="waline"></a>waline</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">waline</span></span><br><span class="line">  <span class="attr">waline:</span></span><br><span class="line">    <span class="attr">js:</span> <span class="string">https://unpkg.com/@waline/client@v2/dist/waline.js</span></span><br><span class="line">    <span class="attr">css:</span> <span class="string">https://unpkg.com/@waline/client@v2/dist/waline.css</span></span><br><span class="line">    <span class="comment"># Waline server address url, you should set this to your own link</span></span><br><span class="line">    <span class="attr">serverURL:</span> <span class="string">https://xxx</span> <span class="comment"># waline 地址</span></span><br><span class="line">    <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">    <span class="attr">commentCount:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Pageviews count, <span class="doctag">Note:</span> You should not enable both `waline.pageview` and `leancloud_visitors`.</span></span><br><span class="line">    <span class="attr">pageview:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Custom locales</span></span><br><span class="line">    <span class="attr">locale:</span></span><br><span class="line">      <span class="attr">placeholder:</span> <span class="comment"># 输入框内提示文字</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Custom emoji</span></span><br><span class="line">    <span class="attr">emoji:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="string">https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/weibo</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/alus</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/bilibili</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/qq</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/tieba</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/tw-emoji</span></span><br><span class="line">    <span class="comment">#   - https://unpkg.com/@waline/emojis@1.1.0/bmoji</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Comment infomation, valid meta are nick, mail and link</span></span><br><span class="line">    <span class="comment"># meta:</span></span><br><span class="line">    <span class="comment">#   - 昵称</span></span><br><span class="line">    <span class="comment">#   - 邮箱</span></span><br><span class="line">    <span class="comment">#   - 链接</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set required meta field, e.g.: [nick] | [nick, mail]</span></span><br><span class="line">    <span class="comment"># requiredMeta:</span></span><br><span class="line">    <span class="comment">#   - nick</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Language, available values: en-US, zh-CN, zh-TW, pt-BR, ru-RU, jp-JP</span></span><br><span class="line">    <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">wordLimit:</span> <span class="number">0</span> <span class="comment"># 字数限制，0为不限制字数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Whether enable login, can choose from &#x27;enable&#x27;, &#x27;disable&#x27; and &#x27;force&#x27;</span></span><br><span class="line">    <span class="comment"># login: enable</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># comment per page</span></span><br><span class="line">    <span class="attr">pageSize:</span> <span class="number">5</span> <span class="comment"># 每页显示评论数</span></span><br></pre></td></tr></table></figure><h2 id="valine"><a href="#valine" class="headerlink" title="valine"></a>valine</h2><p>Stellar 1.13.0 已移除对 Valine 评论的支持。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>侧边栏配置</title>
      <link href="/wiki/stellar/sidebar/index.html"/>
      <url>/wiki/stellar/sidebar/index.html</url>
      
        <content type="html"><![CDATA[<div class="tag-plugin note" color="red"><div class="title"><strong>Stellar 1.11.0</strong></div><div class="body"><p>侧边栏组件配置从<code> _config.yml</code> 中转移到数据文件 <code>_data/widgets.yml</code> 中，且仅支持在数据文件中配置。同时布局由 <code>sidebar.widgets_layout</code> 改名为 <code>sidebar.widgets</code></p></div></div><h2 id="Logo"><a href="#Logo" class="headerlink" title="Logo"></a>Logo</h2><p>左上角的 logo 和标题取自站点根目录的配置文件：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">网站名称</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">头像</span></span><br></pre></td></tr></table></figure><p>设置鼠标指上 <code>subtitle</code> 后翻转另一行字（您可以将鼠标移至左上角的Stellar查看效果）</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">subtitle:</span>  <span class="string">标题1</span> <span class="string">|</span> <span class="string">标题2</span></span><br></pre></td></tr></table></figure><p>如果您想用一个图片作为 logo，可以直接在主题配置文件 sidebar.logo.title 中设置：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;[&lt;img no-lazy height=&quot;32px&quot; src=&quot;xxx&quot;/&gt;](/)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="主导航栏"><a href="#主导航栏" class="headerlink" title="主导航栏"></a>主导航栏</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="attr">post:</span> <span class="string">&#x27;[btn.blog](/)&#x27;</span></span><br><span class="line">    <span class="attr">wiki:</span> <span class="string">&#x27;[btn.wiki](/wiki/)&#x27;</span></span><br><span class="line">    <span class="attr">notes:</span> <span class="string">&#x27;[笔记](/notes/)&#x27;</span></span><br><span class="line">    <span class="attr">more:</span> <span class="string">&#x27;[更多](/more/)&#x27;</span></span><br></pre></td></tr></table></figure><p>侧边栏宽度有限，如何在不影响观感的情况下设置更多的主导航栏按钮呢？建议设置一个「更多」按钮，然后在「更多」页面的侧边栏放上列表组件。</p><h2 id="个性化组件"><a href="#个性化组件" class="headerlink" title="个性化组件"></a>个性化组件</h2><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/wiki/stellar/widgets/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/wiki/stellar/widgets/</span><span class="cap link fs12">https://xaoxuu.com/wiki/stellar/widgets/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="页脚"><a href="#页脚" class="headerlink" title="页脚"></a>页脚</h2><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">social:</span></span><br><span class="line">    <span class="attr">github:</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">&#x27;&lt;img src=&quot;/assets/placeholder/social/08a41b181ce68.svg&quot;/&gt;&#x27;</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://</span></span><br><span class="line">    <span class="attr">music:</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">&#x27;&lt;img src=&quot;/assets/placeholder/social/3845874.svg&quot;/&gt;&#x27;</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://</span></span><br><span class="line">    <span class="attr">unsplash:</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">&#x27;&lt;img src=&quot;/assets/placeholder/social/3616429.svg&quot;/&gt;&#x27;</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://</span></span><br><span class="line">    <span class="attr">comments:</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">&#x27;&lt;img src=&quot;/assets/placeholder/social/942ebbf1a4b91.svg&quot;/&gt;&#x27;</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://</span></span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>使用标签插件增强阅读体验</title>
      <link href="/wiki/stellar/tag-plugins/index.html"/>
      <url>/wiki/stellar/tag-plugins/index.html</url>
      
        <content type="html"><![CDATA[<p>新版标签插件和 Hexo 官方的标签插件统一使用空格分隔，所以如果参数内容中需要出现的空格被意外分隔开了的时候，请使用 <code>&amp;nbsp;</code> 代替。为了方便理解，本文档语法格式中的可选参数用方括号括起来，键值对参数用冒号分隔开，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% image src description [download:bool/string] %&#125;</span><br></pre></td></tr></table></figure><p>就表明第一个参数是图片链接，第二个参数是图片描述，而 <code>download</code> 是可选参数，并且值是布尔或字符串类型。</p><details class="tag-plugin folding" ><summary><span>了解参数解析规则</span></summary><div class="body"><p>以图片标签为例，使用空格分隔开之后得到一个数组，如果图片描述文字中有空格，多分出来的这些「参数」被合并到最后一个「非键值对参数」中，什么是「非键值对参数」呢？举个例子您就明白了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% image /assets/wiki/stellar/photos/183e71e0ad995.jpg 来自印度的 Rohit Vohra 使用 iPhone 12 Pro Max 拍摄。 download:https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple_ShotoniPhone-rohit_vohra_12172020.zip %&#125;</span><br></pre></td></tr></table></figure><p>这个例子中，<code>download:https://xxxx</code> 是有冒号分隔开的，<code>download</code> 为键，后面的网址为值，所以叫做「键值对参数」；与此相对的，没有冒号分隔的就叫做「非键值对参数」。键值对参数可以放在任何位置，我可以通过匹配键来解析，而非键值对参数则只能通过顺序解析，所以它们必须和文档中要求的前后顺序一致。</p><p>一般核心的、重要的参数会设置成非键值对参数，而可选参数设置成键值对参数。</p></div></details><h2 id="文本修饰标签集"><a href="#文本修饰标签集" class="headerlink" title="文本修饰标签集"></a>文本修饰标签集</h2><ul><li>支持多彩标记标签，包括：<mark class="tag-plugin mark" color="dark">默认</mark> <mark class="tag-plugin mark" color="red">红</mark> <mark class="tag-plugin mark" color="orange">橙</mark> <mark class="tag-plugin mark" color="yellow">黄</mark> <mark class="tag-plugin mark" color="green">绿</mark> <mark class="tag-plugin mark" color="cyan">青</mark> <mark class="tag-plugin mark" color="blue">蓝</mark> <mark class="tag-plugin mark" color="purple">紫</mark> <mark class="tag-plugin mark" color="light">浅</mark> <mark class="tag-plugin mark" color="dark">深</mark> <mark class="tag-plugin mark" color="warning">警告</mark> <mark class="tag-plugin mark" color="error">错误</mark> 一共 12 种颜色。</li><li>这是 <psw>密码</psw> 标签</li><li>这是 <u>下划线</u> 标签</li><li>这是 <emp>着重号</emp> 标签</li><li>这是 <wavy>波浪线</wavy> 标签</li><li>这是 <del>删除线</del> 标签</li><li>这是 <sup class="tag-plugin sup" color="red">上角标</sup> 标签</li><li>这是 <sub class="tag-plugin sub" >下角标</sub> 标签</li><li>这是 <kbd>键盘样式</kbd> 标签，试一试：<kbd>⌘</kbd> + <kbd>D</kbd></li></ul><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 支持多彩标记标签，包括：&#123;% mark 默认 %&#125; &#123;% mark 红 color:red %&#125; &#123;% mark 橙 color:orange %&#125; &#123;% mark 黄 color:yellow %&#125; &#123;% mark 绿 color:green %&#125; &#123;% mark 青 color:cyan %&#125; &#123;% mark 蓝 color:blue %&#125; &#123;% mark 紫 color:purple %&#125; &#123;% mark 浅 color:light %&#125; &#123;% mark 深 color:dark %&#125; &#123;% mark 警告 color:warning %&#125; &#123;% mark 错误 color:error %&#125; 一共 12 种颜色。</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% psw 密码 %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% u 下划线 %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% emp 着重号 %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% wavy 波浪线 %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% del 删除线 %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% sup 上角标 color:red %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% sub 下角标 %&#125; 标签</span><br><span class="line"><span class="bullet">-</span> 这是 &#123;% kbd 键盘样式 %&#125; 标签，试一试：&#123;% kbd ⌘ %&#125; + &#123;% kbd D %&#125;</span><br></pre></td></tr></table></figure><h2 id="Emoji（表情标签）"><a href="#Emoji（表情标签）" class="headerlink" title="Emoji（表情标签）"></a>Emoji（表情标签）</h2><p>内置了可配置的表情标签<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="/assets/emoji/qq/爱你.gif"/></span>使用方法如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% emoji 爱你 %&#125;</span><br></pre></td></tr></table></figure><p>语法格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% emoji [source] name [height:1.75em] %&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>source</code> 可省略，默认为配置中的第一个 <code>source</code>：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">emoji:</span></span><br><span class="line">    <span class="attr">default:</span> <span class="string">https://fastly.jsdelivr.net/gh/cdn-x/emoji/qq/%s.gif</span></span><br><span class="line">    <span class="attr">twemoji:</span> <span class="string">https://fastly.jsdelivr.net/gh/twitter/twemoji/assets/svg/%s.svg</span></span><br><span class="line">    <span class="attr">qq:</span> <span class="string">https://fastly.jsdelivr.net/gh/cdn-x/emoji/qq/%s.gif</span></span><br><span class="line">    <span class="attr">aru:</span> <span class="string">https://fastly.jsdelivr.net/gh/cdn-x/emoji/aru-l/%s.gif</span></span><br><span class="line">    <span class="attr">tieba:</span> <span class="string">https://fastly.jsdelivr.net/gh/cdn-x/emoji/tieba/%s.png</span></span><br></pre></td></tr></table></figure><div class="tag-plugin note" ><div class="body"><p>在配置文件中，文件名用 <code>%s</code> 代替。这种集成方式虽然不那么优雅，但也能用，主要是配置起来比较灵活。 <span class="tag-plugin emoji"><img no-lazy="" class="inline" src="/assets/emoji/aru-l/0180.gif"/></span><br>如果对高度有特别要求，可以指定高度，例如：<span class="tag-plugin emoji"><img no-lazy="" class="inline" src="/assets/emoji/aru-l/5150.gif" style="height:3em"/></span></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% emoji aru 5150 height:3em %&#125;</span><br></pre></td></tr></table></figure></div></div><blockquote><p>表情速查表：<a href="https://www.hermitlsr.top/2021-08-02/stellar%E8%A1%A8%E6%83%85%E6%8F%92%E4%BB%B6%E7%B4%A2%E5%BC%95/">stellar表情标签索引</a></p></blockquote><h2 id="Image（图片标签）"><a href="#Image（图片标签）" class="headerlink" title="Image（图片标签）"></a>Image（图片标签）</h2><p>图片标签是一个精心设计的应对各种尺寸插图的标签，对于大图，可以放置一个「下载」按钮，语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% image src [description] [download:bool/string] [width:px] [padding:px] [bg:hex] %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>参数说明</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">src:</span> <span class="string">图片地址</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">图片描述</span></span><br><span class="line"><span class="attr">download:</span> <span class="string">href</span> <span class="comment"># 下载地址，设置此值后鼠标放在图片上会显示下载地址，如果下载地址为图片地址，可以设置为 true</span></span><br><span class="line"><span class="attr">width:</span> <span class="string">200px</span> <span class="comment"># 图片宽度</span></span><br><span class="line"><span class="attr">padding:</span> <span class="string">16px</span> <span class="comment"># 图片四周填充宽度</span></span><br><span class="line"><span class="attr">bg:</span> <span class="string">&#x27;#ffffff&#x27;</span> <span class="comment"># 图片区域背景颜色，16进制</span></span><br></pre></td></tr></table></figure><h3 id="大尺寸图片"><a href="#大尺寸图片" class="headerlink" title="大尺寸图片"></a>大尺寸图片</h3><p>无论在什么宽度的设备上都希望横向铺满的图片，一般不需要额外操作。可以在链接后面写上图片描述，如有必要，可以通过设置 <code>download:true</code> 使其显示一个「下载」按钮链接指向图片地址，如果下载链接与显示的图片地址不同，可以 <code>download:下载链接</code> 来使其能够下载原图。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/stellar/photos/183e71e0ad995.jpg" alt="来自印度的 Rohit Vohra 使用 iPhone 12 Pro Max 拍摄。"/><a class="image-download blur" style="opacity:0" href="https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple_ShotoniPhone-rohit_vohra_12172020.zip"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">来自印度的 Rohit Vohra 使用 iPhone 12 Pro Max 拍摄。</span></div></div><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/stellar/photos/bc7bda18328da.jpg" alt="来自澳大利亚的 Pieter de Vries 使用 iPhone 12 Pro Max 拍摄。"/><a class="image-download blur" style="opacity:0" href="https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple_ShotoniPhone_pieter_de_vries_011221.zip"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">来自澳大利亚的 Pieter de Vries 使用 iPhone 12 Pro Max 拍摄。</span></div></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% image /assets/wiki/stellar/photos/183e71e0ad995.jpg 来自印度的 Rohit Vohra 使用 iPhone 12 Pro Max 拍摄。 download:https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple<span class="emphasis">_ShotoniPhone-rohit_</span>vohra<span class="emphasis">_12172020.zip %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% image /assets/wiki/stellar/photos/bc7bda18328da.jpg 来自澳大利亚的 Pieter de Vries 使用 iPhone 12 Pro Max 拍摄。 download:https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple_</span>ShotoniPhone<span class="emphasis">_pieter_</span>de<span class="emphasis">_vries_</span>011221.zip %&#125;</span><br></pre></td></tr></table></figure><h3 id="小尺寸图片优化"><a href="#小尺寸图片优化" class="headerlink" title="小尺寸图片优化"></a>小尺寸图片优化</h3><p>宽度较小而高度较大的图片，可以设置宽、高、填充间距、背景色等对其布局进行优化，使得它在不同宽度的屏幕下都能获得不错的视觉体验：</p><div class="tag-plugin tabs"id="tab_19""><ul class="nav-tabs"><li class="tab active"><a href="#tab_19-1">有底色的图片</a></li><li class="tab"><a href="#tab_19-2">没有底色的图片</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_19-1"><p>有底色的图片，可以填充图片底色：</p><div class="tag-plugin image"><div class="image-bg" style="background:white;padding:16px;"><img src="/assets/xaoxuu/mirror/apple/documentation/watchkit/06d45110-1dd7-49a4-a413-9f5159ecdd0e.png" style="width:200px;"/></div></div><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% image /assets/xaoxuu/mirror/apple/documentation/watchkit/06d45110-1dd7-49a4-a413-9f5159ecdd0e.png width:200px padding:16px bg:white %&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin note" ><div class="title"><strong>提示</strong></div><div class="body"><p>鼠标拖拽一下图片可以看看原图</p></div></div><details class="tag-plugin folding" ><summary><span>如果不进行约束，在宽屏设备上阅读体验很糟糕（为不影响阅读体验，已为您折叠过长的内容）</span></summary><div class="body"><div class="tag-plugin image"><div class="image-bg"><img src="/assets/xaoxuu/mirror/apple/documentation/watchkit/06d45110-1dd7-49a4-a413-9f5159ecdd0e.png"/></div></div></div></details></div><div class="tab-pane" id="tab_19-2"><p>没有底色的图片，可以填充 <code>bg:var(--card)</code> 动态颜色，能够适配暗黑模式：</p><div class="tag-plugin image"><div class="image-bg" style="background:var(--card);padding:16px;"><img src="/assets/wiki/stellar/icon.svg" style="width:100px;"/></div></div><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% image /assets/wiki/stellar/icon.svg bg:var(--card) padding:16px %&#125;</span><br></pre></td></tr></table></figure></div></div></div><h3 id="支持-Fancybox-插件点击放大"><a href="#支持-Fancybox-插件点击放大" class="headerlink" title="支持 Fancybox 插件点击放大"></a>支持 Fancybox 插件点击放大</h3><p>由于 Stellar 主题的插件具有按需加载的特性，所以 Fancybox 插件默认也是已经配置好了的，在任意 <code>image</code> 标签中增加 <code>fancybox:true</code> 参数即可为特定图片开启缩放功能。如果一个页面没有任何地方使用，则不会加载 Fancybox 插件。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/2022/Apple_Shot-on-iphone-macro-challenge_Cat_big.jpg.large_2x.jpg" alt="图片来自 Apple 官网" fancybox="true"/><a class="image-download blur" style="opacity:0" href="https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/2022/Images-of-Shot-on-iphone-macro-challenge.zip"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">图片来自 Apple 官网</span></div></div><p>如果您希望全站所有的 <code>image</code> 标签都开启此功能，可在主题配置文件中修改以下参数：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">######## Tag Plugins ########</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="comment"># &#123;% image %&#125;</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="Quot（引用标签）"><a href="#Quot（引用标签）" class="headerlink" title="Quot（引用标签）"></a>Quot（引用标签）</h2><p>适合居中且醒目的引用：<p class="tag-plugin quot" type="text">Stellar 是最好用的主题</p></p><p>支持自定义引号：<p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e07da3.png" />热门话题</p></p><p>其中自定义引号素材在主题配置文件的 <code>tag_plugins.quot</code> 中配置。</p><details class="tag-plugin folding" child="codeblock" open><summary><span>写法如下</span></summary><div class="body"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">适合居中且醒目的引用：&#123;% quot Stellar 是最好用的主题 %&#125;</span><br><span class="line">支持自定义引号：&#123;% quot 热门话题 icon:hashtag %&#125;</span><br></pre></td></tr></table></figure></div></details><p class="tag-plugin quot" type="icon"><img class="icon prefix" src="https://bu.dusays.com/2022/10/24/63567d3e092ff.png" />特别引用<img class="icon suffix" src="https://bu.dusays.com/2022/10/24/63567d3e0ab55.png" /></p><blockquote><p>此外，加上 <code>el:h2/h3/h4/h5/h6</code> 可以作为标题使用</p></blockquote><h2 id="Poetry（诗词标签）"><a href="#Poetry（诗词标签）" class="headerlink" title="Poetry（诗词标签）"></a>Poetry（诗词标签）</h2><div class="tag-plugin poetry"><div class="title">游山西村</div><div class="meta"><span>陆游</span></div><div class="body"><p>莫笑农家腊酒浑，丰年留客足鸡豚。<br><strong>山重水复疑无路，柳暗花明又一村。</strong><br>箫鼓追随春社近，衣冠简朴古风存。<br>从今若许闲乘月，拄杖无时夜叩门。</p></div><div class="footer">诗词节选</div></div><details class="tag-plugin folding" child="codeblock" open><summary><span>写法如下</span></summary><div class="body"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% poetry 游山西村 author:陆游 footer:诗词节选 %&#125;</span><br><span class="line">莫笑农家腊酒浑，丰年留客足鸡豚。</span><br><span class="line">**山重水复疑无路，柳暗花明又一村。**</span><br><span class="line">箫鼓追随春社近，衣冠简朴古风存。</span><br><span class="line">从今若许闲乘月，拄杖无时夜叩门。</span><br><span class="line">&#123;% endpoetry %&#125;</span><br></pre></td></tr></table></figure></div></details><h2 id="Note（备注标签）"><a href="#Note（备注标签）" class="headerlink" title="Note（备注标签）"></a>Note（备注标签）</h2><figure class="highlight md"><figcaption><span>语法格式</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% note [title] content [color:color] %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>参数说明</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">标题（可选）</span></span><br><span class="line"><span class="attr">content:</span> <span class="string">内容</span></span><br><span class="line"><span class="attr">color:</span> <span class="string">red/orange/yellow/green/cyan/blue/purple/light/dark/warning/error</span></span><br></pre></td></tr></table></figure><h3 id="具有标题的备注标签"><a href="#具有标题的备注标签" class="headerlink" title="具有标题的备注标签"></a>具有标题的备注标签</h3><p>直接写备注内容，默认是和代码块一样的样式，第一个空格前面的是标题，后面的是正文，如果标题中需要显示空格，请使用 <code>&amp;nbsp;</code> 代替。</p><div class="tag-plugin note" ><div class="title"><strong>这&nbsp;是标题</strong></div><div class="body"><p>这是正文 哈哈。</p></div></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% note 这&amp;nbsp;是标题 这是正文 哈哈。 %&#125;</span><br></pre></td></tr></table></figure><h3 id="彩色备注标签"><a href="#彩色备注标签" class="headerlink" title="彩色备注标签"></a>彩色备注标签</h3><div class="tag-plugin note" ><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="red"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="orange"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="yellow"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="green"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="cyan"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="blue"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="purple"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="light"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="dark"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="warning"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><div class="tag-plugin note" color="error"><div class="title"><strong>一共支持12种颜色，可以满足几乎所有的需求了。</strong></div><div class="body"><p>color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。</p></div></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% note 一共支持12种颜色，可以满足几乎所有的需求了。 color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 %&#125;</span><br><span class="line">&#123;% note color:cyan 一共支持12种颜色，可以满足几乎所有的需求了。 color 可设置 red、orange、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 %&#125;</span><br></pre></td></tr></table></figure><h2 id="Border（边框标签）"><a href="#Border（边框标签）" class="headerlink" title="Border（边框标签）"></a>Border（边框标签）</h2><p>border 标签和 note 标签样式相同：</p><div class="tag-plugin note" color="warning"><div class="title"><strong>Stellar v1.12.0</strong></div><div class="body"><p>因为原 noteblock 标签在升级到 hexo 6.0 之后跟官方库冲突了，官方一直没有解释原因，后不得不改名：<br>noteblock -&gt; grid -&gt; border<br>详情见：<a href="https://github.com/volantis-x/hexo-theme-volantis/issues/712">#172</a></p></div></div><figure class="highlight md"><figcaption><span>语法格式</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% border [title] [color:color] [child:codeblock/tabs] %&#125;</span><br><span class="line">...</span><br><span class="line">&#123;% endborder %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% border Stellar v1.12.0 color:warning %&#125;</span><br><span class="line">因为原 noteblock 标签在升级到 hexo 6.0 之后跟官方库冲突了，官方一直没有解释原因，后不得不改名：</span><br><span class="line">noteblock -&gt; grid -&gt; border</span><br><span class="line">详情见：[<span class="string">#172</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/issues/712</span>)</span><br><span class="line">&#123;% endborder %&#125;</span><br></pre></td></tr></table></figure><h3 id="彩色代码块"><a href="#彩色代码块" class="headerlink" title="彩色代码块"></a>彩色代码块</h3><p>设置 <code>child:codeblock</code> 并设置 <code>color:颜色枚举</code> 可以实现 10 种不同颜色的代码块，彩色代码块一般可以用在代码正确与错误的示范对比场景。</p><p>推荐的写法：</p><div class="tag-plugin note" color="green" child="codeblock"><div class="body"><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">test</span>() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>不推荐的写法：</p><div class="tag-plugin note" color="red" child="codeblock"><div class="body"><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">test</span>() -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">func</span> <span class="title function_">test</span>() -&gt; () &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h3 id="嵌套其它标签"><a href="#嵌套其它标签" class="headerlink" title="嵌套其它标签"></a>嵌套其它标签</h3><div class="tag-plugin note" child="tabs"><div class="body"><div class="tag-plugin tabs"id="tab_20""><ul class="nav-tabs"><li class="tab active"><a href="#tab_20-1">图文混排</a></li><li class="tab"><a href="#tab_20-2">示例代码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_20-1"><div class="tag-plugin image"><div class="image-bg"><img src="/assets/xaoxuu/blog/2020-0627a@2x.webp" alt="个人电脑作为办公设备时，我们该如何保护隐私？"/><a class="image-download blur" style="opacity:0" href="/assets/xaoxuu/blog/2020-0627a@2x.webp"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">个人电脑作为办公设备时，我们该如何保护隐私？</span></div></div>公司一般都会强制安装安防软件，这些软件要求开机自启动，要求有屏幕录制权限、完全的磁盘访问权限包括相册图库。因此如果使用自己的 MacBook 作为办公设备，必须要把生活区和工作区完全独立开，安装在两个磁盘分区，并且对磁盘分区进行加密。</div><div class="tab-pane" id="tab_20-2"><script src="https://gist.github.xaox.cc/xaoxuu/c983c958ef0deab819376c231e977ba7.js"></script></div></div></div></div></div><h2 id="Split（两列分区标签）"><a href="#Split（两列分区标签）" class="headerlink" title="Split（两列分区标签）"></a>Split（两列分区标签）</h2><p>这个功能在 <mark class="tag-plugin mark" color="dark">1.12.0</mark> 版本后开始支持，只支持显示两列，且手机端会恢复为单列显示。</p><div class="tag-plugin split" ><div class="cell" index="0"><div class="tag-plugin image"><div class="image-bg"><img src="https://images.unsplash.com/photo-1653979731557-530f259e0c2c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80"/><a class="image-download blur" style="opacity:0" href="https://unsplash.com/photos/bcql6CtuNv0/download?ixid=MnwxMjA3fDB8MXx0b3BpY3x8NnNNVmpUTFNrZVF8fHx8fDJ8fDE2Njg4NDAxMDI&force=true"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div></div></div><div class="cell" index="1"><p><strong><a href="https://unsplash.com/photos/bcql6CtuNv0">Unsplash Photo</a></strong></p><p>The Galactic Center is the rotational center of the Milky Way galaxy. Its central massive object is a supermassive black hole of about 4 million solar masses, which is called Sagittarius A*. Its mass is equal to four million suns. The center is located 25,800 light years away from Earth.</p><blockquote><p>Ōwhiro Bay, Wellington, New Zealand<br>Published on May 31, 2022<br>SONY, ILCE-6000<br>Free to use under the Unsplash License</p></blockquote></div></div><p>块样式：</p><div class="tag-plugin split" bg="block"><div class="cell" index="0"><center>左侧内容</center></div><div class="cell" index="1"><center>右侧内容</center></div></div><p>卡片样式：</p><div class="tag-plugin split" bg="card"><div class="cell" index="0"><center>左侧内容</center></div><div class="cell" index="1"><center>右侧内容</center></div></div><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% split bg:block %&#125;</span><br><span class="line">&lt;!-- cell left --&gt;</span><br><span class="line">&lt;center&gt;左侧内容&lt;/center&gt;</span><br><span class="line">&lt;!-- cell right --&gt;</span><br><span class="line">&lt;center&gt;右侧内容&lt;/center&gt;</span><br><span class="line">&#123;% endsplit %&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>bg</code> 为可选参数，默认没有背景，可设置为 <code>block/card</code> 两种样式</p></blockquote><h2 id="Folding（折叠块标签）"><a href="#Folding（折叠块标签）" class="headerlink" title="Folding（折叠块标签）"></a>Folding（折叠块标签）</h2><p>折叠块标签的语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folding title [codeblock:bool] [open:bool] [color:color] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>参数说明</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line"><span class="attr">open:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line"><span class="attr">color:</span> <span class="string">red/orange/yellow/green/cyan/blue/purple/light/dark</span></span><br></pre></td></tr></table></figure><h3 id="彩色可折叠代码块"><a href="#彩色可折叠代码块" class="headerlink" title="彩色可折叠代码块"></a>彩色可折叠代码块</h3><p>备注标签相较于旧版进行了增强，可以实现更多种颜色，还可以通过设置 <code>child:codeblock</code> 来实现可折叠的代码块。以下是一个默认打开的代码折叠框：</p><details class="tag-plugin folding" color="yellow" child="codeblock" open><summary><span>默认打开的代码折叠框</span></summary><div class="body"><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">test</span>() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></details><p>代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folding child:codeblock open:true color:yellow 默认打开的代码折叠框 %&#125;</span><br><span class="line">代码块</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><details class="tag-plugin folding" color="yellow"><summary><span>危险，请不要打开这个</span></summary><div class="body"><p>通过设置颜色，以实现更醒目的作用，但不要滥用色彩哦～</p><details class="tag-plugin folding" color="orange"><summary><span>警告，真的很危险</span></summary><div class="body"><p>通过设置颜色，以实现更醒目的作用，但不要滥用色彩哦～</p><details class="tag-plugin folding" color="red"><summary><span>最后一次警告，千万不要打开这个</span></summary><div class="body"><p>不要说我们没有警告过你，Windows 10 不是為所有人設計，而是為每個人設計。</p></div></details></div></details></div></details><h2 id="Folders（一组折叠标签）"><a href="#Folders（一组折叠标签）" class="headerlink" title="Folders（一组折叠标签）"></a>Folders（一组折叠标签）</h2><p>样式相比 <code>folding</code> 简单一些，适用于多个折叠标签平铺显示的场景，例如题目列表：</p><div class="tag-plugin folders" ><details class="folder" index="0"><summary><span>题目1</span></summary><div class="body"><p>这是答案1</p></div></details><details class="folder" index="1"><summary><span>题目2</span></summary><div class="body"><p>这是答案2</p></div></details><details class="folder" index="2"><summary><span>题目3</span></summary><div class="body"><p>这是答案3</p></div></details></div><p>代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folders %&#125;</span><br><span class="line">&lt;!-- folder 题目1 --&gt;</span><br><span class="line">这是答案1</span><br><span class="line">&lt;!-- folder 题目2 --&gt;</span><br><span class="line">这是答案2</span><br><span class="line">&lt;!-- folder 题目3 --&gt;</span><br><span class="line">这是答案3</span><br><span class="line">&#123;% endfolders %&#125;</span><br></pre></td></tr></table></figure><h2 id="Link（链接卡片标签）"><a href="#Link（链接卡片标签）" class="headerlink" title="Link（链接卡片标签）"></a>Link（链接卡片标签）</h2><p>外链卡片标签的语法格式为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% link href [title] [icon:src] [desc:true/false] %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>参数说明</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">href:</span> <span class="string">链接</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">可选，手动设置标题（为空时会自动抓取页面标题）</span></span><br><span class="line"><span class="attr">icon:</span> <span class="string">可选，手动设置图标（为空时会自动抓取页面图标）</span></span><br><span class="line"><span class="attr">desc:</span> <span class="string">可选，是否显示摘要描述，为true时将会显示页面描述</span></span><br></pre></td></tr></table></figure><p>不带摘要的样式：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://xaoxuu.com/blog/20221029/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon"><div class="left"><span class="title">https://xaoxuu.com/blog/20221029/</span><span class="cap link fs12">https://xaoxuu.com/blog/20221029/</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><p>带摘要的样式：</p><div class="tag-plugin link dis-select"><a class="link-card rich" title="" href="https://xaoxuu.com/blog/20221029/" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="title,icon,desc"><div class="top"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div><span class="cap link fs12">https://xaoxuu.com/blog/20221029/</span></div><div class="bottom"><span class="title">https://xaoxuu.com/blog/20221029/</span><span class="cap desc fs12"></span></div></a></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">不带摘要的样式：</span><br><span class="line">&#123;% link https://xaoxuu.com/blog/20221029/ %&#125;</span><br><span class="line">带摘要的样式：</span><br><span class="line">&#123;% link https://xaoxuu.com/blog/20221029/ desc:true %&#125;</span><br></pre></td></tr></table></figure><h2 id="Copy（复制标签）"><a href="#Copy（复制标签）" class="headerlink" title="Copy（复制标签）"></a>Copy（复制标签）</h2><p>对于单行内容，可以使用 <code>copy</code> 标签来实现复制功能：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_55" value="curl -s https://sh.xaox.cc/install | sh"><button class="copy-btn" onclick="util.copy(&quot;copy_55&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><p>您可以设置 <code>git:https</code> 或者 <code>git:ssh</code> 或者 <code>git:gh</code> 来快速放置一个 git 仓库链接：</p><div class="tag-plugin copy"><input class="copy-area" readonly id="copy_56" value="https://github.com/xaoxuu.com/hexo-theme-stellar.git"><button class="copy-btn" onclick="util.copy(&quot;copy_56&quot;,&quot;Copied!&quot;)"><svg class="icon copy-btn" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M5.75 1a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75v-3a.75.75 0 00-.75-.75h-4.5zm.75 3V2.5h3V4h-3zm-2.874-.467a.75.75 0 00-.752-1.298A1.75 1.75 0 002 3.75v9.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-9.5a1.75 1.75 0 00-.874-1.515.75.75 0 10-.752 1.298.25.25 0 01.126.217v9.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-9.5a.25.25 0 01.126-.217z"></path></svg></button></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% copy curl -s https://sh.xaox.cc/install | sh %&#125;</span><br><span class="line">&#123;% copy width:max curl -s https://sh.xaox.cc/install | sh %&#125;</span><br><span class="line">&#123;% copy git:https xaoxuu.com/hexo-theme-stellar %&#125;</span><br><span class="line">&#123;% copy git:ssh xaoxuu.com/hexo-theme-stellar %&#125;</span><br><span class="line">&#123;% copy git:gh xaoxuu.com/hexo-theme-stellar %&#125;</span><br></pre></td></tr></table></figure><h2 id="Radio（单选样式标签）"><a href="#Radio（单选样式标签）" class="headerlink" title="Radio（单选样式标签）"></a>Radio（单选样式标签）</h2><div class="tag-plugin checkbox" ><input type="radio"/><span>没有勾选的单选框</span></div><div class="tag-plugin checkbox" ><input type="radio" checked="true"/><span>已勾选的单选框</span></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% radio 没有勾选的单选框 %&#125;</span><br><span class="line">&#123;% radio checked:true 已勾选的单选框 %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>支持的参数</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">checked:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line"><span class="attr">color:</span> <span class="string">red/orange/yellow/green/cyan/blue/purple</span></span><br></pre></td></tr></table></figure><h2 id="Checkbox（复选样式标签）"><a href="#Checkbox（复选样式标签）" class="headerlink" title="Checkbox（复选样式标签）"></a>Checkbox（复选样式标签）</h2><div class="tag-plugin checkbox" ><input type="checkbox"/><span>普通的没有勾选的复选框</span></div><div class="tag-plugin checkbox" ><input type="checkbox" checked="true"/><span>普通的已勾选的复选框</span></div><div class="tag-plugin checkbox" color="green" symbol="plus"><input type="checkbox" checked="true"/><span>显示为加号的绿色的已勾选的复选框</span></div><div class="tag-plugin checkbox" color="yellow" symbol="minus"><input type="checkbox" checked="true"/><span>显示为减号的黄色的已勾选的复选框</span></div><div class="tag-plugin checkbox" color="red" symbol="times"><input type="checkbox" checked="true"/><span>显示为乘号的红色的已勾选的复选框</span></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 普通的没有勾选的复选框 %&#125;</span><br><span class="line">&#123;% checkbox checked:true 普通的已勾选的复选框 %&#125;</span><br><span class="line">&#123;% checkbox symbol:plus color:green checked:true 显示为加号的绿色的已勾选的复选框 %&#125;</span><br><span class="line">&#123;% checkbox symbol:minus color:yellow checked:true 显示为减号的黄色的已勾选的复选框 %&#125;</span><br><span class="line">&#123;% checkbox symbol:times color:red checked:true 显示为乘号的红色的已勾选的复选框 %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><figcaption><span>支持的参数</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">checked:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line"><span class="attr">color:</span> <span class="string">red/orange/yellow/green/cyan/blue/purple</span></span><br><span class="line"><span class="attr">symbol:</span> <span class="string">plus/minus/times</span></span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="yellow"><div class="body"><p>由于没有提交表单的需要，所以这个标签只是样式标签，不具有真实的单选&#x2F;复选功能。</p></div></div><h2 id="Timeline（时间线标签）"><a href="#Timeline（时间线标签）" class="headerlink" title="Timeline（时间线标签）"></a>Timeline（时间线标签）</h2><p>支持静态和动态时间线数据源。</p><h3 id="纯静态时间线"><a href="#纯静态时间线" class="headerlink" title="纯静态时间线"></a>纯静态时间线</h3><p>静态数据是写死在 <code>md</code> 源文件中的，在 <code>deploy</code> 时就已经确定了。</p><div class="tag-plugin timeline"><div class="timenode" index="0"><div class="header"><p>2021 年 2 月 16 日</p></div><div class="body fs14"><p>主要部分功能已经开发的差不多了。</p><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/stellar/photos/hello@1x.png" style="width:300px;"/></div></div></div></div><div class="timenode" index="1"><div class="header"><p>2021 年 2 月 11 日</p></div><div class="body fs14"><p>今天除夕，也是生日，一个人在外地过年+过生日，熬夜开发新主题，尽量在假期结束前放出公测版。</p></div></div></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line">&lt;!-- node 2021 年 2 月 16 日 --&gt;</span><br><span class="line">主要部分功能已经开发的差不多了。</span><br><span class="line">&#123;% image /assets/wiki/stellar/photos/hello@1x.png width:300px %&#125;</span><br><span class="line">&lt;!-- node 2021 年 2 月 11 日 --&gt;</span><br><span class="line">今天除夕，也是生日，一个人在外地过年+过生日，熬夜开发新主题，尽量在假期结束前放出公测版。</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><h3 id="纯动态时间线"><a href="#纯动态时间线" class="headerlink" title="纯动态时间线"></a>纯动态时间线</h3><p>动态数据是从 GitHub Issues 中拉取的，使用方法为：</p><ol><li>建一个仓库</li><li>创建一个 <code>issue</code> 并添加一个 <code>label</code> 进行测试</li><li>写 <code>timeline</code> 标签时加上 <code>api:https://api.github.com/repos/your-name/your-repo/issues</code></li></ol><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline api:https://api.github.com/repos/xaoxuu/blog-timeline/issues?direction=asc&amp;per_page=3 %&#125;&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/blog-timeline/issues?direction=asc&per_page=3"></div><h3 id="静态-动态"><a href="#静态-动态" class="headerlink" title="静态 + 动态"></a>静态 + 动态</h3><p>用法同静态和动态单独使用时一样，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline reversed:true api:https://api.github.com/repos/xaoxuu/blog-timeline/issues?per_page=2 %&#125;</span><br><span class="line">&lt;!-- node 这条内容为静态数据 --&gt;</span><br><span class="line">这条内容为静态数据，静态数据在 `deploy` 时就已经确定了。</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><h3 id="数据筛选"><a href="#数据筛选" class="headerlink" title="数据筛选"></a>数据筛选</h3><div class="tag-plugin folders" ><details class="folder" index="0"><summary><span>只显示某个人的数据</span></summary><div class="body"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/volantis-x/hexo-theme-volantis/issues" user="xaoxuu"></div></div></details><details class="folder" index="1"><summary><span>筛选最近3条todo</span></summary><div class="body"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?labels=todo&per_page=3"></div></div></details><details class="folder" index="2"><summary><span>筛选评论最多的3条建议</span></summary><div class="body"><div class="tag-plugin timeline stellar-timeline-api" api="https://api.github.com/repos/volantis-x/hexo-theme-volantis/issues?labels=feature-request&per_page=3&sort=comments"></div></div></details></div><p>上述示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% folders %&#125;</span><br><span class="line">&lt;!-- 只显示某个人的数据 --&gt;</span><br><span class="line">&#123;% timeline user:xaoxuu api:https://api.github.com/repos/volantis-x/hexo-theme-volantis/issues %&#125;&#123;% endtimeline %&#125;</span><br><span class="line">&lt;!-- 筛选最近3条todo --&gt;</span><br><span class="line">&#123;% timeline api:https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues?labels=todo&amp;per_page=3 %&#125;&#123;% endtimeline %&#125;</span><br><span class="line">&lt;!-- 筛选评论最多的3条建议 --&gt;</span><br><span class="line">&#123;% timeline api:https://api.github.com/repos/volantis-x/hexo-theme-volantis/issues?labels=feature-request&amp;per_page=3&amp;sort=comments %&#125;&#123;% endtimeline %&#125;</span><br><span class="line">&#123;% endfolders %&#125;</span><br></pre></td></tr></table></figure><p>更多用法详见：</p><div class="tag-plugin link dis-select"><a class="link-card plain" title="GitHub&nbsp;REST&nbsp;API" href="https://docs.github.com/en/rest/issues/issues#list-issues-assigned-to-the-authenticated-user" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">GitHub&nbsp;REST&nbsp;API</span><span class="cap link fs12">https://docs.github.com/en/rest/issues/issues#list-issues-assigned-to-the-authenticated-user</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="Friends（友链组标签）"><a href="#Friends（友链组标签）" class="headerlink" title="Friends（友链组标签）"></a>Friends（友链组标签）</h2><div class="tag-plugin users-wrap"><div class="group-body"><div class="user-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://xaoxuu.com"><img src="https://bu.dusays.com/2021/09/24/2f74810ceb3d3.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/avatar/round/3442075.svg&quot;;"/><div class="name"><span>xaoxuu</span></div></a></div><div class="user-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://inkss.cn/"><img src="https://bu.dusays.com/2022/02/23/7d4468f971fb0.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/avatar/round/3442075.svg&quot;;"/><div class="name"><span>枋柚梓</span></div></a></div><div class="user-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://blog.mhuig.top/"><img src="https://bu.dusays.com/2022/10/23/63552e00b1e60.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/avatar/round/3442075.svg&quot;;"/><div class="name"><span>MHuiG</span></div></a></div><div class="user-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://colsrch.cn"><img src="https://bu.dusays.com/2022/02/23/cb173cbdcc7c6.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/avatar/round/3442075.svg&quot;;"/><div class="name"><span>Colsrch</span></div></a></div><div class="user-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://dusays.com"><img src="https://cdn.dusays.com/avatar.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/avatar/round/3442075.svg&quot;;"/><div class="name"><span>杜老师说</span></div></a></div><div class="user-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://weekdaycare.cn"><img src="https://api.iconify.design/line-md:sunny-outline-twotone-loop.svg?color=%23eb4600" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/avatar/round/3442075.svg&quot;;"/><div class="name"><span>星日语</span></div></a></div></div></div><p>您可以在任何位置插入友链组，支持静态数据和动态数据，静态数据需要写在数据文件中：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/links.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;开源大佬&#x27;</span><span class="string">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">某某某</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://</span></span><br><span class="line">      <span class="attr">screenshot:</span></span><br><span class="line">      <span class="attr">avatar:</span></span><br><span class="line">      <span class="attr">description:</span></span><br></pre></td></tr></table></figure><p>在需要的位置这样写：</p><figure class="highlight md"><figcaption><span>示例写法</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% friends 开源大佬 %&#125;</span><br></pre></td></tr></table></figure><h3 id="实现动态友链"><a href="#实现动态友链" class="headerlink" title="实现动态友链"></a>实现动态友链</h3><p>从 <a href="https://github.com/xaoxuu/issues-json-generator">xaoxuu&#x2F;issues-json-generator</a> 作为模板克隆或者 fork 仓库</p><p>修改 <code>config.yml</code> 并打开 github action 的运行权限</p><figure class="highlight yaml"><figcaption><span>config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 要抓取的 issues 配置</span></span><br><span class="line"><span class="attr">issues:</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">xaoxuu/friends</span> <span class="comment"># 仓库持有者/仓库名（改成自己的）</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">active</span> <span class="comment"># 筛选具有 active 标签的 issue ，取消此项则会提取所有 open 状态的 issue</span></span><br><span class="line">  <span class="attr">sort:</span> <span class="comment"># updated-desc # 排序，按最近更新，取消此项则按创建时间排序</span></span><br></pre></td></tr></table></figure><p>不出意外的话，仓库中已经配置好了 issue 模板，只需要在模板中指定的位置填写信息就可以了。然后在自己的仓库里提交一个 issue 并将 <code>Label</code> 设置为 <code>active</code> 进行测试。</p><p>提交完 issue 一分钟左右，如果仓库中出现了 <code>output</code> 分支提交，可以点击查看一下文件内容是否已经包含了刚刚提交的 issue 中的数据，如果包含，那么前端页面就可以使用友链数据了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% friends api:https://raw.githubusercontent.com/xaoxuu/friends/output/v2/data.json %&#125;</span><br></pre></td></tr></table></figure><h3 id="数据托管"><a href="#数据托管" class="headerlink" title="数据托管"></a>数据托管</h3><div class="tag-plugin note" color="light"><div class="title"><strong>特别感谢</strong></div><div class="body"><p>特别感谢小冰博客的加速访问方案，解决了直接请求 GitHub API 速度过慢的问题，详见 <a href="https://zfe.space/post/python-issues-api.html">小冰博客</a> 的教程。</p></div></div><p>支持把数据托管到任何其他地方来使用，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% friends api:https://api.vlts.cc/output_data/v2/xaoxuu/friends %&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="warning"><div class="title"><strong>Stellar 1.13.0</strong></div><div class="body"><p>动态数据 API 升级至 v2 版本，原使用 issue-api 仓库的需要将友链仓库同步更新。<br>v1 版本已经停止维护。</p></div></div><blockquote><p>你可以有 N 种办法加速访问 GitHub 仓库里的文件。</p></blockquote><h2 id="Sites（网站卡片组标签）"><a href="#Sites（网站卡片组标签）" class="headerlink" title="Sites（网站卡片组标签）"></a>Sites（网站卡片组标签）</h2><div class="tag-plugin sites-wrap"><div class="group-body"><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.macbl.com"><img src="/assets/bookmark/mac/macbl-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/mac/macbl-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">MacBL</span><span class="desc">马可菠萝 - 分享你喜欢的MAC应用</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://xclient.info"><img src="/assets/bookmark/mac/xclient-screenshot.jpg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/mac/xclient-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">Xclient</span><span class="desc">精品MAC应用分享</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://appstorrent.ru"><img src="/assets/bookmark/mac/appstorrent-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="/assets/bookmark/mac/appstorrent-icon.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">appstorrent</span><span class="desc">https://appstorrent.ru</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://macapp.org.cn/app/"><img src="/assets/bookmark/mac/macapp.org-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">MacApp分享频道</span><span class="desc">https://macapp.org.cn/app/</span></div></a></div><div class="site-card"><a class="card-link" target="_blank" rel="external nofollow noopener noreferrer" href="https://www.macyy.cn/resources"><img src="/assets/bookmark/mac/macyy-screenshot.png" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/cover/76b86c0226ffd.svg&quot;;"/><div class="info"><img src="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg" onerror="javascript:this.removeAttribute(&quot;data-src&quot;);this.src=&quot;https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg&quot;;"/><span class="title">MACYY</span><span class="desc">https://www.macyy.cn/resources</span></div></a></div></div></div><p>您可以在任何位置插入网站卡片组，支持静态数据和动态数据，静态数据需要写在数据文件中：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/links.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;分组名&#x27;</span><span class="string">:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">某某某</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://</span></span><br><span class="line">      <span class="attr">screenshot:</span></span><br><span class="line">      <span class="attr">avatar:</span></span><br><span class="line">      <span class="attr">description:</span></span><br></pre></td></tr></table></figure><p>在需要的位置这样写：</p><figure class="highlight md"><figcaption><span>示例写法</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% sites 分组名 %&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="warning"><div class="title"><strong>Stellar v1.13.0</strong></div><div class="body"><p>原 friends 和 sites 标签数据合并至 <code>links.yml</code> 文件，动态数据使用方法同友链，数据源格式相同，与友链共享数据，仅样式不同，也可以用 <code>sites</code> 标签做友链。</p></div></div><h2 id="GitHub-Card（GitHub卡片标签）"><a href="#GitHub-Card（GitHub卡片标签）" class="headerlink" title="GitHub Card（GitHub卡片标签）"></a>GitHub Card（GitHub卡片标签）</h2><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.xaoxuu.com/api/?username=xaoxuu&&show_owner=true"/></a></div><div class="tag-plugin ghcard"><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu/hexo-theme-stellar"><img src="https://github-readme-stats.xaoxuu.com/api/pin/?username=xaoxuu&repo=hexo-theme-stellar&theme=dark&show_owner=true"/></a></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% ghcard xaoxuu %&#125;</span><br><span class="line">&#123;% ghcard xaoxuu/hexo-theme-stellar theme:dark %&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin link dis-select"><a class="link-card plain" title="GitHub&nbsp;Card&nbsp;API" href="https://github.com/anuraghazra/github-readme-stats" target="_blank" rel="external nofollow noopener noreferrer" cardlink autofill="icon"><div class="left"><span class="title">GitHub&nbsp;Card&nbsp;API</span><span class="cap link fs12">https://github.com/anuraghazra/github-readme-stats</span></div><div class="right"><div class="lazy img" data-bg="https://fastly.jsdelivr.net/gh/cdn-x/placeholder@1.0.1/link/8f277b4ee0ecd.svg"></div></div></a></div><h2 id="Navbar（导航栏标签）"><a href="#Navbar（导航栏标签）" class="headerlink" title="Navbar（导航栏标签）"></a>Navbar（导航栏标签）</h2><p>文章内也可以插入一个导航栏：</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% navbar [<span class="string">文章</span>](<span class="link">/</span>) [<span class="string">项目</span>](<span class="link">/wiki/</span>) [<span class="string">留言</span>](<span class="link">#comments</span>) [<span class="string">GitHub</span>](<span class="link">https://github.com/xaoxuu/</span>) %&#125;</span><br></pre></td></tr></table></figure><div class="tag-plugin navbar"><nav class="cap"><a href="/">文章</a><a href="/wiki/">项目</a><a href="#comments">留言</a><a href="https://github.com/xaoxuu/">GitHub</a></nav></div><h2 id="About（关于标签）"><a href="#About（关于标签）" class="headerlink" title="About（关于标签）"></a>About（关于标签）</h2><p>方便在关于页面显示一段图文信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% about avatar:/assets/xaoxuu/avatar/rect-256@2x.png height:80px %&#125;</span><br><span class="line"></span><br><span class="line">&lt;img height=&quot;32px&quot; alt=&quot;XAOXUU&quot; src=&quot;/assets/xaoxuu/logo/180x30@2x.png&quot;&gt;</span><br><span class="line"></span><br><span class="line">**如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。**</span><br><span class="line"></span><br><span class="line">XAOXUU 目前是一个 iOS 开发者，代表作品有：ProHUD、ValueX 等。在业余时间也开发了 Stellar 博客主题，更多的作品可以去项目主页查看，希望大家喜欢～</span><br><span class="line"></span><br><span class="line">&#123;% navbar [文章](/) [项目](/wiki/) [留言](#comments) [GitHub](https://github.com/xaoxuu/) %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endabout %&#125;</span><br></pre></td></tr></table></figure><h2 id="Frame（设备框架标签）"><a href="#Frame（设备框架标签）" class="headerlink" title="Frame（设备框架标签）"></a>Frame（设备框架标签）</h2><div class="tag-plugin video-wrap"><div class="frame-wrap" id="iphone11"focus="top"><video poster="/assets/wiki/prohud/toast/demo-loading.png" playsinline="" muted="" loop="" autoplay="" preload="metadata"><source src="/assets/wiki/prohud/toast/demo-loading.mp4" type="video/mp4"></video><div class="frame"></div></div></div><figure class="highlight md"><figcaption><span>示例写法</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% frame iphone11 img:/assets/wiki/prohud/toast/demo-loading.png video:/assets/wiki/prohud/toast/demo-loading.mp4 focus:top %&#125;</span><br></pre></td></tr></table></figure><p>目前仅支持 iphone11 如果您有 iPhone12、iPad、Mac 等设备模型的 svg 图片，可以发给我进行适配。</p><h2 id="Tabs（分栏标签）"><a href="#Tabs（分栏标签）" class="headerlink" title="Tabs（分栏标签）"></a>Tabs（分栏标签）</h2><p>这个标签移植自 <a href="https://theme-next.js.org/docs/tag-plugins/tabs.html">NexT</a> 主题，但做了以下修改：</p><ul><li>支持设置 <code>align:center</code> 来使内容居中</li><li>设置默认激活的标签方式为 <code>active:1</code> 而非 <code>, 1</code>（使用默认格式降低学习成本，且显式声明可读性更强）</li><li>不需要 <code>&lt;!-- endtab --&gt;</code> 来作为结束标识（因为 Stellar 会自动判断）</li><li>不需要 <code>tabs id</code> 来保证唯一性（因为 Stellar 会设置唯一标识）</li><li>不支持 <code>@icon</code> 方式设置图标（因为 Stellar 不再内置 <code>fontawesome</code> 图标库）</li><li>轮廓样式简化，可以搭配其它容器类标签嵌套使用。</li></ul><div class="tag-plugin tabs" align="center"id="tab_22""><ul class="nav-tabs"><li class="tab active"><a href="#tab_22-1">演示效果</a></li><li class="tab"><a href="#tab_22-2">示例代码</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab_22-1"><div class="tag-plugin tabs" align="center"id="tab_21""><ul class="nav-tabs"><li class="tab"><a href="#tab_21-1">图片</a></li><li class="tab active"><a href="#tab_21-2">代码块</a></li><li class="tab"><a href="#tab_21-3">表格</a></li></ul><div class="tab-content"><div class="tab-pane" id="tab_21-1"><div class="tag-plugin image"><div class="image-bg"><img src="/assets/wiki/stellar/photos/hello@1x.png" style="width:300px;"/></div></div></div><div class="tab-pane active" id="tab_21-2"><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> x <span class="operator">=</span> <span class="number">123</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab_21-3"><table><thead><tr><th>a</th><th>b</th><th>c</th></tr></thead><tbody><tr><td>a1</td><td>b1</td><td>c1</td></tr><tr><td>a2</td><td>b2</td><td>c2</td></tr></tbody></table></div></div></div></div><div class="tab-pane" id="tab_22-2"><script src="https://gist.github.xaox.cc/xaoxuu/cfd4e9645047115c6aa9b19cd9b28e97.js"></script></div></div></div><h2 id="Swiper（轮播标签）"><a href="#Swiper（轮播标签）" class="headerlink" title="Swiper（轮播标签）"></a>Swiper（轮播标签）</h2><p>默认一张图片是 50% 宽度，通过设置 <code>width:min</code> 设置为 25% 宽度，<code>width:max</code> 设置为 100% 宽度。</p><h3 id="最大图片宽度"><a href="#最大图片宽度" class="headerlink" title="最大图片宽度"></a>最大图片宽度</h3><div class="tag-plugin swiper-container" id="swiper-api" width="max"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1483728642387-6c3bdd6c93e5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2076&q=80"></div><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1502790671504-542ad42d5189?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80"></div><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1494253188410-ff0cdea5499e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% swiper width:max %&#125;</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1483728642387-6c3bdd6c93e5?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2076&amp;q=80</span>)</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1502790671504-542ad42d5189?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1770&amp;q=80</span>)</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1494253188410-ff0cdea5499e?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1770&amp;q=80</span>)</span><br><span class="line">&#123;% endswiper %&#125;</span><br></pre></td></tr></table></figure><h3 id="最小图片宽度"><a href="#最小图片宽度" class="headerlink" title="最小图片宽度"></a>最小图片宽度</h3><div class="tag-plugin swiper-container" id="swiper-api" width="min"><div class="swiper-wrapper"><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1625171515821-1870deb2743b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80"></div><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1528283648649-33347faa5d9e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80"></div><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1542272201-b1ca555f8505?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80"></div><div class="swiper-slide"><img no-lazy src="https://images.unsplash.com/photo-1524797905120-92940d3a18d6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80"></div></div><div class="swiper-pagination"></div><div class="swiper-button-prev blur"></div><div class="swiper-button-next blur"></div></div><figure class="highlight md"><figcaption><span>写法如下</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% swiper width:min %&#125;</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1625171515821-1870deb2743b?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80</span>)</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1528283648649-33347faa5d9e?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80</span>)</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1542272201-b1ca555f8505?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80</span>)</span><br><span class="line">![](<span class="link">https://images.unsplash.com/photo-1524797905120-92940d3a18d6?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80</span>)</span><br><span class="line">&#123;% endswiper %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>基本信息配置</title>
      <link href="/wiki/stellar/theme-settings/index.html"/>
      <url>/wiki/stellar/theme-settings/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="站点信息"><a href="#站点信息" class="headerlink" title="站点信息"></a>站点信息</h2><p>Stellar 会读取站点根目录下的 <code>_config.yml</code> 文件中的一些信息来生成您的网站，所以您需要修改以下值：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">您的网站名称</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">您的头像链接</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">您的网站icon</span></span><br><span class="line"><span class="comment"># 多语言</span></span><br><span class="line"><span class="attr">language:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zh-CN</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">en</span></span><br></pre></td></tr></table></figure><h3 id="多语言设置"><a href="#多语言设置" class="headerlink" title="多语言设置"></a>多语言设置</h3><p>主题中的默认文案都支持多语言，以简体中文为例，您可以在 <code>themes/stellar/languages/zh-CN.yml</code> 中修改文案。</p><p>更改网站优先语言，需要在站点根目录下的配置文件中进行修改：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zh-CN</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">en</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zh-TW</span></span><br></pre></td></tr></table></figure><h2 id="创建主题配置文件"><a href="#创建主题配置文件" class="headerlink" title="创建主题配置文件"></a>创建主题配置文件</h2><p>在博客根目录的 <code>_config.yml</code> 文件旁边新建一个文件： <code>_config.stellar.yml</code> ，在这个文件中的配置信息优先级高于主题文件夹中的配置文件。</p><h2 id="头部标签自定义"><a href="#头部标签自定义" class="headerlink" title="头部标签自定义"></a>头部标签自定义</h2><h3 id="Open-Graph"><a href="#Open-Graph" class="headerlink" title="Open Graph"></a>Open Graph</h3><p>默认生成 Open Graph 标签，如果您不希望生成它，可以在主题配置文件中关闭：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">open_graph:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">twitter_id:</span> <span class="comment"># for open_graph meta</span></span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>自定义小组件的配置与使用</title>
      <link href="/wiki/stellar/widgets/index.html"/>
      <url>/wiki/stellar/widgets/index.html</url>
      
        <content type="html"><![CDATA[<p>侧边栏组件库在 <code>_data/widgets.yml</code> 文件中，配置和使用是两个部分，使用较为简单，即在需要的地方指定组件名：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">sidebar:</span> [<span class="string">&#x27;我的小组件1&#x27;</span>, <span class="string">&#x27;我的小组件2&#x27;</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>也可以在配置文件中指定各个页面默认使用哪些组件：</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">    <span class="attr">index:</span> [<span class="string">welcome</span>, <span class="string">recent</span>, <span class="string">timeline</span>] <span class="comment"># for home/wiki/categories/tags/archives/404 pages</span></span><br><span class="line">    <span class="attr">page:</span> [<span class="string">welcome</span>, <span class="string">toc</span>] <span class="comment"># for pages using &#x27;layout:page&#x27;</span></span><br><span class="line">    <span class="attr">post:</span> [<span class="string">toc</span>, <span class="string">ghrepo</span>, <span class="string">ghissues</span>] <span class="comment"># for pages using &#x27;layout:post&#x27;</span></span><br><span class="line">    <span class="attr">wiki:</span> [<span class="string">toc</span>, <span class="string">ghrepo</span>, <span class="string">ghissues</span>, <span class="string">related</span>] <span class="comment"># for pages using &#x27;layout:wiki&#x27;</span></span><br></pre></td></tr></table></figure><div class="tag-plugin note" color="red"><div class="title"><strong>Stellar 1.11.0</strong></div><div class="body"><p>侧边栏组件配置从<code> _config.yml</code> 中转移到数据文件 <code>_data/widgets.yml</code> 中，且仅支持在数据文件中配置。同时布局由 <code>sidebar.widgets_layout</code> 改名为 <code>sidebar.widgets</code></p></div></div><p>各种组件配置方法如下：</p><h2 class="tag-plugin quot" type="text" id="toc"><a href="#toc" class="headerlink" title="toc"></a>toc</h2><p>这是文章&#x2F;文档的目录树组件，显示文章和文档的目录结构：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">toc</span></span><br><span class="line">  <span class="attr">list_number:</span> <span class="literal">false</span> <span class="comment"># 是否显示序号</span></span><br><span class="line">  <span class="attr">min_depth:</span> <span class="number">2</span> <span class="comment"># 建议不要低于 2 即从 H2 标签开始解析（H1标签用于文章大标题）</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">5</span> <span class="comment"># 5 代表最多解析到 H5 标签</span></span><br><span class="line">  <span class="attr">fallback:</span> <span class="string">recent</span> <span class="comment"># Use a backup widget when toc does not exist.</span></span><br></pre></td></tr></table></figure><p><code>toc</code> 的 <code>fallback</code> 默认是 <code>recent</code>，即一篇文章没有 <code>TOC</code> 的时候会显示一个 <code>recent</code></p><h2 class="tag-plugin quot" type="text" id="recent"><a href="#recent" class="headerlink" title="recent"></a>recent</h2><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">recent:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">recent</span></span><br><span class="line">  <span class="attr">rss:</span> <span class="comment"># /atom.xml # npm i hexo-generator-feed</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">5</span> <span class="comment"># Count of posts</span></span><br></pre></td></tr></table></figure><p>在 <code>wiki</code> 板块显示的是最近更新的 <code>wiki</code> 页面，其余地方显示最近更新的文章。</p><p><code>hexo</code> 的覆盖规则是合并而不是替换，所以若不想使用 <code>recent</code>，除了在 <code>_config.stellar.yml</code> 中删除 <code>recent</code> 你还需要将此处的 <code>recent</code> 置空，即</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">recent:</span></span><br><span class="line"><span class="comment">#  layout: recent</span></span><br><span class="line"><span class="comment">#  rss: # /atom.xml # npm i hexo-generator-feed</span></span><br><span class="line"><span class="comment">#  limit: 5 # Count of posts</span></span><br></pre></td></tr></table></figure><p>然后自己需要的地方用自己另建的一个 <code>my_recent</code> 组件</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">my_recent:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">recent</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><h2 class="tag-plugin quot" type="text" id="related"><a href="#related" class="headerlink" title="related"></a>related</h2><p>相关文档组件，用于显示具有相同 <code>tags</code> 的其它项目列表，暂不支持自定义内容：</p><div class="tag-plugin note" color="red"><div class="title"><strong>Stellar 1.12.0</strong></div><div class="body"><p>1.12.0 已将 <code>wiki_more</code>，更名为 <code>related</code></p></div></div><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">related:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">related</span></span><br></pre></td></tr></table></figure><h2 class="tag-plugin quot" type="text" id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h2><p>这是一个自由度很高的标签，可以显示 <a href="https://docs.github.com/cn/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">markdown</a> 文本内容：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">welcome:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">markdown</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">欢迎欢迎</span></span><br><span class="line">  <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    欢迎使用 [Stellar](https://github.com/xaoxuu/hexo-theme-stellar/) 主题，下面是您的入门指南，祝您使用愉快！</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    **第一步**</span></span><br><span class="line"><span class="string">    创建 `blog/_config.stellar.yml` 文件，在此文件中填写需要自定义的主题配置。</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    **第二步**</span></span><br><span class="line"><span class="string">    创建 `blog/source/_data/widgets.yml` 文件，此文件中填写需要自定义的侧边栏组件，例如 `welcome` 组件。</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    如果有任何疑问，请先查阅 [文档](https://xaoxuu.com/wiki/stellar/)，如果文档中没有提供，请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues/) 向开发中询问。</span></span><br></pre></td></tr></table></figure><h2 class="tag-plugin quot" type="text" id="tagcloud"><a href="#tagcloud" class="headerlink" title="tagcloud"></a>tagcloud</h2><p>标签云组件：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">tagcloud:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">tagcloud</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">标签云</span></span><br><span class="line">  <span class="comment"># 标签云配置</span></span><br><span class="line">  <span class="attr">min_font:</span> <span class="number">12</span></span><br><span class="line">  <span class="attr">max_font:</span> <span class="number">24</span></span><br><span class="line">  <span class="attr">amount:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">orderby:</span> <span class="string">name</span></span><br><span class="line">  <span class="attr">order:</span> <span class="number">1</span> <span class="comment"># 1, sac 升序；-1, desc 降序</span></span><br><span class="line">  <span class="attr">color:</span> <span class="literal">false</span> <span class="comment"># 使用颜色</span></span><br><span class="line">  <span class="attr">start_color:</span>  <span class="comment"># 开始的颜色。您可使用十六进位值（&#x27;#b700ff&#x27;），rgba（rgba(183, 0, 255, 1)），hsla（hsla(283, 100%, 50%, 1)）或 颜色关键字。此变量仅在 color 参数开启时才有用。</span></span><br><span class="line">  <span class="attr">end_color:</span>  <span class="comment"># 结束的颜色。您可使用十六进位值（&#x27;#b700ff&#x27;），rgba（rgba(183, 0, 255, 1)），hsla（hsla(283, 100%, 50%, 1)）或 颜色关键字。此变量仅在 color 参数开启时才有用。</span></span><br><span class="line">  <span class="attr">show_count:</span> <span class="literal">false</span> <span class="comment"># 显示每个标签的文章总数</span></span><br></pre></td></tr></table></figure><h2 class="tag-plugin quot" type="text" id="ghuser"><a href="#ghuser" class="headerlink" title="ghuser"></a>ghuser</h2><p>显示 GitHub 用户基础信息：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">ghuser:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">ghuser</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://api.github.com</span> <span class="comment"># 若有 api.github.com 镜像可填，否则保持默认</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">github</span> <span class="comment"># your github login username</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="literal">true</span> <span class="comment"># show avatar or not</span></span><br><span class="line">  <span class="attr">menu:</span> <span class="literal">true</span> <span class="comment"># show menu or not</span></span><br></pre></td></tr></table></figure><h2 class="tag-plugin quot" type="text" id="ghrepo"><a href="#ghrepo" class="headerlink" title="ghrepo"></a>ghrepo</h2><p>显示 GitHub 仓库基础信息，需要搭配 <code>repo</code> 一起使用：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">ghrepo:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">ghrepo</span></span><br></pre></td></tr></table></figure><p>需要在需要显示的文章页面的 <code>front-matter</code> 中按照如下格式写上仓库持有者和仓库名：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>如果需要显示在 <code>wiki</code> 项目中，则在 <code>_data/projects.yml</code> 中填写到对应项目的信息中：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Stellar</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;每个人的独立博客 | Designed by xaoxuu&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><h2 class="tag-plugin quot" type="text" id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h2><p>时间线组件，这个功能在 <mark class="tag-plugin mark" color="dark">1.12.0</mark> 版本后开始支持：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">timeline:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">近期动态</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://api.github.com/repos/xaoxuu/hexo-theme-stellar/issues</span> <span class="comment"># 若你想限制数量，在api链接后面加上?per_page=1指限制为1条</span></span><br><span class="line">  <span class="attr">user:</span> <span class="comment"># 是否过滤只显示某个人发布的内容，如果要筛选多人，用英文逗号隔开</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="comment"># title,footer # 隐藏标题或底部 # 此功能需要 Stellar v1.13.0</span></span><br></pre></td></tr></table></figure><p>现在侧边栏不仅能放置近期动态，还可以放置朋友圈文章，这个功能在 <mark class="tag-plugin mark" color="dark">1.13.0</mark> 版本后开始支持。</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 愣着干啥，新建啊</span></span><br><span class="line"><span class="string">&#x27;朋友圈&#x27;</span><span class="string">:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">近期动态</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://api.vlts.cc/output_data/v1/xaoxuu/friends-rss-generator</span> <span class="comment"># 你的朋友圈数据文件地址</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">fcircle</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="comment"># 可通过这个限制最大数量</span></span><br></pre></td></tr></table></figure><p>然后你可以在 <code>_config.stellar.yml</code> 中设置引用</p><figure class="highlight yaml"><figcaption><span>blog/_config.stellar.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">widgets:</span></span><br><span class="line">    <span class="attr">index:</span> [<span class="string">welcome</span>, <span class="string">朋友圈</span>]</span><br></pre></td></tr></table></figure><p>或者在你需要显示的页面引入，页面内引入优先于配置文件引入：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">sidebar:</span> [<span class="string">ghuser</span>, <span class="string">search</span>, <span class="string">朋友圈</span>]</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="专用组件"><a href="#专用组件" class="headerlink" title="专用组件"></a>专用组件</h2><p>需要在多个地方使用的组件配置在数据文件 <code>_data/widgets.yml</code> 中，只在某一篇文章中使用的组件可以配置在 <code>front-matter</code> 中，例如：</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">某一篇文章</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">toc</span> <span class="comment"># 只写一个字符串代表引用对应的通用组件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">layout:</span> <span class="string">markdown</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;重要通知 [NOTE.2022-09]&#x27;</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      请不要原封不动的把本站内容复制到贵站中使用，这样一方面不尊重原作者，另一方面也会因为存在大量重复内容影响贵站收录甚至降权。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="string">从2022年9月起本站已不再开源，已经持有源码副本或`fork`的朋友请及时删除以防止被他人恶意搬运的情况继续发生。</span></span><br><span class="line">      </span><br><span class="line">      [<span class="string">&gt;</span> <span class="string">了解详情</span>]<span class="string">(https://github.com/xaoxuu/xaoxuu.github.io#readme)</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>在 <code>front-matter</code> 中创建的专用组件应至少包含 <code>layout</code> 或者 <code>override</code> 属性，如果需要继承自某个通用组件，可以在 <code>override</code> 属性写上对应通用组件的名字（对应的通用组件必须要有 <code>layout</code> 属性）。</p><figure class="highlight yaml"><figcaption><span>blog/source/_posts/xxx.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">某一篇文章</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">toc</span> <span class="comment"># 只写一个字符串代表引用对应的通用组件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">override:</span> <span class="string">my_timeline_lite</span></span><br><span class="line">    <span class="attr">api:</span> <span class="string">https://xxx</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>对应的通用组件是：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/widgets.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">my_timeline_lite:</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">timeline</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">近期动态</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">xaoxuu</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="string">title,footer</span></span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用文档系统</title>
      <link href="/wiki/stellar/wiki-settings/index.html"/>
      <url>/wiki/stellar/wiki-settings/index.html</url>
      
        <content type="html"><![CDATA[<p>Stellar 独创了其它 Hexo 主题所没有的 Wiki 系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。</p><h2 id="创建一个项目"><a href="#创建一个项目" class="headerlink" title="创建一个项目"></a>创建一个项目</h2><p>在 <code>blog/source/</code> 文件夹中创建一个 <code>wiki</code> 文件夹，在其中放入各个项目的文档。以 Stellar 项目为例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blog/source/wiki/stellar/index.md</span><br></pre></td></tr></table></figure><p>设置布局模板和项目名称：</p><figure class="highlight yaml"><figcaption><span>blog/source/wiki/stellar/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">wiki</span>  <span class="comment"># 使用wiki布局模板</span></span><br><span class="line"><span class="attr">wiki:</span> <span class="string">Stellar</span> <span class="comment"># 这是项目名</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">这是分页标题</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>建议用这个文件作为项目的主页，并在文件夹内创建其它分页。Stellar 会把同一个项目的所有分页中 <code>order</code> 最小的一页作为项目的主页（其默认值为0）。</p><h2 id="完善项目信息"><a href="#完善项目信息" class="headerlink" title="完善项目信息"></a>完善项目信息</h2><p>在数据文件中创建项目文件，以 Stellar 为例：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Stellar</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Stellar</span> <span class="bullet">-</span> <span class="string">每个人的独立博客</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;每个人的独立博客 | Designed by xaoxuu&#x27;</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">博客主题</span></span><br><span class="line">  <span class="attr">cover:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">/assets/wiki/stellar/icon.svg</span></span><br><span class="line">    <span class="attr">small:</span> <span class="string">112px</span></span><br><span class="line">    <span class="attr">large:</span> <span class="string">240px</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">Stellar</span> <span class="string">是一个内置</span> <span class="string">wiki</span> <span class="string">系统的</span> <span class="string">hexo</span> <span class="string">主题，适合综合型站点使用。同时也拥有简约而精美的视觉设计和丰富的标签插件，帮助您简单从容地应对各种场合。</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br><span class="line">  <span class="attr">comment_title:</span> <span class="string">&#x27;评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。&#x27;</span></span><br><span class="line">  <span class="attr">beaudar:</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br><span class="line">    <span class="attr">&#x27;issue-term&#x27;:</span> <span class="string">&#x27;Q &amp; A&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="是否显示封面"><a href="#是否显示封面" class="headerlink" title="是否显示封面"></a>是否显示封面</h3><p>项目可以显示一个全屏封面，封面占据一个屏幕的高度，会居中依次显示项目的 logo、标题、描述。开启项目封面方法如下：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">cover:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">/assets/wiki/stellar/icon.svg</span></span><br><span class="line">    <span class="attr">small:</span> <span class="string">120px</span></span><br><span class="line">    <span class="attr">large:</span> <span class="string">240px</span></span><br></pre></td></tr></table></figure><p>如果 logo 中已经包含了项目标题，可以这样设置不显示项目标题：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">cover:</span> [<span class="string">logo</span>, <span class="string">description</span>]</span><br></pre></td></tr></table></figure><h3 id="项目文档标签"><a href="#项目文档标签" class="headerlink" title="项目文档标签"></a>项目文档标签</h3><p>如果您有很多项目，有些项目是有相关性的，可以相同的 <code>tags</code> 值：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">博客主题</span></span><br></pre></td></tr></table></figure><p>也可以设置多个 <code>tags</code> 值：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">tags:</span> [<span class="string">博客主题</span>, <span class="string">开源项目</span>]</span><br></pre></td></tr></table></figure><h3 id="项目的-GitHub-仓库信息"><a href="#项目的-GitHub-仓库信息" class="headerlink" title="项目的 GitHub 仓库信息"></a>项目的 GitHub 仓库信息</h3><p>设置了 <code>repo</code> 值就会在侧边栏显示项目仓库的相关链接：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br></pre></td></tr></table></figure><h3 id="项目评论设置"><a href="#项目评论设置" class="headerlink" title="项目评论设置"></a>项目评论设置</h3><p>如果希望项目的所有分页使用相同的评论数据，可以在这里覆盖评论配置：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">comment_title:</span> <span class="string">&#x27;评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。&#x27;</span></span><br><span class="line">  <span class="attr">comments:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">beaudar</span></span><br><span class="line">    <span class="attr">beaudar:</span></span><br><span class="line">      <span class="attr">repo:</span> <span class="string">xaoxuu/hexo-theme-stellar</span></span><br><span class="line">      <span class="attr">&#x27;issue-term&#x27;:</span> <span class="string">&#x27;Q &amp; A&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="是否索引"><a href="#是否索引" class="headerlink" title="是否索引"></a>是否索引</h3><p>如果您有些项目希望在项目列表中隐藏，可以设置 <code>index</code> 值：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="attr">index:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="文档排序"><a href="#文档排序" class="headerlink" title="文档排序"></a>文档排序</h2><p>一个项目文档的多个分页之间以 <code>order</code> 的值作为排序依据，数字越小越靠前，最小的是项目主页。</p><h2 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h2><h3 id="侧边栏组件"><a href="#侧边栏组件" class="headerlink" title="侧边栏组件"></a>侧边栏组件</h3><p>如果您希望自定义某个项目的侧边栏组件，可以设置 <code>sidebar</code> 值：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Notes:</span></span><br><span class="line">  <span class="attr">sidebar:</span> [<span class="string">toc</span>]</span><br></pre></td></tr></table></figure><h3 id="对目录树进行分组"><a href="#对目录树进行分组" class="headerlink" title="对目录树进行分组"></a>对目录树进行分组</h3><p>如果您的项目文档分页较多，可以对目录树进行分组：</p><figure class="highlight yaml"><figcaption><span>blog/source/_data/projects.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Stellar:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">sections:</span></span><br><span class="line">    <span class="string">&#x27;快速开始&#x27;</span><span class="string">:</span> [<span class="number">0</span>, <span class="number">99</span>]</span><br><span class="line">    <span class="string">&#x27;基本使用&#x27;</span><span class="string">:</span> [<span class="number">100</span>, <span class="number">199</span>]</span><br><span class="line">    <span class="string">&#x27;文档系统&#x27;</span><span class="string">:</span> [<span class="number">200</span>, <span class="number">299</span>]</span><br><span class="line">    <span class="string">&#x27;进阶设定&#x27;</span><span class="string">:</span> [<span class="number">900</span>, <span class="number">999</span>]</span><br></pre></td></tr></table></figure><p>左边是显示的标题，右边是 <code>order</code> 的区间，例如某页文档的 <code>order</code> 是 <code>150</code>，那么这页文档将会显示在「日常问题解决方案」这个组中。</p><h2 id="修改-wiki-路径"><a href="#修改-wiki-路径" class="headerlink" title="修改 wiki 路径"></a>修改 wiki 路径</h2><p>在根目录中添加 <code>wiki_dir</code> 指定 Wiki 主页的路径：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">wiki_dir:</span> <span class="string">wiki</span></span><br></pre></td></tr></table></figure><p>例如书籍类的“项目”可以改为：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">wiki_dir:</span> <span class="string">books</span></span><br></pre></td></tr></table></figure><p>例如商品&#x2F;产品类的“项目”可以改为：</p><figure class="highlight yaml"><figcaption><span>blog/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">wiki_dir:</span> <span class="string">products</span></span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
  
</search>

{"version":3,"sources":["js/plugins/ghinfo.js"],"names":["GitHubInfo","requestAPI","url","callback","timeout","retryTimes","request","Promise","resolve","reject","status","timer","setTimeout","fetch","then","response","clearTimeout","ok","json","Error","data","error","layout","cfg","el","$","fill","_i","_Object$keys","Object","keys","length","key","find","text","attr","api","idx","getAttribute","undefined","arr","content","obj","els","document","getElementsByClassName","i"],"mappings":"AAAA,aAAA,IAAMA,WAAa,CACjBC,WAAY,SAACC,EAAKC,EAAUC,GAC1B,IAAIC,EAAa,GACjB,SAASC,IACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAS,EACTC,EAAQC,YAAW,WACN,IAAXF,IACFA,EAAS,EACTC,EAAQ,KACRF,EAAO,QACW,GAAdJ,GACFD,IAGN,GAAG,KACHS,MAAMX,GAAKY,MAAK,SAASC,GAOvB,GANe,IAAXL,IACFM,aAAaL,GACbH,EAAQO,GACRJ,EAAQ,KACRD,EAAS,GAEPK,EAASE,GACX,OAAOF,EAASG,OAElB,MAAM,IAAIC,MAAM,+BAClB,IAAGL,MAAK,SAASM,GACff,EAAa,EACbF,EAASiB,EACX,IAAE,UAAO,SAASC,GACZhB,EAAa,GACfA,GAAc,EACdO,YAAW,WACTN,GACF,GAAG,MAEHF,GAEJ,GACF,GACF,CACAE,EACF,EACAgB,OAAQ,SAACC,GACP,IAAMC,EAAKC,EAAEF,EAAIC,IAAI,GACrB,SAASE,EAAKN,GACZ,IAAA,IAAAO,EAAA,EAAAC,EAAgBC,OAAOC,KAAKV,GAAKO,EAAAC,EAAAG,OAAAJ,IAAE,CAA9B,IAAIK,EAAGJ,EAAAD,GACVF,EAAED,GAAIS,KAAK,eAAiBD,GAAKE,KAAKd,EAAKY,IAC3CP,EAAED,GAAIS,KAAK,eAAiBD,GAAKG,KAAK,OAAQf,EAAKY,IACnDP,EAAED,GAAIS,KAAK,cAAgBD,GAAKG,KAAK,MAAOf,EAAKY,GACnD,CACF,CACAhC,WAAWC,WAAWsB,EAAIa,KAAK,SAAShB,GACtC,IAAMiB,EAAMb,EAAGc,aAAa,SAC5B,GAAID,GAAOE,UAAW,CACpB,IAAMC,EAAMpB,EAAKqB,SAAWrB,EAC5B,GAAIoB,GAAOA,EAAIT,OAASM,EAAK,CAC3B,IAAIK,EAAMF,EAAIH,GACdK,EAAI,mBAAqBA,EAAU,KACnChB,EAAKc,EAAIH,GACX,CACF,MACEX,EAAKN,EAET,IAAG,WACH,GACF,GAGFK,GAAE,WAEA,IADA,IAAMkB,EAAMC,SAASC,uBAAuB,sBACnCC,EAAI,EAAGA,EAAIH,EAAIZ,OAAQe,IAAK,CACnC,IAAMtB,EAAKmB,EAAIG,GACTV,EAAMZ,EAAGc,aAAa,OAC5B,GAAW,MAAPF,EAAJ,CAGA,IAAIb,EAAM,IAAIM,OACdN,EAAIC,GAAKA,EACTD,EAAIa,IAAMA,EACVb,EAAG,SAASC,EAAGc,aAAa,SAC5BtC,WAAWsB,OAAOC,EALlB,CAMF,CACF","file":"../../../js/plugins/ghinfo.js","sourcesContent":["const GitHubInfo = {\n  requestAPI: (url, callback, timeout) => {\n    let retryTimes = 5;\n    function request() {\n      return new Promise((resolve, reject) => {\n        let status = 0; // 0 等待 1 完成 2 超时\n        let timer = setTimeout(() => {\n          if (status === 0) {\n            status = 2;\n            timer = null;\n            reject('请求超时');\n            if (retryTimes == 0) {\n              timeout();\n            }\n          }\n        }, 5000);\n        fetch(url).then(function(response) {\n          if (status !== 2) {\n            clearTimeout(timer);\n            resolve(response);\n            timer = null;\n            status = 1;\n          }\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Network response was not ok.');\n        }).then(function(data) {\n          retryTimes = 0;\n          callback(data);\n        }).catch(function(error) {\n          if (retryTimes > 0) {\n            retryTimes -= 1;\n            setTimeout(() => {\n              request();\n            }, 5000);\n          } else {\n            timeout();\n          }\n        });\n      });\n    }\n    request();\n  },\n  layout: (cfg) => {\n    const el = $(cfg.el)[0];\n    function fill(data) {\n      for (let key of Object.keys(data)) {\n        $(el).find(\"[type=text]#\" + key).text(data[key]);\n        $(el).find(\"[type=link]#\" + key).attr(\"href\", data[key]);\n        $(el).find(\"[type=img]#\" + key).attr(\"src\", data[key]);\n      }\n    }\n    GitHubInfo.requestAPI(cfg.api, function(data) {\n      const idx = el.getAttribute('index');\n      if (idx != undefined) {\n        const arr = data.content || data;\n        if (arr && arr.length > idx) {\n          let obj = arr[idx];\n          obj['latest-tag-name'] = obj['name'];\n          fill(arr[idx]);\n        }\n      } else {\n        fill(data);\n      }\n    }, function() {\n    });\n  },\n}\n\n$(function () {\n  const els = document.getElementsByClassName('stellar-ghinfo-api');\n  for (var i = 0; i < els.length; i++) {\n    const el = els[i];\n    const api = el.getAttribute('api');\n    if (api == null) {\n      continue;\n    }\n    var cfg = new Object();\n    cfg.el = el;\n    cfg.api = api;\n    cfg.class = el.getAttribute('class');\n    GitHubInfo.layout(cfg);\n  }\n});\n"]}
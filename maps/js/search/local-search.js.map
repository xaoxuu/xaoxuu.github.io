{"version":3,"sources":["js/search/local-search.js"],"names":["searchFunc","path","filter","searchId","contentId","$","ajax","url","dataType","success","jsonResponse","datas","$input","document","getElementById","$resultContent","addEventListener","resultList","keywords","i","j","result","length","push","slice","join","getAllCombinations","this","value","trim","toLowerCase","split","sort","a","b","innerHTML","forEach","data","_data$title","_data$content","title","content","matches","includes","dataTitle","dataTitleLowerCase","dataContent","dataContentLowerCase","dataUrl","indexTitle","indexContent","firstOccur","keyword","indexOf","searchResult","rank","str","start","end","matchContent","substring","regS","RegExp","replace"],"mappings":"AAAA,aAwBA,IAAIA,WAAa,SAASC,EAAMC,EAAQC,EAAUC,GAahDC,EAAEC,KAAK,CACLC,IAAKN,EACLO,SAAU,OACVC,QAAS,SAASC,GAChB,IAAIC,EAAQD,EACRE,EAASC,SAASC,eAAeX,GACrC,GAAKS,EAAL,CACA,IAAIG,EAAiBF,SAASC,eAAeV,GAE7CQ,EAAOI,iBAAiB,SAAS,WAC/B,IAAIC,EAAa,GACbC,EAtBV,SAA4BA,GAC1B,IAAIC,EAAGC,EAAGC,EAAS,GAEnB,IAAKF,EAAI,EAAGA,EAAID,EAASI,OAAQH,IAC7B,IAAKC,EAAID,EAAI,EAAGC,EAAIF,EAASI,OAAS,EAAGF,IACrCC,EAAOE,KAAKL,EAASM,MAAML,EAAGC,GAAGK,KAAK,MAG9C,OAAOJ,CACT,CAaqBK,CAAmBC,KAAKC,MAAMC,OAAOC,cAAcC,MAAM,MACrEC,MAAK,SAASC,EAAEC,GAAK,OAAOA,EAAEH,MAAM,KAAKT,OAASW,EAAEF,MAAM,KAAKT,MAAQ,IAE1E,GADAP,EAAeoB,UAAY,KACvBR,KAAKC,MAAMC,OAAOP,QAAU,KAIhCX,EAAMyB,SAAQ,SAASC,GAAM,IAAAC,EAAAC,EAC3B,GAAe,QAAXD,EAACD,EAAKG,aAAK,IAAAF,GAAVA,EAAYT,OAAOP,QACP,QAAbiB,EAACF,EAAKI,eAAO,IAAAF,GAAZA,EAAcV,OAAOP,OAA1B,CACA,IAAIoB,EAAU,EACd,IAAIxC,GAAWmC,EAAKpC,KAAK0C,SAASzC,GAAlC,CAGA,IAAI0C,EAAYP,EAAKG,MAAMX,OACvBgB,EAAqBD,EAAUd,cAC/BgB,EAAcT,EAAKI,QACnBM,EAAuBD,EAAYhB,cACnCkB,EAAUX,EAAKpC,KACfgD,GAAc,EACdC,GAAgB,EAChBC,GAAc,EAmBlB,GAjBoB,KAAhBL,GACF5B,EAASkB,SAAQ,SAASgB,GACxBH,EAAaJ,EAAmBQ,QAAQD,GACxCF,EAAeH,EAAqBM,QAAQD,IAExCH,GAAc,GAAKC,GAAgB,KACrCR,GAAW,EACPQ,EAAe,IACjBA,EAAe,GAEbC,EAAa,IACfA,EAAaD,GAGnB,IAGER,EAAU,EAAG,CACf,IAAIY,EAAe,CAAC,EAGpB,GAFAA,EAAaC,KAAOb,EACpBY,EAAaE,IAAM,gBAAiBR,EAAS,uCAAwCJ,EAAW,UAC5FO,GAAc,EAAG,CAEnB,IAAIM,EAAQN,EAAa,GACrBO,EAAMP,EAAa,GAEpBM,EAAQ,IACTA,EAAQ,GAGE,GAATA,IACDC,EAAM,KAGLA,EAAMZ,EAAYxB,SACnBoC,EAAMZ,EAAYxB,QAGpB,IAAIqC,EAAeb,EAAYc,UAAUH,EAAOC,GAG5CG,EAAO,IAAIC,OAAO5C,EAASO,KAAK,KAAM,MAC1CkC,EAAeA,EAAaI,QAAQF,GAAM,SAAST,GACjD,MAAO,gCAAkCA,EAAQ,SACnD,IAEAE,EAAaE,KAAO,oCAAwCG,EAAc,SAC5E,CACAL,EAAaE,KAAO,YACpBvC,EAAWM,KAAK+B,EAClB,CA5DA,CAJ2C,CAiE7C,IACIrC,EAAWK,QAAQ,CACrBL,EAAWe,MAAK,SAASC,EAAGC,GACxB,OAAOA,EAAEqB,KAAOtB,EAAEsB,IACtB,IAEA,IADA,IAAIlC,EAAQ,kCACHF,EAAI,EAAGA,EAAIF,EAAWK,OAAQH,IACrCE,GAAUJ,EAAWE,GAAGqC,IAE1BnC,GAAU,QACVN,EAAeoB,UAAYd,CAC7B,CACF,GA3FuB,CA4FzB,GAEJ","file":"../../../js/search/local-search.js","sourcesContent":["// A local search script with the help of\n// [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)\n// Copyright (C) 2015\n// Joseph Pan <http://github.com/wzpan>\n// Shuhao Mao <http://github.com/maoshuhao>\n// This library is free software; you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as\n// published by the Free Software Foundation; either version 2.1 of the\n// License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful, but\n// WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n// 02110-1301 USA\n//\n// Modified by:\n// Pieter Robberechts <http://github.com/probberechts>\n\n/*exported searchFunc*/\nvar searchFunc = function(path, filter, searchId, contentId) {\n\n  function getAllCombinations(keywords) {\n    var i, j, result = [];\n\n    for (i = 0; i < keywords.length; i++) {\n        for (j = i + 1; j < keywords.length + 1; j++) {\n            result.push(keywords.slice(i, j).join(\" \"));\n        }\n    }\n    return result;\n  }\n\n  $.ajax({\n    url: path,\n    dataType: \"json\",\n    success: function(jsonResponse) {\n      var datas = jsonResponse;\n      var $input = document.getElementById(searchId);\n      if (!$input) { return; }\n      var $resultContent = document.getElementById(contentId);\n\n      $input.addEventListener(\"input\", function(){\n        var resultList = [];\n        var keywords = getAllCombinations(this.value.trim().toLowerCase().split(\" \"))\n          .sort(function(a,b) { return b.split(\" \").length - a.split(\" \").length; });\n        $resultContent.innerHTML = \"\";\n        if (this.value.trim().length <= 0) {\n          return;\n        }\n        // perform local searching\n        datas.forEach(function(data) {\n          if (!data.title?.trim().length) { return }\n          if (!data.content?.trim().length) { return }\n          var matches = 0;\n          if (filter && !data.path.includes(filter)) {\n            return;\n          }\n          var dataTitle = data.title.trim();\n          var dataTitleLowerCase = dataTitle.toLowerCase();\n          var dataContent = data.content;\n          var dataContentLowerCase = dataContent.toLowerCase();\n          var dataUrl = data.path;\n          var indexTitle = -1;\n          var indexContent = -1;\n          var firstOccur = -1;\n          // only match artiles with not empty contents\n          if (dataContent !== \"\") {\n            keywords.forEach(function(keyword) {\n              indexTitle = dataTitleLowerCase.indexOf(keyword);\n              indexContent = dataContentLowerCase.indexOf(keyword);\n\n              if( indexTitle >= 0 || indexContent >= 0 ){\n                matches += 1;\n                if (indexContent < 0) {\n                  indexContent = 0;\n                }\n                if (firstOccur < 0) {\n                  firstOccur = indexContent;\n                }\n              }\n            });\n          }\n          // show search results\n          if (matches > 0) {\n            var searchResult = {};\n            searchResult.rank = matches;\n            searchResult.str = \"<li><a href='\"+ dataUrl +\"'><span class='search-result-title'>\"+ dataTitle +\"</span>\";\n            if (firstOccur >= 0) {\n              // cut out 100 characters\n              var start = firstOccur - 20;\n              var end = firstOccur + 80;\n\n              if(start < 0){\n                start = 0;\n              }\n\n              if(start == 0){\n                end = 100;\n              }\n\n              if(end > dataContent.length){\n                end = dataContent.length;\n              }\n\n              var matchContent = dataContent.substring(start, end);\n\n              // highlight all keywords\n              var regS = new RegExp(keywords.join(\"|\"), \"gi\");\n              matchContent = matchContent.replace(regS, function(keyword) {\n                return \"<span class=\\\"search-keyword\\\">\"+keyword+\"</span>\";\n              });\n\n              searchResult.str += \"<p class=\\\"search-result-content\\\">\" + matchContent +\"...</p>\";\n            }\n            searchResult.str += \"</a></li>\";\n            resultList.push(searchResult);\n          }\n        });\n        if (resultList.length) {\n          resultList.sort(function(a, b) {\n              return b.rank - a.rank;\n          });\n          var result =\"<ul class=\\\"search-result-list\\\">\";\n          for (var i = 0; i < resultList.length; i++) {\n            result += resultList[i].str;\n          }\n          result += \"</ul>\";\n          $resultContent.innerHTML = result;\n        }\n      });\n    }\n  });\n};\n"]}